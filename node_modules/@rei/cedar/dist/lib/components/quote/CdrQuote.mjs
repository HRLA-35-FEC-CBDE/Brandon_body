import clsx from 'clsx';
import space from '../../mixins/space.mjs';
import modifier from '../../mixins/modifier.mjs';
import _indexOfInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/index-of';
import CdrText from '../text/CdrText.mjs';
import style from './styles/CdrQuote.mjs';

var CdrQuote = {
  name: 'CdrQuote',
  components: {
    CdrText: CdrText
  },
  mixins: [modifier, space],
  props: {
    tag: {
      type: String,
      default: 'blockquote',
      validator: function validator(value) {
        var _context;

        return _indexOfInstanceProperty(_context = ['blockquote', 'aside', 'q', 'div']).call(_context, value) >= 0 || false;
      }
    },

    /** Caption summary text */
    summary: String,

    /** Caption credit text */
    citation: String
  },
  data: function data() {
    return {
      style: style
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-quote';
    },
    summaryBlock: function summaryBlock() {
      var h = this.$createElement;
      return this.summary ? h("p", {
        "class": this.style['cdr-quote__summary']
      }, [this.summary]) : '';
    },
    citationBlock: function citationBlock() {
      var h = this.$createElement;
      return this.citation ? h("cdr-text", {
        "attrs": {
          "tag": "cite",
          "modifier": "citation"
        },
        "class": this.style['cdr-quote__citation']
      }, [this.citation]) : '';
    }
  },
  render: function render() {
    var h = arguments[0];
    var Component = this.tag;
    return h(Component, {
      "class": clsx(this.style[this.baseClass], this.modifierClass, this.space)
    }, [this.summaryBlock, this.$slots.default, this.citationBlock]);
  }
};

export default CdrQuote;
