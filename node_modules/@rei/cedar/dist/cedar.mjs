import clsx from 'clsx';
import _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';
import _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';
import _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';
import _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';
import _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';
import _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';
import _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';
import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';
import _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';
import _mergeJSXProps from '@vue/babel-helper-vue-jsx-merge-props';
import _someInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/some';
import _everyInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/every';
import _concatInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/concat';
import _mapInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/map';
import _typeof from '@babel/runtime-corejs3/helpers/esm/typeof';
import _indexOfInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/index-of';
import _sliceInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/slice';
import _Array$isArray from '@babel/runtime-corejs3/core-js-stable/array/is-array';
import _Symbol from '@babel/runtime-corejs3/core-js-stable/symbol';
import debounce from 'lodash-es/debounce';
import _Object$assign from '@babel/runtime-corejs3/core-js-stable/object/assign';
import _bindInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/bind';
import _setTimeout from '@babel/runtime-corejs3/core-js-stable/set-timeout';
import tabbable from 'tabbable';
import toArray from 'lodash-es/toArray';
import _keysInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/keys';
import _toConsumableArray from '@babel/runtime-corejs3/helpers/esm/toConsumableArray';
import _Array$from from '@babel/runtime-corejs3/core-js-stable/array/from';
import _findInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/find';
import delay from 'lodash-es/delay';

/**
 * Validates space separated string against an array of accepted values.
 * @param {String} propValue -- Space separated string (provided by the user)
 * @param {Array} validArr -- Array of values that are considered "valid"
 * @param {Boolean} responsive -- Enables validation of validArr values with '@sm', '@md', '@lg' added to them
 */
function validateProp(propValue, validArr) {
  var responsive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var strArr = propValue.split(' ');
  return _everyInstanceProperty(strArr).call(strArr, function (mod) {
    var modValid = _someInstanceProperty(validArr).call(validArr, function (validStr) {
      if (responsive) {
        return mod === validStr || mod === "".concat(validStr, "@xs") || mod === "".concat(validStr, "@sm") || mod === "".concat(validStr, "@md") || mod === "".concat(validStr, "@lg");
      }

      return mod === validStr;
    });

    if (!modValid) {
      console.error("Invalid prop value: ".concat(mod)); // eslint-disable-line no-console
    }

    return modValid;
  });
}

/**
 * @mixin
 */
var BuildClass = {
  methods: {
    /**
     *
     * @param {String} prop -- the prop to build classes from
     */
    buildClass: function buildClass(prop) {
      var _this = this;

      var propNamePrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var checkBase = 'cdr';

      if (this.baseClass) {
        checkBase = this.baseClass;
      }

      var base = checkBase;
      var propArgsArr = this[prop] ? this[prop].split(' ') : [];
      var builtClasses = [];

      if (propNamePrefix) {
        /*
          prefix class names with prop name
        */
        propArgsArr = _mapInstanceProperty(propArgsArr).call(propArgsArr, function (mod) {
          var _context;

          return _concatInstanceProperty(_context = "".concat(prop)).call(_context, mod);
        });
      }

      if (!this.style) {
        builtClasses = _concatInstanceProperty(builtClasses).call(builtClasses, _mapInstanceProperty(propArgsArr).call(propArgsArr, function (mod) {
          return _this.modifyClassName(base, mod);
        }));
      } else {
        builtClasses = _concatInstanceProperty(builtClasses).call(builtClasses, _mapInstanceProperty(propArgsArr).call(propArgsArr, function (mod) {
          return _this.modifyClassName(base, mod);
        }));
      }

      return builtClasses.join(' ');
    },

    /**
     * Returns a css module class
     */
    moduleClass: function moduleClass(className) {
      return this.style["".concat(className)];
    },

    /**
     * Returns a modified base class
     */
    modifyClassName: function modifyClassName(base, modifier) {
      var _context2, _context3;

      return this.style ? this.moduleClass(_concatInstanceProperty(_context2 = "".concat(base, "--")).call(_context2, modifier)) : _concatInstanceProperty(_context3 = "".concat(base, "--")).call(_context3, modifier);
    }
  }
};

/**
 * #Size Mixin/Interface
 *
 * Functionality for handling/standardizing component sizing.
 *
 *  :Values
 *    :small
 *    :medium (default)
 *    :large
 *
 * @mixin
 */
var size = {
  mixins: [BuildClass],
  props: {
    /**
     * Size state
     */
    size: {
      type: String,
      default: 'medium',
      validator: function validator(value) {
        return validateProp(value, ['small', 'medium', 'large']);
      }
    }
  },
  computed: {
    sizeClass: function sizeClass() {
      var returnClass = this.buildClass('size');
      return returnClass;
    }
  }
};

/**
 * @mixin
 */
var space = {
  props: {
    space: {
      type: String,
      default: ''
    }
  }
};

var style = {"cdr-icon":"cdr-icon_4.0.3","cdr-icon--small":"cdr-icon--small_4.0.3","cdr-icon--large":"cdr-icon--large_4.0.3","cdr-icon--small@xs":"cdr-icon--small@xs_4.0.3","cdr-icon--large@xs":"cdr-icon--large@xs_4.0.3","cdr-icon--small@sm":"cdr-icon--small@sm_4.0.3","cdr-icon--large@sm":"cdr-icon--large@sm_4.0.3","cdr-icon--small@md":"cdr-icon--small@md_4.0.3","cdr-icon--large@md":"cdr-icon--large@md_4.0.3","cdr-icon--small@lg":"cdr-icon--small@lg_4.0.3","cdr-icon--large@lg":"cdr-icon--large@lg_4.0.3","cdr-icon--inherit-color":"cdr-icon--inherit-color_4.0.3"};

var CdrIcon = {
  name: 'CdrIcon',
  mixins: [size, space],
  props: {
    /**
    * The href attribute passed to the use element. Will be prefixed with # automatically
    */
    use: String,

    /**
    * Sets icon fill to "inherit" so as to use parent/ancestor fill color.
    */
    inheritColor: Boolean
  },
  data: function data() {
    return {
      style: style
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-icon';
    },
    inheritColorClass: function inheritColorClass() {
      return this.inheritColor ? this.style['cdr-icon--inherit-color'] : '';
    }
  },
  render: function render() {
    var h = arguments[0];
    var defaultDataObj = {
      attrs: {
        xmlns: 'http://www.w3.org/2000/svg',
        viewBox: '0 0 24 24',
        role: 'presentation'
      }
    };
    var slotDataObj = {};

    if (this.$slots.default) {
      var vNode = this.$slots.default[0];

      if (vNode.tag === 'svg') {
        // keep svg attrs/classes/on/etc to bind to our svg
        slotDataObj = vNode.data; // remove wrapping svg from slot but keep its contents

        this.$slots.default = vNode.children;
      }
    }

    return h("svg", _mergeJSXProps([{}, slotDataObj, {}, defaultDataObj, {
      "class": clsx(this.style[this.baseClass], this.sizeClass, this.inheritColorClass, this.space)
    }]), [this.$slots.default, this.use ? h("use", {
      "attrs": {
        "href": this.use,
        "xlink:href": this.use
      }
    }) : '']);
  }
};

function ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var IconCaretDown = {
  name: 'IconCaretDown',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 16c.273 0 .521-.11.702-.288l5.005-5.005a1 1 0 00-1.414-1.414L12 13.586 7.705 9.29a1 1 0 00-1.412 1.417l4.98 4.98c.182.193.44.313.727.313z"
      }
    })]);
  }
};

/**
 * @mixin
 */
var modifier = {
  mixins: [BuildClass],
  props: {
    /**
     * Space separated list of modifiers. See above for possible values
     */
    modifier: String
  },
  computed: {
    modifierClass: function modifierClass() {
      return this.buildClass('modifier');
    }
  }
};

var style$1 = {"cdr-accordion":"cdr-accordion_4.0.3","cdr-accordion__button":"cdr-accordion__button_4.0.3","cdr-accordion__label":"cdr-accordion__label_4.0.3","cdr-accordion__icon":"cdr-accordion__icon_4.0.3","cdr-accordion__content-container":"cdr-accordion__content-container_4.0.3","cdr-accordion__content":"cdr-accordion__content_4.0.3","cdr-accordion--border-aligned":"cdr-accordion--border-aligned_4.0.3","cdr-accordion--compact":"cdr-accordion--compact_4.0.3","cdr-accordion--focused":"cdr-accordion--focused_4.0.3"};

var CdrAccordion = {
  name: 'CdrAccordion',
  components: {
    IconCaretDown: IconCaretDown
  },
  mixins: [modifier],
  props: {
    /**
     * The unique id of an accordion.
     */
    id: {
      type: String,
      required: true
    },

    /**
     * The readable text on the accordion button.
     */
    label: {
      type: String,
      required: false
    },

    /**
     * Toggle this value to open/close the accordion.
     */
    opened: {
      type: Boolean,
      default: false
    },

    /**
     * Sets a compact style.
     */
    compact: {
      type: Boolean,
      default: false
    },

    /**
     * Sets a border-aligned style.
     */
    borderAligned: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      focused: false,
      maxHeight: this.opened ? 'none' : 0,
      // set maxHeight to none if initialized as open
      style: style$1
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-accordion';
    },
    styleClass: function styleClass() {
      var styles = [];

      if (this.compact) {
        styles.push(this.modifyClassName(this.baseClass, 'compact'));
      }

      if (this.borderAligned) {
        styles.push(this.modifyClassName(this.baseClass, 'border-aligned'));
      }

      return styles.join(' ');
    },
    focusedClass: function focusedClass() {
      return this.focused ? this.modifyClassName(this.baseClass, 'focused') : null;
    },
    isOpenClass: function isOpenClass() {
      return this.opened ? 'open' : 'closed';
    }
  },
  watch: {
    opened: function opened() {
      this.maxHeight = this.opened ? "".concat(this.$refs['accordion-content'].clientHeight, "px") : 0;
    }
  },
  mounted: function mounted() {
    /*
      The intent here is to give maxHeight an actual pixel value when the accordion
      is initialized as open. This guarantees that the open-to-close animation is
      nice and smooth the first time they click it.
    */
    if (this.opened && this.$refs['accordion-content']) {
      this.maxHeight = "".concat(this.$refs['accordion-content'].clientHeight, "px");
    }
  },
  methods: {
    onClick: function onClick(event) {
      this.$emit('accordion-toggle', event);
    },
    onFocus: function onFocus() {
      this.focused = true;
    },
    onBlur: function onBlur() {
      this.focused = false;
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("div", {
      "class": clsx(this.style[this.baseClass], this.modifierClass, this.styleClass, this.focusedClass),
      "attrs": {
        "id": "".concat(this.id, "-accordion")
      },
      "ref": "accordion-container"
    }, [h("button", {
      "class": this.style['cdr-accordion__button'],
      "attrs": {
        "id": this.id,
        "aria-expanded": "".concat(this.opened),
        "aria-controls": "".concat(this.id, "-collapsible")
      },
      "on": {
        "click": this.onClick,
        "focus": this.onFocus,
        "blur": this.onBlur
      }
    }, [h("span", {
      "class": this.style['cdr-accordion__label'],
      "attrs": {
        "id": "".concat(this.id, "-label")
      }
    }, [this.$slots.label || this.label]), h("icon-caret-down", {
      "class": clsx(this.style['cdr-accordion__icon'], this.isOpenClass),
      "attrs": {
        "size": this.compact ? 'small' : null
      }
    })]), h("div", {
      "class": clsx(this.style['cdr-accordion__content-container'], this.isOpenClass),
      "style": {
        maxHeight: this.maxHeight
      }
    }, [h("div", {
      "class": clsx(this.style['cdr-accordion__content'], this.isOpenClass),
      "attrs": {
        "aria-hidden": "".concat(!this.opened),
        "id": "".concat(this.id, "-collapsible")
      },
      "ref": "accordion-content"
    }, [this.$slots.default])])]);
  }
};

var style$2 = {"cdr-breadcrumb":"cdr-breadcrumb_4.0.3","cdr-breadcrumb__list":"cdr-breadcrumb__list_4.0.3","cdr-breadcrumb__item":"cdr-breadcrumb__item_4.0.3","cdr-breadcrumb__link":"cdr-breadcrumb__link_4.0.3","cdr-breadcrumb__delimiter":"cdr-breadcrumb__delimiter_4.0.3","cdr-breadcrumb__ellipses":"cdr-breadcrumb__ellipses_4.0.3","cdr-breadcrumb__ellipses-icon":"cdr-breadcrumb__ellipses-icon_4.0.3"};

var CdrBreadcrumb = {
  name: 'CdrBreadcrumb',
  mixins: [modifier],
  props: {
    /**
     * Required. List of source breadcrumb property objects
     *
     * {
     *   displayText: Breadcrumb Display Text
     *   url: location breadcrumb should navigate on click
     * }
     */
    items: {
      type: Array,
      default: function _default() {
        return [];
      },
      validator: function validator(value) {
        if (value.length && value.length > 0) {
          for (var i = 0; i < value.length; i += 1) {
            if (!(_typeof(value[i].item) === 'object')) {
              console.error('Breadcrumb items array missing item key at index ', i); // eslint-disable-line no-console

              return false;
            }

            if (!Object.hasOwnProperty.call(value[i].item, 'name')) {
              console.error('Breadcrumb items array is missing item.name value at index ', i); // eslint-disable-line no-console

              return false;
            }
          }
        }

        return true;
      }
    },

    /**
     * Flag to track container width threshold exceeded
     */
    truncationEnabled: {
      type: Boolean,
      default: true
    }
  },
  data: function data() {
    return {
      truncate: this.truncationEnabled && this.items.length > 2,
      style: style$2
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-breadcrumb';
    },
    ellipsis: function ellipsis() {
      var h = this.$createElement;
      return this.truncate ? h("li", {
        "on": {
          "click": this.handleEllipsisClick
        },
        "class": this.style['cdr-breadcrumb__item'],
        "ref": "ellipse"
      }, [h("button", {
        "attrs": {
          "aria-expanded": "false",
          "aria-label": "ellipsis"
        },
        "class": this.style['cdr-breadcrumb__ellipses']
      }, [h("svg", {
        "class": this.style['cdr-breadcrumb__ellipses-icon'],
        "attrs": {
          "xmlns": "http://www.w3.org/2000/svg",
          "viewBox": "0 0 24 24"
        }
      }, [h("title", ["ellipsis"]), h("path", {
        "attrs": {
          "d": "M17.5 22a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zM12 22a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm-5.5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"
        }
      })])]), h("span", {
        "class": this.style['cdr-breadcrumb__delimiter'],
        "attrs": {
          "aria-hidden": "true"
        }
      }, ["/"])]) : '';
    },
    listItems: function listItems() {
      var _context,
          _this = this;

      var h = this.$createElement;
      return _mapInstanceProperty(_context = this.items).call(_context, function (breadcrumb, index) {
        var delimiter = index < _this.items.length - 1 ? h("span", {
          "class": _this.style['cdr-breadcrumb__delimiter'],
          "attrs": {
            "aria-hidden": "true"
          }
        }, ["/"]) : '';
        var ref = index === 0 ? 'firstBreadcrumb' : null;
        return h("li", {
          "class": _this.style['cdr-breadcrumb__item'],
          "key": breadcrumb.item.id || breadcrumb.item.name.replace(/ /g, '-').toLowerCase(),
          "directives": [{
            name: "show",
            value: !_this.truncate || index >= _this.items.length - 2
          }]
        }, [_this.$scopedSlots.link ? _this.$scopedSlots.link({
          class: _this.style['cdr-breadcrumb__link'],
          href: breadcrumb.item.url,
          content: breadcrumb.item.name,
          ref: ref
        }) : h("a", {
          "class": _this.style['cdr-breadcrumb__link'],
          "ref": ref,
          "attrs": {
            "href": breadcrumb.item.url
          }
        }, [breadcrumb.item.name]), delimiter]);
      });
    }
  },
  watch: {
    items: function items() {
      this.truncate = this.truncationEnabled && this.items.length > 2;
    }
  },
  methods: {
    handleEllipsisClick: function handleEllipsisClick() {
      var _this2 = this;

      this.truncate = false;
      this.$nextTick(function () {
        _this2.$refs.firstBreadcrumb.focus();
      });
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("nav", {
      "ref": "container",
      "class": clsx(this.style[this.baseClass], this.modifierClass),
      "attrs": {
        "aria-label": "Breadcrumb"
      }
    }, [h("ol", {
      "ref": "cdrBreadcrumbList",
      "class": this.style['cdr-breadcrumb__list']
    }, [this.ellipsis, this.listItems])]);
  }
};

/**
 * #fullWidth Mixin/Interface
 *
 * Functionality for handling/standardizing full-width components.
 *
 *  :Values
 *    :@xs
 *    :x@sm
 *    :@md
 *    :@lg
 *
 * @mixin
 */
var fullWidth = {
  mixins: [BuildClass],
  props: {
    /**
     * fullWidth state
     */
    fullWidth: {
      type: [String, Boolean],
      default: false,
      validator: function validator(value) {
        if (typeof value === 'string') {
          return validateProp(value, ['@xs', '@sm', '@md', '@lg'], false);
        }

        return typeof value === 'boolean';
      }
    }
  },
  computed: {
    fullWidthClass: function fullWidthClass() {
      if (typeof this.fullWidth === 'boolean') {
        return this.fullWidth && !this.iconOnly ? this.modifyClassName(this.baseClass, 'full-width') : null;
      }

      return this.buildClass('fullWidth', true);
    }
  }
};

var style$3 = {"cdr-button":"cdr-button_4.0.3","cdr-button--primary":"cdr-button--primary_4.0.3","cdr-button--secondary":"cdr-button--secondary_4.0.3","cdr-button--large":"cdr-button--large_4.0.3","cdr-button--has-icon":"cdr-button--has-icon_4.0.3","cdr-button--medium":"cdr-button--medium_4.0.3","cdr-button--small":"cdr-button--small_4.0.3","cdr-button--icon-only":"cdr-button--icon-only_4.0.3","cdr-button--on-dark":"cdr-button--on-dark_4.0.3","cdr-button--full-width":"cdr-button--full-width_4.0.3","cdr-button--small@xs":"cdr-button--small@xs_4.0.3","cdr-button--medium@xs":"cdr-button--medium@xs_4.0.3","cdr-button--large@xs":"cdr-button--large@xs_4.0.3","cdr-button--fullWidth@xs":"cdr-button--fullWidth@xs_4.0.3","cdr-button--small@sm":"cdr-button--small@sm_4.0.3","cdr-button--medium@sm":"cdr-button--medium@sm_4.0.3","cdr-button--large@sm":"cdr-button--large@sm_4.0.3","cdr-button--fullWidth@sm":"cdr-button--fullWidth@sm_4.0.3","cdr-button--small@md":"cdr-button--small@md_4.0.3","cdr-button--medium@md":"cdr-button--medium@md_4.0.3","cdr-button--large@md":"cdr-button--large@md_4.0.3","cdr-button--fullWidth@md":"cdr-button--fullWidth@md_4.0.3","cdr-button--small@lg":"cdr-button--small@lg_4.0.3","cdr-button--medium@lg":"cdr-button--medium@lg_4.0.3","cdr-button--large@lg":"cdr-button--large@lg_4.0.3","cdr-button--fullWidth@lg":"cdr-button--fullWidth@lg_4.0.3"};

function ownKeys$1(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context3; _forEachInstanceProperty(_context3 = ownKeys$1(Object(source), true)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context4; _forEachInstanceProperty(_context4 = ownKeys$1(Object(source))).call(_context4, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var CdrButton = {
  name: 'CdrButton',
  mixins: [modifier, size, space, fullWidth],
  props: {
    /**
     * Controls render as button or anchor. {button, a}
     */
    tag: {
      type: String,
      default: 'button',
      validator: function validator(value) {
        var _context;

        return _indexOfInstanceProperty(_context = ['button', 'a']).call(_context, value) >= 0 || false;
      }
    },

    /**
     * Sets the button type. {button, submit, reset}
     */
    type: {
      type: String,
      default: 'button',
      validator: function validator(value) {
        var _context2;

        return _indexOfInstanceProperty(_context2 = ['button', 'submit', 'reset']).call(_context2, value) >= 0 || false;
      }
    },

    /**
     * Renders an icon-only button. Default slot is disabled. Overrides size and responsiveSize props.
     */
    iconOnly: {
      type: Boolean,
      default: false
    },

    /**
     * Renders an icon-only button with a light fill color for use on dark backgrounds.
     * iconOnly must be true.
     */
    onDark: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      style: style$3
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-button';
    },
    defaultClass: function defaultClass() {
      return this.modifyClassName(this.baseClass, 'primary');
    },
    buttonSizeClass: function buttonSizeClass() {
      return !this.iconOnly ? this.sizeClass : null;
    },
    iconClass: function iconClass() {
      var classes = [];

      if (this.$slots.icon && this.$slots.default) {
        /* only add class for buttons with text + icon */
        classes.push(this.modifyClassName(this.baseClass, 'has-icon'));
      }

      if (this.iconOnly) {
        classes.push(this.modifyClassName(this.baseClass, 'icon-only'));

        if (this.onDark) {
          classes.push(this.modifyClassName(this.baseClass, 'on-dark'));
        }
      }

      return classes.join(' ');
    }
  },
  render: function render() {
    var h = arguments[0];
    var Component = this.tag;
    return h(Component, {
      "class": clsx(this.defaultClass, this.style[this.baseClass], this.modifierClass, this.buttonSizeClass, this.fullWidthClass, this.iconClass, this.space),
      "attrs": {
        "type": this.tag === 'button' ? this.type : null
      },
      "on": _objectSpread$1({}, this.$listeners)
    }, [this.$slots.icon, this.$slots.default]);
  }
};

var style$4 = {"cdr-caption":"cdr-caption_4.0.3","cdr-caption__cite":"cdr-caption__cite_4.0.3","cdr-caption__summary":"cdr-caption__summary_4.0.3"};

/**
 * Cedar 2 component for captions
 * @version 0.0.1
 * @author [REI Software Engineering](https://rei.github.io/rei-cedar/)
 */

var CdrCaption = {
  name: 'CdrCaption',
  props: {
    /** Caption summary text */
    summary: String,

    /** Caption credit text */
    credit: String
  },
  data: function data() {
    return {
      style: style$4
    };
  },
  render: function render() {
    var h = arguments[0];
    return h("div", {
      "class": this.style['cdr-caption']
    }, [this.summary ? h("p", {
      "class": this.style['cdr-caption__summary']
    }, [this.summary]) : '', this.credit ? h("cite", {
      "class": this.style['cdr-caption__cite']
    }, [this.credit]) : '']);
  }
};

var style$5 = {"cdr-card":"cdr-card_4.0.3"};

var CdrCard = {
  name: 'CdrCard',
  mixins: [modifier],
  data: function data() {
    return {
      style: style$5
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-card';
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("article", {
      "class": clsx(this.style[this.baseClass], this.modifierClass)
    }, [this.$slots.default]);
  }
};

var style$6 = {"cdr-checkbox":"cdr-checkbox_4.0.3","cdr-checkbox__wrap":"cdr-checkbox__wrap_4.0.3","cdr-checkbox__input":"cdr-checkbox__input_4.0.3","cdr-checkbox__figure":"cdr-checkbox__figure_4.0.3","cdr-checkbox__content":"cdr-checkbox__content_4.0.3","cdr-checkbox--small":"cdr-checkbox--small_4.0.3","cdr-checkbox--medium":"cdr-checkbox--medium_4.0.3","cdr-checkbox--large":"cdr-checkbox--large_4.0.3","cdr-checkbox--small@xs":"cdr-checkbox--small@xs_4.0.3","cdr-checkbox--medium@xs":"cdr-checkbox--medium@xs_4.0.3","cdr-checkbox--large@xs":"cdr-checkbox--large@xs_4.0.3","cdr-checkbox--small@sm":"cdr-checkbox--small@sm_4.0.3","cdr-checkbox--medium@sm":"cdr-checkbox--medium@sm_4.0.3","cdr-checkbox--large@sm":"cdr-checkbox--large@sm_4.0.3","cdr-checkbox--small@md":"cdr-checkbox--small@md_4.0.3","cdr-checkbox--medium@md":"cdr-checkbox--medium@md_4.0.3","cdr-checkbox--large@md":"cdr-checkbox--large@md_4.0.3","cdr-checkbox--small@lg":"cdr-checkbox--small@lg_4.0.3","cdr-checkbox--medium@lg":"cdr-checkbox--medium@lg_4.0.3","cdr-checkbox--large@lg":"cdr-checkbox--large@lg_4.0.3","cdr-checkbox--compact":"cdr-checkbox--compact_4.0.3","cdr-checkbox--hide-figure":"cdr-checkbox--hide-figure_4.0.3"};

function ownKeys$2(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2(Object(source), true)).call(_context2, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context3; _forEachInstanceProperty(_context3 = ownKeys$2(Object(source))).call(_context3, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var CdrCheckbox = {
  name: 'CdrCheckbox',
  mixins: [modifier, space, size],
  inheritAttrs: false,
  props: {
    /**
     * Class that is added to the label for custom styles
     */
    labelClass: String,

    /**
     * Class that is added to the input for custom styles
     */
    inputClass: String,

    /**
     * Class that is added to the slot wrapper for custom styles
     */
    contentClass: String,

    /**
     * Show checkbox in indeterminate state. (NOTE: this is a visual-only state and there is no logic for when to show it)
    */
    indeterminate: {
      type: Boolean,
      default: false
    },

    /**
     * The value when checked.
    */
    trueValue: {
      type: [String, Number, Boolean, Object, Array, _Symbol, Function],
      default: true
    },

    /**
     * The value when unchecked.
    */
    falseValue: {
      type: [String, Number, Boolean, Object, Array, _Symbol, Function],
      default: false
    },

    /**
     * The value when used in a checkbox group. Replaces `trueValue` and `falseValue`.
    */
    customValue: [String, Number, Boolean, Object, Array, _Symbol, Function],

    /** @ignore */
    value: {
      type: [String, Number, Boolean, Object, Array, _Symbol, Function]
    }
  },
  data: function data() {
    return {
      newValue: this.value,
      style: style$6
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-checkbox';
    }
  },
  watch: {
    value: function value(val) {
      this.newValue = val;
    },
    newValue: function newValue(val) {
      /**
       * `v-model` value. Fires on check/uncheck.
       * @event input
       * @type value | event
       * */
      this.$emit('input', val);
    }
  },
  methods: {
    updateValue: function updateValue(newValue, e) {
      this.$emit('change', newValue, e);
    }
  },
  // TODO: pass disabled/checked/other attrs through? need direct binding?
  render: function render() {
    var _this = this;

    var h = arguments[0];
    return h("div", {
      "class": clsx(this.space, this.style['cdr-checkbox__wrap'])
    }, [h("label", {
      "class": clsx(this.style[this.baseClass], this.modifierClass, this.labelClass, this.sizeClass),
      "ref": "label"
    }, [h("input", _mergeJSXProps([{
      "on": {
        "change": [function ($event) {
          var $$a = _this.newValue,
              $$el = $event.target,
              $$c = $$el.checked ? _this.customValue ? null : _this.trueValue : _this.customValue ? null : _this.falseValue;

          if (_Array$isArray($$a)) {
            var $$v = _this.customValue,
                $$i = _this._i($$a, $$v);

            if ($$el.checked) {
              $$i < 0 && (_this.newValue = _concatInstanceProperty($$a).call($$a, [$$v]));
            } else {
              var _context;

              $$i > -1 && (_this.newValue = _concatInstanceProperty(_context = _sliceInstanceProperty($$a).call($$a, 0, $$i)).call(_context, _sliceInstanceProperty($$a).call($$a, $$i + 1)));
            }
          } else {
            _this.newValue = $$c;
          }
        }, function (e) {
          return _this.updateValue(_this.newValue, e);
        }]
      },
      "class": clsx(this.style['cdr-checkbox__input'], this.inputClass),
      "attrs": _objectSpread$2({
        "type": "checkbox"
      }, this.$attrs, {
        "indeterminate": this.indeterminate
      }),
      "ref": "checkbox",
      "domProps": {
        "checked": _Array$isArray(_this.newValue) ? this._i(_this.newValue, _this.customValue) > -1 : this._q(_this.newValue, _this.customValue ? null : _this.trueValue)
      }
    }, {
      directives: [{
        name: "model",
        value: _this.newValue,
        modifiers: {}
      }]
    }])), h("span", {
      "class": this.style['cdr-checkbox__figure']
    }), h("div", {
      "class": clsx(this.style['cdr-checkbox__content'], this.contentClass)
    }, [this.$slots.default])])]);
  }
};

var style$7 = {"cdr-row":"cdr-row_4.0.3","cdr-col":"cdr-col_4.0.3","cdr-row_row1":"cdr-row_row1_4.0.3","cdr-row_row2":"cdr-row_row2_4.0.3","cdr-row_row3":"cdr-row_row3_4.0.3","cdr-row_row4":"cdr-row_row4_4.0.3","cdr-row_row5":"cdr-row_row5_4.0.3","cdr-row_row6":"cdr-row_row6_4.0.3","cdr-row_row7":"cdr-row_row7_4.0.3","cdr-row_row8":"cdr-row_row8_4.0.3","cdr-row_row9":"cdr-row_row9_4.0.3","cdr-row_row10":"cdr-row_row10_4.0.3","cdr-row_row11":"cdr-row_row11_4.0.3","cdr-row_row12":"cdr-row_row12_4.0.3","cdr-row_rowauto":"cdr-row_rowauto_4.0.3","cdr-row--gutter-none":"cdr-row--gutter-none_4.0.3","cdr-row--gutter-xxs":"cdr-row--gutter-xxs_4.0.3","cdr-row--nowrap":"cdr-row--nowrap_4.0.3","cdr-row--left":"cdr-row--left_4.0.3","cdr-row--center":"cdr-row--center_4.0.3","cdr-row--right":"cdr-row--right_4.0.3","cdr-row--stretch":"cdr-row--stretch_4.0.3","cdr-row--top":"cdr-row--top_4.0.3","cdr-row--middle":"cdr-row--middle_4.0.3","cdr-row--bottom":"cdr-row--bottom_4.0.3","cdr-row--between":"cdr-row--between_4.0.3","cdr-row--around":"cdr-row--around_4.0.3","cdr-row--vertical":"cdr-row--vertical_4.0.3","cdr-row_row1@sm":"cdr-row_row1@sm_4.0.3","cdr-row_row2@sm":"cdr-row_row2@sm_4.0.3","cdr-row_row3@sm":"cdr-row_row3@sm_4.0.3","cdr-row_row4@sm":"cdr-row_row4@sm_4.0.3","cdr-row_row5@sm":"cdr-row_row5@sm_4.0.3","cdr-row_row6@sm":"cdr-row_row6@sm_4.0.3","cdr-row_row7@sm":"cdr-row_row7@sm_4.0.3","cdr-row_row8@sm":"cdr-row_row8@sm_4.0.3","cdr-row_row9@sm":"cdr-row_row9@sm_4.0.3","cdr-row_row10@sm":"cdr-row_row10@sm_4.0.3","cdr-row_row11@sm":"cdr-row_row11@sm_4.0.3","cdr-row_row12@sm":"cdr-row_row12@sm_4.0.3","cdr-row_rowauto@sm":"cdr-row_rowauto@sm_4.0.3","cdr-row--gutter-none@sm":"cdr-row--gutter-none@sm_4.0.3","cdr-row--gutter-xxs@sm":"cdr-row--gutter-xxs@sm_4.0.3","cdr-row--nowrap@sm":"cdr-row--nowrap@sm_4.0.3","cdr-row--wrap@sm":"cdr-row--wrap@sm_4.0.3","cdr-row--left@sm":"cdr-row--left@sm_4.0.3","cdr-row--center@sm":"cdr-row--center@sm_4.0.3","cdr-row--right@sm":"cdr-row--right@sm_4.0.3","cdr-row--stretch@sm":"cdr-row--stretch@sm_4.0.3","cdr-row--top@sm":"cdr-row--top@sm_4.0.3","cdr-row--middle@sm":"cdr-row--middle@sm_4.0.3","cdr-row--bottom@sm":"cdr-row--bottom@sm_4.0.3","cdr-row--vertical@sm":"cdr-row--vertical@sm_4.0.3","cdr-row--between@sm":"cdr-row--between@sm_4.0.3","cdr-row--around@sm":"cdr-row--around@sm_4.0.3","cdr-row_row1@md":"cdr-row_row1@md_4.0.3","cdr-row_row2@md":"cdr-row_row2@md_4.0.3","cdr-row_row3@md":"cdr-row_row3@md_4.0.3","cdr-row_row4@md":"cdr-row_row4@md_4.0.3","cdr-row_row5@md":"cdr-row_row5@md_4.0.3","cdr-row_row6@md":"cdr-row_row6@md_4.0.3","cdr-row_row7@md":"cdr-row_row7@md_4.0.3","cdr-row_row8@md":"cdr-row_row8@md_4.0.3","cdr-row_row9@md":"cdr-row_row9@md_4.0.3","cdr-row_row10@md":"cdr-row_row10@md_4.0.3","cdr-row_row11@md":"cdr-row_row11@md_4.0.3","cdr-row_row12@md":"cdr-row_row12@md_4.0.3","cdr-row_rowauto@md":"cdr-row_rowauto@md_4.0.3","cdr-row--gutter-none@md":"cdr-row--gutter-none@md_4.0.3","cdr-row--gutter-xxs@md":"cdr-row--gutter-xxs@md_4.0.3","cdr-row--nowrap@md":"cdr-row--nowrap@md_4.0.3","cdr-row--wrap@md":"cdr-row--wrap@md_4.0.3","cdr-row--left@md":"cdr-row--left@md_4.0.3","cdr-row--center@md":"cdr-row--center@md_4.0.3","cdr-row--right@md":"cdr-row--right@md_4.0.3","cdr-row--stretch@md":"cdr-row--stretch@md_4.0.3","cdr-row--top@md":"cdr-row--top@md_4.0.3","cdr-row--middle@md":"cdr-row--middle@md_4.0.3","cdr-row--bottom@md":"cdr-row--bottom@md_4.0.3","cdr-row--vertical@md":"cdr-row--vertical@md_4.0.3","cdr-row--between@md":"cdr-row--between@md_4.0.3","cdr-row--around@md":"cdr-row--around@md_4.0.3","cdr-row_row1@lg":"cdr-row_row1@lg_4.0.3","cdr-row_row2@lg":"cdr-row_row2@lg_4.0.3","cdr-row_row3@lg":"cdr-row_row3@lg_4.0.3","cdr-row_row4@lg":"cdr-row_row4@lg_4.0.3","cdr-row_row5@lg":"cdr-row_row5@lg_4.0.3","cdr-row_row6@lg":"cdr-row_row6@lg_4.0.3","cdr-row_row7@lg":"cdr-row_row7@lg_4.0.3","cdr-row_row8@lg":"cdr-row_row8@lg_4.0.3","cdr-row_row9@lg":"cdr-row_row9@lg_4.0.3","cdr-row_row10@lg":"cdr-row_row10@lg_4.0.3","cdr-row_row11@lg":"cdr-row_row11@lg_4.0.3","cdr-row_row12@lg":"cdr-row_row12@lg_4.0.3","cdr-row_rowauto@lg":"cdr-row_rowauto@lg_4.0.3","cdr-row--gutter-none@lg":"cdr-row--gutter-none@lg_4.0.3","cdr-row--gutter-xxs@lg":"cdr-row--gutter-xxs@lg_4.0.3","cdr-row--nowrap@lg":"cdr-row--nowrap@lg_4.0.3","cdr-row--wrap@lg":"cdr-row--wrap@lg_4.0.3","cdr-row--left@lg":"cdr-row--left@lg_4.0.3","cdr-row--center@lg":"cdr-row--center@lg_4.0.3","cdr-row--right@lg":"cdr-row--right@lg_4.0.3","cdr-row--stretch@lg":"cdr-row--stretch@lg_4.0.3","cdr-row--top@lg":"cdr-row--top@lg_4.0.3","cdr-row--middle@lg":"cdr-row--middle@lg_4.0.3","cdr-row--bottom@lg":"cdr-row--bottom@lg_4.0.3","cdr-row--vertical@lg":"cdr-row--vertical@lg_4.0.3","cdr-row--between@lg":"cdr-row--between@lg_4.0.3","cdr-row--around@lg":"cdr-row--around@lg_4.0.3"};

var CdrRow = {
  name: 'CdrRow',
  mixins: [modifier],
  props: {
    /**
     * Number of equal-width columns in the row. A value of ‘auto’ will size columns as wide as their content.
     * Possible values: {1-12, auto}
     * Also accepts responsive values with `@breakpoint`: "2 4@md"
     */
    cols: {
      type: String,
      validator: function validator(value) {
        return validateProp(value, ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', 'auto']);
      }
    },

    /**
     * Justify columns within a row. See CSS flexbox justify-content.
     * Possible values: {left, center, right, around, between}.
     * Also accepts responsive values with `@breakpoint`: "center right@lg"
     */
    justify: {
      type: String,
      validator: function validator(value) {
        return validateProp(value, ['left', 'center', 'right', 'around', 'between']);
      }
    },

    /**
     * Align columns of different heights. See CSS flexbox align-items.
     * Possible values: {top, middle, bottom, stretch}.
     * Also accepts responsive values with `@breakpoint`: "top middle@sm"
     */
    align: {
      type: String,
      validator: function validator(value) {
        return validateProp(value, ['top', 'middle', 'bottom', 'stretch']);
      }
    },

    /**
     * Defines gutter size. Default gutter size is 16px @xs and @sm and 32px @md and @lg.
     * Possible values: {none, xxs}.
     * Also accepts responsive values with `@breakpoint`: "none@md"
     */
    gutter: {
      type: String,
      validator: function validator(value) {
        return validateProp(value, ['none', 'xxs']);
      }
    },

    /**
     * Changes row to a column layout. See CSS flexbox flex-direction.
     * Possible values: {vertical}.
     * Also accepts responsive values with `@breakpoint`: "vertical@md"
     */
    vertical: {
      type: String,
      validator: function validator(value) {
        return validateProp(value, ['vertical']);
      }
    },

    /**
     * Enables row wrapping. Only needs to be changed if overriding `nowrap`. See CSS flexbox flex-wrap.
     * Possible values: {wrap}.
     * Also accepts responsive values with `@breakpoint`: "wrap@md"
     */
    wrap: {
      type: String,
      validator: function validator(value) {
        return validateProp(value, ['wrap']);
      }
    },

    /**
     * Disables row wrapping and enables overflow scrolling. See CSS flexbox flex-wrap.
     * Possible values: {nowrap}.
     * Also accepts responsive values with `@breakpoint`: "nowrap@md"
     */
    nowrap: {
      type: String,
      validator: function validator(value) {
        return validateProp(value, ['nowrap']);
      }
    },

    /**
     * Sets grid to use `ul` and `li` or `div`.
     * Possible values: {normal, list}.
     */
    type: {
      type: String,
      default: 'normal',
      validator: function validator(value) {
        return validateProp(value, ['normal', 'list'], false);
      }
    }
  },
  data: function data() {
    return {
      style: style$7
    };
  },
  provide: function provide() {
    return {
      rowType: this.type
    };
  },
  computed: {
    colsClass: function colsClass() {
      var _this = this;

      var classStr = [];

      if (this.cols) {
        var _context;

        _forEachInstanceProperty(_context = this.cols.split(' ')).call(_context, function (val) {
          classStr.push(_this.style["cdr-row_row".concat(val)]);
        });
      }

      return classStr.join(' ');
    },
    justifyClass: function justifyClass() {
      var _this2 = this;

      var classStr = [];

      if (this.justify) {
        var _context2;

        _forEachInstanceProperty(_context2 = this.justify.split(' ')).call(_context2, function (val) {
          classStr.push(_this2.modifyClassName('cdr-row', val));
        });
      }

      return classStr.join(' ');
    },
    alignClass: function alignClass() {
      var _this3 = this;

      var classStr = [];

      if (this.align) {
        var _context3;

        _forEachInstanceProperty(_context3 = this.align.split(' ')).call(_context3, function (val) {
          classStr.push(_this3.modifyClassName('cdr-row', val));
        });
      }

      return classStr.join(' ');
    },
    gutterClass: function gutterClass() {
      var _this4 = this;

      var classStr = [];

      if (this.gutter) {
        var _context4;

        _forEachInstanceProperty(_context4 = this.gutter.split(' ')).call(_context4, function (val) {
          classStr.push(_this4.style["cdr-row--gutter-".concat(val)]);
        });
      }

      return classStr.join(' ');
    },
    verticalClass: function verticalClass() {
      var _this5 = this;

      var classStr = [];

      if (this.vertical) {
        var _context5;

        _forEachInstanceProperty(_context5 = this.vertical.split(' ')).call(_context5, function (val) {
          classStr.push(_this5.modifyClassName('cdr-row', val));
        });
      }

      return classStr.join(' ');
    },
    wrapClass: function wrapClass() {
      var _this6 = this;

      var classStr = [];

      if (this.wrap) {
        var _context6;

        _forEachInstanceProperty(_context6 = this.wrap.split(' ')).call(_context6, function (val) {
          classStr.push(_this6.modifyClassName('cdr-row', val));
        });
      }

      return classStr.join(' ');
    },
    nowrapClass: function nowrapClass() {
      var _this7 = this;

      var classStr = [];

      if (this.nowrap) {
        var _context7;

        _forEachInstanceProperty(_context7 = this.nowrap.split(' ')).call(_context7, function (val) {
          classStr.push(_this7.modifyClassName('cdr-row', val));
        });
      }

      return classStr.join(' ');
    }
  },
  render: function render() {
    var h = arguments[0];
    var Component = this.type === 'list' ? 'ul' : 'div';
    return h(Component, {
      "class": clsx(this.style['cdr-row'], this.colsClass, this.justifyClass, this.alignClass, this.gutterClass, this.verticalClass, this.wrapClass, this.nowrapClass)
    }, [this.$slots.default]);
  }
};

var style$8 = {"cdr-col":"cdr-col_4.0.3","cdr-row":"cdr-row_4.0.3","cdr-col__content":"cdr-col__content_4.0.3","cdr-col_span1":"cdr-col_span1_4.0.3","cdr-col_span2":"cdr-col_span2_4.0.3","cdr-col_span3":"cdr-col_span3_4.0.3","cdr-col_span4":"cdr-col_span4_4.0.3","cdr-col_span5":"cdr-col_span5_4.0.3","cdr-col_span6":"cdr-col_span6_4.0.3","cdr-col_span7":"cdr-col_span7_4.0.3","cdr-col_span8":"cdr-col_span8_4.0.3","cdr-col_span9":"cdr-col_span9_4.0.3","cdr-col_span10":"cdr-col_span10_4.0.3","cdr-col_span11":"cdr-col_span11_4.0.3","cdr-col_span12":"cdr-col_span12_4.0.3","cdr-col--offsetLeft0":"cdr-col--offsetLeft0_4.0.3","cdr-col--offsetLeft1":"cdr-col--offsetLeft1_4.0.3","cdr-col--offsetLeft2":"cdr-col--offsetLeft2_4.0.3","cdr-col--offsetLeft3":"cdr-col--offsetLeft3_4.0.3","cdr-col--offsetLeft4":"cdr-col--offsetLeft4_4.0.3","cdr-col--offsetLeft5":"cdr-col--offsetLeft5_4.0.3","cdr-col--offsetLeft6":"cdr-col--offsetLeft6_4.0.3","cdr-col--offsetLeft7":"cdr-col--offsetLeft7_4.0.3","cdr-col--offsetLeft8":"cdr-col--offsetLeft8_4.0.3","cdr-col--offsetLeft9":"cdr-col--offsetLeft9_4.0.3","cdr-col--offsetLeft10":"cdr-col--offsetLeft10_4.0.3","cdr-col--offsetLeft11":"cdr-col--offsetLeft11_4.0.3","cdr-col--offsetRight0":"cdr-col--offsetRight0_4.0.3","cdr-col--offsetRight1":"cdr-col--offsetRight1_4.0.3","cdr-col--offsetRight2":"cdr-col--offsetRight2_4.0.3","cdr-col--offsetRight3":"cdr-col--offsetRight3_4.0.3","cdr-col--offsetRight4":"cdr-col--offsetRight4_4.0.3","cdr-col--offsetRight5":"cdr-col--offsetRight5_4.0.3","cdr-col--offsetRight6":"cdr-col--offsetRight6_4.0.3","cdr-col--offsetRight7":"cdr-col--offsetRight7_4.0.3","cdr-col--offsetRight8":"cdr-col--offsetRight8_4.0.3","cdr-col--offsetRight9":"cdr-col--offsetRight9_4.0.3","cdr-col--offsetRight10":"cdr-col--offsetRight10_4.0.3","cdr-col--offsetRight11":"cdr-col--offsetRight11_4.0.3","cdr-col--top":"cdr-col--top_4.0.3","cdr-col--middle":"cdr-col--middle_4.0.3","cdr-col--bottom":"cdr-col--bottom_4.0.3","cdr-col--stretch":"cdr-col--stretch_4.0.3","cdr-col_span1@sm":"cdr-col_span1@sm_4.0.3","cdr-col_span2@sm":"cdr-col_span2@sm_4.0.3","cdr-col_span3@sm":"cdr-col_span3@sm_4.0.3","cdr-col_span4@sm":"cdr-col_span4@sm_4.0.3","cdr-col_span5@sm":"cdr-col_span5@sm_4.0.3","cdr-col_span6@sm":"cdr-col_span6@sm_4.0.3","cdr-col_span7@sm":"cdr-col_span7@sm_4.0.3","cdr-col_span8@sm":"cdr-col_span8@sm_4.0.3","cdr-col_span9@sm":"cdr-col_span9@sm_4.0.3","cdr-col_span10@sm":"cdr-col_span10@sm_4.0.3","cdr-col_span11@sm":"cdr-col_span11@sm_4.0.3","cdr-col_span12@sm":"cdr-col_span12@sm_4.0.3","cdr-col--offsetLeft0@sm":"cdr-col--offsetLeft0@sm_4.0.3","cdr-col--offsetLeft1@sm":"cdr-col--offsetLeft1@sm_4.0.3","cdr-col--offsetLeft2@sm":"cdr-col--offsetLeft2@sm_4.0.3","cdr-col--offsetLeft3@sm":"cdr-col--offsetLeft3@sm_4.0.3","cdr-col--offsetLeft4@sm":"cdr-col--offsetLeft4@sm_4.0.3","cdr-col--offsetLeft5@sm":"cdr-col--offsetLeft5@sm_4.0.3","cdr-col--offsetLeft6@sm":"cdr-col--offsetLeft6@sm_4.0.3","cdr-col--offsetLeft7@sm":"cdr-col--offsetLeft7@sm_4.0.3","cdr-col--offsetLeft8@sm":"cdr-col--offsetLeft8@sm_4.0.3","cdr-col--offsetLeft9@sm":"cdr-col--offsetLeft9@sm_4.0.3","cdr-col--offsetLeft10@sm":"cdr-col--offsetLeft10@sm_4.0.3","cdr-col--offsetLeft11@sm":"cdr-col--offsetLeft11@sm_4.0.3","cdr-col--offsetRight0@sm":"cdr-col--offsetRight0@sm_4.0.3","cdr-col--offsetRight1@sm":"cdr-col--offsetRight1@sm_4.0.3","cdr-col--offsetRight2@sm":"cdr-col--offsetRight2@sm_4.0.3","cdr-col--offsetRight3@sm":"cdr-col--offsetRight3@sm_4.0.3","cdr-col--offsetRight4@sm":"cdr-col--offsetRight4@sm_4.0.3","cdr-col--offsetRight5@sm":"cdr-col--offsetRight5@sm_4.0.3","cdr-col--offsetRight6@sm":"cdr-col--offsetRight6@sm_4.0.3","cdr-col--offsetRight7@sm":"cdr-col--offsetRight7@sm_4.0.3","cdr-col--offsetRight8@sm":"cdr-col--offsetRight8@sm_4.0.3","cdr-col--offsetRight9@sm":"cdr-col--offsetRight9@sm_4.0.3","cdr-col--offsetRight10@sm":"cdr-col--offsetRight10@sm_4.0.3","cdr-col--offsetRight11@sm":"cdr-col--offsetRight11@sm_4.0.3","cdr-col--top@sm":"cdr-col--top@sm_4.0.3","cdr-col--middle@sm":"cdr-col--middle@sm_4.0.3","cdr-col--bottom@sm":"cdr-col--bottom@sm_4.0.3","cdr-col--stretch@sm":"cdr-col--stretch@sm_4.0.3","cdr-col_span1@md":"cdr-col_span1@md_4.0.3","cdr-col_span2@md":"cdr-col_span2@md_4.0.3","cdr-col_span3@md":"cdr-col_span3@md_4.0.3","cdr-col_span4@md":"cdr-col_span4@md_4.0.3","cdr-col_span5@md":"cdr-col_span5@md_4.0.3","cdr-col_span6@md":"cdr-col_span6@md_4.0.3","cdr-col_span7@md":"cdr-col_span7@md_4.0.3","cdr-col_span8@md":"cdr-col_span8@md_4.0.3","cdr-col_span9@md":"cdr-col_span9@md_4.0.3","cdr-col_span10@md":"cdr-col_span10@md_4.0.3","cdr-col_span11@md":"cdr-col_span11@md_4.0.3","cdr-col_span12@md":"cdr-col_span12@md_4.0.3","cdr-col--offsetLeft0@md":"cdr-col--offsetLeft0@md_4.0.3","cdr-col--offsetLeft1@md":"cdr-col--offsetLeft1@md_4.0.3","cdr-col--offsetLeft2@md":"cdr-col--offsetLeft2@md_4.0.3","cdr-col--offsetLeft3@md":"cdr-col--offsetLeft3@md_4.0.3","cdr-col--offsetLeft4@md":"cdr-col--offsetLeft4@md_4.0.3","cdr-col--offsetLeft5@md":"cdr-col--offsetLeft5@md_4.0.3","cdr-col--offsetLeft6@md":"cdr-col--offsetLeft6@md_4.0.3","cdr-col--offsetLeft7@md":"cdr-col--offsetLeft7@md_4.0.3","cdr-col--offsetLeft8@md":"cdr-col--offsetLeft8@md_4.0.3","cdr-col--offsetLeft9@md":"cdr-col--offsetLeft9@md_4.0.3","cdr-col--offsetLeft10@md":"cdr-col--offsetLeft10@md_4.0.3","cdr-col--offsetLeft11@md":"cdr-col--offsetLeft11@md_4.0.3","cdr-col--offsetRight0@md":"cdr-col--offsetRight0@md_4.0.3","cdr-col--offsetRight1@md":"cdr-col--offsetRight1@md_4.0.3","cdr-col--offsetRight2@md":"cdr-col--offsetRight2@md_4.0.3","cdr-col--offsetRight3@md":"cdr-col--offsetRight3@md_4.0.3","cdr-col--offsetRight4@md":"cdr-col--offsetRight4@md_4.0.3","cdr-col--offsetRight5@md":"cdr-col--offsetRight5@md_4.0.3","cdr-col--offsetRight6@md":"cdr-col--offsetRight6@md_4.0.3","cdr-col--offsetRight7@md":"cdr-col--offsetRight7@md_4.0.3","cdr-col--offsetRight8@md":"cdr-col--offsetRight8@md_4.0.3","cdr-col--offsetRight9@md":"cdr-col--offsetRight9@md_4.0.3","cdr-col--offsetRight10@md":"cdr-col--offsetRight10@md_4.0.3","cdr-col--offsetRight11@md":"cdr-col--offsetRight11@md_4.0.3","cdr-col--top@md":"cdr-col--top@md_4.0.3","cdr-col--middle@md":"cdr-col--middle@md_4.0.3","cdr-col--bottom@md":"cdr-col--bottom@md_4.0.3","cdr-col--stretch@md":"cdr-col--stretch@md_4.0.3","cdr-col_span1@lg":"cdr-col_span1@lg_4.0.3","cdr-col_span2@lg":"cdr-col_span2@lg_4.0.3","cdr-col_span3@lg":"cdr-col_span3@lg_4.0.3","cdr-col_span4@lg":"cdr-col_span4@lg_4.0.3","cdr-col_span5@lg":"cdr-col_span5@lg_4.0.3","cdr-col_span6@lg":"cdr-col_span6@lg_4.0.3","cdr-col_span7@lg":"cdr-col_span7@lg_4.0.3","cdr-col_span8@lg":"cdr-col_span8@lg_4.0.3","cdr-col_span9@lg":"cdr-col_span9@lg_4.0.3","cdr-col_span10@lg":"cdr-col_span10@lg_4.0.3","cdr-col_span11@lg":"cdr-col_span11@lg_4.0.3","cdr-col_span12@lg":"cdr-col_span12@lg_4.0.3","cdr-col--offsetLeft0@lg":"cdr-col--offsetLeft0@lg_4.0.3","cdr-col--offsetLeft1@lg":"cdr-col--offsetLeft1@lg_4.0.3","cdr-col--offsetLeft2@lg":"cdr-col--offsetLeft2@lg_4.0.3","cdr-col--offsetLeft3@lg":"cdr-col--offsetLeft3@lg_4.0.3","cdr-col--offsetLeft4@lg":"cdr-col--offsetLeft4@lg_4.0.3","cdr-col--offsetLeft5@lg":"cdr-col--offsetLeft5@lg_4.0.3","cdr-col--offsetLeft6@lg":"cdr-col--offsetLeft6@lg_4.0.3","cdr-col--offsetLeft7@lg":"cdr-col--offsetLeft7@lg_4.0.3","cdr-col--offsetLeft8@lg":"cdr-col--offsetLeft8@lg_4.0.3","cdr-col--offsetLeft9@lg":"cdr-col--offsetLeft9@lg_4.0.3","cdr-col--offsetLeft10@lg":"cdr-col--offsetLeft10@lg_4.0.3","cdr-col--offsetLeft11@lg":"cdr-col--offsetLeft11@lg_4.0.3","cdr-col--offsetRight0@lg":"cdr-col--offsetRight0@lg_4.0.3","cdr-col--offsetRight1@lg":"cdr-col--offsetRight1@lg_4.0.3","cdr-col--offsetRight2@lg":"cdr-col--offsetRight2@lg_4.0.3","cdr-col--offsetRight3@lg":"cdr-col--offsetRight3@lg_4.0.3","cdr-col--offsetRight4@lg":"cdr-col--offsetRight4@lg_4.0.3","cdr-col--offsetRight5@lg":"cdr-col--offsetRight5@lg_4.0.3","cdr-col--offsetRight6@lg":"cdr-col--offsetRight6@lg_4.0.3","cdr-col--offsetRight7@lg":"cdr-col--offsetRight7@lg_4.0.3","cdr-col--offsetRight8@lg":"cdr-col--offsetRight8@lg_4.0.3","cdr-col--offsetRight9@lg":"cdr-col--offsetRight9@lg_4.0.3","cdr-col--offsetRight10@lg":"cdr-col--offsetRight10@lg_4.0.3","cdr-col--offsetRight11@lg":"cdr-col--offsetRight11@lg_4.0.3","cdr-col--top@lg":"cdr-col--top@lg_4.0.3","cdr-col--middle@lg":"cdr-col--middle@lg_4.0.3","cdr-col--bottom@lg":"cdr-col--bottom@lg_4.0.3","cdr-col--stretch@lg":"cdr-col--stretch@lg_4.0.3"};

function ownKeys$3(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context5; _forEachInstanceProperty(_context5 = ownKeys$3(Object(source), true)).call(_context5, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context6; _forEachInstanceProperty(_context6 = ownKeys$3(Object(source))).call(_context6, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var CdrCol = {
  name: 'CdrCol',
  components: {
    CdrRow: CdrRow
  },
  mixins: [modifier],
  inject: {
    rowType: {
      default: 'normal'
    }
  },
  inheritAttrs: false,
  props: {
    /**
     * Number of columns (out of 12) the column should span. Functions like bootstrap col-* classes.
     * Overrides widths set by "cols" prop on CdrRow.
     * Possible values: {1-12}
     * Also accepts responsive values with `@breakpoint`: "12 8@lg"
     */
    span: {
      type: String,
      validator: function validator(value) {
        return validateProp(value, ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']);
      }
    },

    /**
     * Number of columns (out of 12) of empty space to add left of this column.
     * Possible values: {0-12}
     * Also accepts responsive values with `@breakpoint`: "12 8@lg"
     */
    offsetLeft: {
      type: String,
      validator: function validator(value) {
        return validateProp(value, ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']);
      }
    },

    /**
     * Number of columns (out of 12) of empty space to add right of this column.
     * Possible values: {0-12}
     * Also accepts responsive values with `@breakpoint`: "12 8@lg"
     */
    offsetRight: {
      type: String,
      validator: function validator(value) {
        return validateProp(value, ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']);
      }
    },

    /**
     * How the column should align (overrides CdrRow alignment). See CSS flexbox align-self.
     * Possible values: {top, middle, bottom, stretch}.
     * Also accepts responsive values with `@breakpoint`: "middle@sm"
     */
    alignSelf: {
      type: String,
      validator: function validator(value) {
        return validateProp(value, ['top', 'middle', 'bottom', 'stretch']);
      }
    },

    /**
     * Makes the column act as a CdrRow. Setting this to true exposes all props of CdrRow in addition to cdr-col props.
     */
    isRow: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      style: style$8
    };
  },
  computed: {
    isList: function isList() {
      return this.rowType === 'list';
    },
    spanClass: function spanClass() {
      var _this = this;

      var classStr = [];

      if (this.span) {
        var _context;

        _forEachInstanceProperty(_context = this.span.split(' ')).call(_context, function (val) {
          classStr.push(_this.style["cdr-col_span".concat(val)]);
        });
      }

      return classStr.join(' ');
    },
    offsetLeftClass: function offsetLeftClass() {
      var _this2 = this;

      var classStr = [];

      if (this.offsetLeft) {
        var _context2;

        _forEachInstanceProperty(_context2 = this.offsetLeft.split(' ')).call(_context2, function (val) {
          classStr.push(_this2.modifyClassName('cdr-col', "offsetLeft".concat(val)));
        });
      }

      return classStr.join(' ');
    },
    offsetRightClass: function offsetRightClass() {
      var _this3 = this;

      var classStr = [];

      if (this.offsetRight) {
        var _context3;

        _forEachInstanceProperty(_context3 = this.offsetRight.split(' ')).call(_context3, function (val) {
          classStr.push(_this3.modifyClassName('cdr-col', "offsetRight".concat(val)));
        });
      }

      return classStr.join(' ');
    },
    alignSelfClass: function alignSelfClass() {
      var _this4 = this;

      var classStr = [];

      if (this.alignSelf) {
        var _context4;

        _forEachInstanceProperty(_context4 = this.alignSelf.split(' ')).call(_context4, function (val) {
          classStr.push(_this4.modifyClassName('cdr-col', val));
        });
      }

      return classStr.join(' ');
    }
  },
  render: function render() {
    var h = arguments[0];
    var colEl;

    if (!this.isRow && !this.isList) {
      colEl = h("div", {
        "class": clsx(this.style['cdr-col'], this.spanClass, this.offsetLeftClass, this.offsetRightClass, this.alignSelfClass)
      }, [h("div", {
        "class": this.style['cdr-col__content']
      }, [this.$slots.default])]);
    } else if (!this.isRow && this.isList) {
      colEl = h("li", {
        "class": clsx(this.style['cdr-col'], this.spanClass, this.offsetLeftClass, this.offsetRightClass, this.alignSelfClass)
      }, [h("div", {
        "class": this.style['cdr-col__content']
      }, [this.$slots.default])]);
    } else if (this.isRow && this.isList) {
      colEl = h("li", {
        "class": clsx(this.style['cdr-row'], this.style['cdr-col'], this.spanClass, this.offsetLeftClass, this.offsetRightClass, this.alignSelfClass)
      }, [h("cdr-row", {
        "class": this.style['cdr-col'],
        "attrs": _objectSpread$3({}, this.$attrs)
      }, [this.$slots.default])]);
    } else {
      colEl = h("cdr-row", {
        "class": clsx(this.style['cdr-col'], this.spanClass, this.offsetLeftClass, this.offsetRightClass, this.alignSelfClass),
        "attrs": _objectSpread$3({}, this.$attrs)
      }, [this.$slots.default]);
    }

    return colEl;
  }
};

var style$9 = {"cdr-cta":"cdr-cta_4.0.3","cdr-cta__icon":"cdr-cta__icon_4.0.3","cdr-cta--brand":"cdr-cta--brand_4.0.3","cdr-cta--dark":"cdr-cta--dark_4.0.3","cdr-cta--light":"cdr-cta--light_4.0.3","cdr-cta--elevated":"cdr-cta--elevated_4.0.3","cdr-cta--sale":"cdr-cta--sale_4.0.3","cdr-cta--full-width":"cdr-cta--full-width_4.0.3","cdr-cta--fullWidth@xs":"cdr-cta--fullWidth@xs_4.0.3","cdr-cta--fullWidth@sm":"cdr-cta--fullWidth@sm_4.0.3","cdr-cta--fullWidth@md":"cdr-cta--fullWidth@md_4.0.3","cdr-cta--fullWidth@lg":"cdr-cta--fullWidth@lg_4.0.3"};

var CdrCta = {
  name: 'CdrCta',
  mixins: [modifier, space, fullWidth],
  props: {
    /**
      * Change the color of the cdr-cta button match different themes.
      */
    ctaStyle: {
      type: String,
      default: 'dark',
      validator: function validator(value) {
        var _context;

        return _indexOfInstanceProperty(_context = ['brand', 'dark', 'light', 'sale']).call(_context, value) >= 0 || false;
      }
    },
    href: {
      type: String,
      default: '#'
    },

    /** @ignore */
    target: String,

    /** @ignore */
    rel: String
  },
  data: function data() {
    return {
      style: style$9
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-cta';
    },
    ctaClass: function ctaClass() {
      return this.modifyClassName(this.baseClass, this.ctaStyle);
    },
    computedRel: function computedRel() {
      if (this.target === '_blank') {
        return this.rel || 'noopener noreferrer';
      }

      return this.rel;
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("a", {
      "class": clsx(this.style[this.baseClass], this.modifierClass, this.ctaClass, this.fullWidthClass, this.space),
      "attrs": {
        "target": this.target,
        "rel": this.computedRel,
        "href": this.href
      }
    }, [this.$slots.default, h("svg", {
      "attrs": {
        "xmlns": "http://www.w3.org/2000/svg",
        "viewBox": "0 0 24 24",
        "role": "presentation"
      },
      "class": this.style['cdr-cta__icon']
    }, [h("path", {
      "attrs": {
        "d": "M16 12a.997.997 0 0 0-.288-.702l-5.005-5.005a1 1 0 0 0-1.414 1.414L13.585 12 9.29 16.295a1 1 0 0 0 1.417 1.412l4.98-4.98A.997.997 0 0 0 16 12z"
      }
    })])]);
  }
};

var style$a = {"cdr-data-table":"cdr-data-table_4.0.3","cdr-data-table__caption":"cdr-data-table__caption_4.0.3","cdr-data-table__caption-sr":"cdr-data-table__caption-sr_4.0.3","cdr-data-table__scroll-container":"cdr-data-table__scroll-container_4.0.3","cdr-data-table__content":"cdr-data-table__content_4.0.3","align-row-header-content":"align-row-header-content_4.0.3","cdr-data-table--borderless":"cdr-data-table--borderless_4.0.3","cdr-data-table--compact":"cdr-data-table--compact_4.0.3"};

/**
 * Cedar 2 compfor for data table
 * @author [REI Software Engineering](https://rei.github.io/rei-cedar/)
 */

var CdrDataTable = {
  name: 'CdrDataTable',
  mixins: [modifier, space],
  props: {
    id: {
      type: String,
      required: false
    },
    colHeaders: {
      type: [Array, Boolean],
      default: false
    },
    rowHeaders: {
      type: [Array, Boolean],
      default: false
    },
    rowData: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    keyOrder: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    caption: {
      type: String,
      required: false
    },
    constrainWidth: {
      type: Boolean,
      default: true
    }
  },
  data: function data() {
    return {
      cols: 0,
      clientWidth: 0,
      scrollWidth: 0,
      hasColHeaders: false,
      hasRowHeaders: false,
      headerRowHeight: 0,
      rowHeights: null,
      style: style$a
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-data-table';
    },
    lockedCol: function lockedCol() {
      return this.rowData.length > 0 && this.cols > 2 && this.hasRowHeaders;
    },
    isScrolling: function isScrolling() {
      return this.scrollWidth > this.clientWidth && this.lockedCol;
    },
    headerRowAlignHeight: function headerRowAlignHeight() {
      return this.headerRowHeight ? "".concat(this.headerRowHeight + 1, "px") : this.headerRowHeight;
      /* eslint-disable-line */
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.hasColHeaders = typeof this.colHeaders === 'boolean' ? this.colHeaders : this.colHeaders.length > 0;
    this.hasRowHeaders = typeof this.rowHeaders === 'boolean' ? this.rowHeaders : this.rowHeaders.length > 0;

    if (this.rowData.length > 0) {
      this.cols = this.$refs['row-0'].children.length;
    }

    if (this.lockedCol) {
      window.addEventListener('resize', debounce(function () {
        _this.rowHeights = null;

        _this.$nextTick(function () {
          _this.checkScroll();

          _this.setRowsContentHeight();
        });
      }, 250));
      this.$nextTick(function () {
        _this.checkScroll();

        _this.setRowsContentHeight();
      });
    }
  },
  methods: {
    checkScroll: function checkScroll() {
      var scrollContainer = this.$refs['scroll-container'];

      if (scrollContainer !== undefined) {
        this.clientWidth = scrollContainer.clientWidth;
        this.scrollWidth = scrollContainer.scrollWidth;
      }
    },
    getCellContent: function getCellContent(row, key) {
      return row[key] || '';
    },
    setRowsContentHeight: function setRowsContentHeight() {
      var rowContentHeights = [];
      var numRows = this.rowData.length;
      /* main table */

      for (var i = 0; i < numRows; i += 1) {
        var heights = {
          th: this.$refs["row-".concat(i)].children[0].offsetHeight || 1,
          td: this.$refs["row-".concat(i)].children[1].offsetHeight || 0
        };
        rowContentHeights.push(heights);
      }

      if (this.hasColHeaders) {
        this.headerRowHeight = this.$refs['row-col-headers'].children[1].offsetHeight;
      }

      this.rowHeights = rowContentHeights;
    },
    getRowAlignHeight: function getRowAlignHeight(elem, index) {
      // The idea here is only to return a height when it needs it, otherwise return null
      if (this.rowHeights === null) {
        return null;
      }

      var row = this.rowHeights[index];
      var alreadyAligned = row ? row.th - row.td === 1 : true;

      if (alreadyAligned) {
        return null;
      }

      var elemToChange = row.th > row.td ? 'td' : 'th';

      if (elem !== elemToChange) {
        return null;
      }

      return elemToChange === 'td' ? "".concat(row.th - 1, "px") : "".concat(row.td + 1, "px");
    }
  },
  render: function render() {
    var _context,
        _context2,
        _this2 = this;

    var h = arguments[0];
    return h("div", {
      "class": clsx(this.style[this.baseClass], this.modifierClass, this.space)
    }, [this.caption && h("span", {
      "class": this.style['cdr-data-table__caption'],
      "attrs": {
        "aria-hidden": "true"
      }
    }, [this.caption]), h("div", {
      "class": clsx(this.style['cdr-data-table__scroll-container'], {
        'locked-col': this.lockedCol
      }, {
        'is-scrolling': this.isScrolling
      }),
      "ref": "scroll-container"
    }, [h("table", {
      "class": clsx(this.style['cdr-data-table__content'], {
        'constrain-width': this.constrainWidth
      }),
      "attrs": {
        "id": this.id ? this.id : null
      }
    }, [this.caption && h("caption", {
      "class": this.style['cdr-data-table__caption-sr']
    }, [this.caption]), this.hasColHeaders && h("thead", [this.$slots.thead || h("tr", {
      "ref": "row-col-headers"
    }, [h("th", {
      "class": "empty",
      "directives": [{
        name: "show",
        value: this.hasRowHeaders
      }],
      "attrs": {
        "scope": "col"
      },
      "style": {
        height: this.headerRowAlignHeight
      }
    }), _mapInstanceProperty(_context = this.colHeaders).call(_context, function (header, index) {
      return h("th", {
        "key": "header-row-col-".concat(index),
        "attrs": {
          "scope": "col"
        }
      }, [header]);
    })])]), h("tbody", {
      "ref": "table-body"
    }, [this.$slots.tbody || _mapInstanceProperty(_context2 = this.rowData).call(_context2, function (row, rowIndex) {
      var _context3;

      return h("tr", {
        "key": "row-".concat(rowIndex),
        "ref": "row-".concat(rowIndex)
      }, [_this2.hasRowHeaders && h("th", {
        "attrs": {
          "scope": "row"
        },
        "ref": "row-".concat(rowIndex, "-th"),
        "class": _this2.style['align-row-header-content'],
        "style": {
          height: _this2.getRowAlignHeight('th', rowIndex)
        }
      }, [_this2.rowHeaders[rowIndex]]), _mapInstanceProperty(_context3 = _this2.keyOrder).call(_context3, function (key, index) {
        var _context4;

        return h("td", {
          "key": _concatInstanceProperty(_context4 = "td-".concat(index, "-")).call(_context4, key),
          "style": {
            height: _this2.getRowAlignHeight('td', rowIndex)
          }
        }, [_this2.getCellContent(row, key)]);
      })]);
    })])])])]);
  }
};

function ownKeys$4(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$4(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$4(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var accountProfileFill = {
  name: 'IconAccountProfileFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$4({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M4 21a1 1 0 01-1-1h-.008a9.08 9.08 0 01.02-.159 9.08 9.08 0 015.454-7.127 5.5 5.5 0 117.068 0A9.08 9.08 0 0121.008 20H21a1 1 0 01-1 1H4z"
      }
    })]);
  }
};

function ownKeys$5(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$5(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$5(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var accountProfile = {
  name: 'IconAccountProfile',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$5({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 12a3.5 3.5 0 100-7 3.5 3.5 0 000 7zm6.762 7a7.073 7.073 0 00-13.524 0h13.524zM4 21a1 1 0 01-1-1h-.008a9.08 9.08 0 01.02-.159 9.08 9.08 0 015.454-7.127 5.5 5.5 0 117.068 0A9.08 9.08 0 0121.008 20H21a1 1 0 01-1 1H4z"
      }
    })]);
  }
};

function ownKeys$6(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$6(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$6(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var arrowDown = {
  name: 'IconArrowDown',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$6({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M11 16.585L7.705 13.29a1 1 0 00-1.412 1.417l4.98 4.98a.997.997 0 001.429.025l5.005-5.005a1 1 0 00-1.414-1.414L13 16.586V5a1 1 0 00-2 0v11.585z"
      }
    })]);
  }
};

function ownKeys$7(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$7(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$7(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$7(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var arrowLeft = {
  name: 'IconArrowLeft',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$7({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M7.415 11l3.295-3.295a1 1 0 00-1.417-1.412l-4.98 4.98a.997.997 0 00-.025 1.429l5.005 5.005a1 1 0 101.414-1.414L7.414 13H19a1 1 0 000-2H7.415z"
      }
    })]);
  }
};

function ownKeys$8(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$8(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$8(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$8(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var arrowRight = {
  name: 'IconArrowRight',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$8({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M16.585 13l-3.295 3.295a1 1 0 001.417 1.412l4.98-4.98a.997.997 0 00.025-1.429l-5.005-5.005a1 1 0 00-1.414 1.414L16.586 11H5a1 1 0 000 2h11.585z"
      }
    })]);
  }
};

function ownKeys$9(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$9(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$9(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$9(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var arrowUp = {
  name: 'IconArrowUp',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$9({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13 7.415l3.295 3.295a1 1 0 001.412-1.417l-4.98-4.98a.997.997 0 00-1.429-.025L6.293 9.293a1 1 0 001.414 1.414L11 7.414V19a1 1 0 002 0V7.415z"
      }
    })]);
  }
};

function ownKeys$a(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$a(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$a(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$a(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var atv = {
  name: 'IconAtv',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$a({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12.341 14h-.682A5.998 5.998 0 006 10a5.972 5.972 0 00-3 .803V9.007A1 1 0 014.42 8.1l7.588 1.487 2.48-1.461L13.475 6H12a1 1 0 110-2h2a1 1 0 01.939.655l1.066 2.348 3.451 2.107A1 1 0 0120 10v.341A5.99 5.99 0 0018 10a5.987 5.987 0 00-5.659 4zM6 20a4 4 0 110-8 4 4 0 010 8zm0-2a2 2 0 100-4 2 2 0 000 4zm12 2a4 4 0 110-8 4 4 0 010 8zm0-2a2 2 0 100-4 2 2 0 000 4z"
      }
    })]);
  }
};

function ownKeys$b(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$b(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$b(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$b(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var bedOutline = {
  name: 'IconBedOutline',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$b({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M9 10h12a1 1 0 011 1v3.785a1.004 1.004 0 010 .43V19a1 1 0 01-2 0v-3H4v3a1 1 0 01-2 0V5a1 1 0 112 0v3.25A1.98 1.98 0 015 8h2a2 2 0 012 2zm-5 2v2h16v-2H4z"
      }
    })]);
  }
};

function ownKeys$c(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$c(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$c(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$c(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var bikeShop = {
  name: 'IconBikeShop',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$c({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13.517 12.18l7.206 7.207a.945.945 0 01-1.336 1.336l-7.206-7.206a1.26 1.26 0 111.336-1.336zm5.37 2.753a7.5 7.5 0 10-3.977 3.977l1.585 1.585-.064-.023a1.253 1.253 0 00-1.574.65l-.122.266a1.052 1.052 0 01-1.67.332l-.213-.197a1.255 1.255 0 00-1.704 0l-.213.197a1.052 1.052 0 01-1.67-.332l-.122-.266a1.253 1.253 0 00-1.574-.65l-.272.1a1.052 1.052 0 01-1.416-.943l-.011-.297a1.251 1.251 0 00-1.204-1.201l-.291-.011a1.051 1.051 0 01-.947-1.414l.103-.28a1.248 1.248 0 00-.65-1.568l-.267-.122a1.051 1.051 0 01-.334-1.67l.202-.218a1.247 1.247 0 000-1.696l-.202-.218a1.05 1.05 0 01.334-1.67l.266-.122c.594-.273.878-.956.651-1.568l-.103-.28a1.05 1.05 0 01.947-1.414l.29-.01A1.251 1.251 0 005.87 4.667l.01-.297a1.05 1.05 0 011.417-.943l.272.1a1.253 1.253 0 001.574-.65l.122-.266a1.052 1.052 0 011.67-.332l.213.197c.48.446 1.224.446 1.704 0l.213-.197a1.052 1.052 0 011.67.332l.122.266c.273.594.96.878 1.574.65l.272-.1a1.052 1.052 0 011.416.943l.011.297c.025.653.55 1.176 1.204 1.201l.291.011a1.051 1.051 0 01.947 1.414l-.103.28a1.248 1.248 0 00.65 1.568l.267.122a1.051 1.051 0 01.334 1.67l-.202.218a1.247 1.247 0 000 1.696l.202.218a1.05 1.05 0 01-.334 1.67l-.266.122a1.248 1.248 0 00-.651 1.568l.052.14-1.634-1.633z"
      }
    })]);
  }
};

function ownKeys$d(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$d(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$d(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$d(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var binoculars = {
  name: 'IconBinoculars',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$d({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M10 13v1h3.996v2H10v1a4 4 0 11-7.853-1.085l1.795-8.93.093-.442A3 3 0 0110 7v4h3.997V7a3 3 0 015.965-.456l.093.442 1.795 8.93A4.003 4.003 0 0117.998 21a4 4 0 01-4-4v-4H10zm9.296.214l-1.308-6.38a1.01 1.01 0 00-.99-.835 1 1 0 00-1 1v6.536a4.016 4.016 0 013.299-.321zm-14.6 0c.408-.14.844-.215 1.298-.215.73 0 1.413.195 2.002.536V7a1 1 0 00-1-1 1.01 1.01 0 00-.99.836l-1.31 6.38zM18 19a2 2 0 100-4 2 2 0 000 4zM6.011 19a2 2 0 100-4 2 2 0 000 4z"
      }
    })]);
  }
};

function ownKeys$e(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$e(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$e(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$e(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var birding = {
  name: 'IconBirding',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$e({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M14.56 8.828L9.936 13H12a1 1 0 001-1 1 1 0 012 0 3 3 0 01-3 3H7.718L6.61 16H14a3 3 0 003-3V6a1 1 0 10-2 0l.001 2a.997.997 0 01-.235.642l-.205.186zM19 6v.517l1.172.498A1 1 0 0121 8v1h-1.233l-.005.013L19.73 9H19v4a5 5 0 01-5 5v1a1 1 0 110 2h-1a1 1 0 01-1-1v-2H4a1 1 0 01-.592-1.806L13 7.542V6a3 3 0 016 0z"
      }
    })]);
  }
};

function ownKeys$f(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$f(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$f(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$f(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var boat = {
  name: 'IconBoat',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$f({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19 17h-6v3h4a1 1 0 010 2H7a1 1 0 010-2h4v-5H5a1 1 0 01-.813-1.582L11 4.036V3a1 1 0 112 0v1.007l6.789 11.378a1 1 0 01-.79 1.615zm-8-4V7.439L6.96 13H11zm2-5.123V15h4.24L13 7.877z"
      }
    })]);
  }
};

function ownKeys$g(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$g(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$g(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$g(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var boating = {
  name: 'IconBoating',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$g({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M6.008 16.578l-.01-.01.387-.387A6.964 6.964 0 015.071 13H3a1 1 0 010-2h2.07a6.964 6.964 0 011.325-3.194 1.015 1.015 0 01-.052-.049L4.929 6.343A1 1 0 016.343 4.93l.707.707.012-.012.76.76a6.964 6.964 0 013.165-1.311V4.49H11V3a1 1 0 012 0v2a.802.802 0 01-.003.07 6.964 6.964 0 013.184 1.315l.424-.424.01.01 1.042-1.042a1 1 0 011.414 1.414l-1.414 1.414a1.015 1.015 0 01-.052.049A6.964 6.964 0 0118.928 11h2.07a1 1 0 010 2h-2.07a6.964 6.964 0 01-1.312 3.178l.052.052-.012.012 1.414 1.415a1 1 0 01-1.414 1.414l-1.414-1.414a1.015 1.015 0 01-.049-.052 6.964 6.964 0 01-3.197 1.324.843.843 0 01.003.071v2a1 1 0 01-2 0v-1.51h-.013v-.563a6.964 6.964 0 01-3.181-1.322 1.015 1.015 0 01-.049.052L6.343 19.07a1 1 0 11-1.414-1.414l1.079-1.08v.002zM14.395 11H16.9a4.972 4.972 0 00-.736-1.769L14.394 11h.001zm.35-3.18a4.971 4.971 0 00-1.758-.723V9.58l1.759-1.76h-.001zM9.567 13H7.1c.129.634.377 1.224.72 1.746L9.567 13zm-.335 3.164c.524.35 1.118.602 1.756.733v-2.489l-1.756 1.756zM9.61 11L7.838 9.228A4.972 4.972 0 007.1 11h2.51zm-.353-3.181l1.73 1.73V7.102a4.972 4.972 0 00-1.73.716v.001zM14.438 13l1.743 1.743c.343-.521.59-1.11.719-1.743h-2.462zm.334 3.162l-1.785-1.785v2.526a4.972 4.972 0 001.785-.741z"
      }
    })]);
  }
};

function ownKeys$h(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$h(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$h(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$h(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var bookmarkFill = {
  name: 'IconBookmarkFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$h({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M5 2h14a1 1 0 011 1v18a1 1 0 01-1.6.8L12.002 17 5.6 21.8A1 1 0 014 21V3a1 1 0 011-1z"
      }
    })]);
  }
};

function ownKeys$i(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$i(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$i(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$i(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var bookmarkStroke = {
  name: 'IconBookmarkStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$i({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M5 2h14a1 1 0 011 1v18a1 1 0 01-1.6.8L12.002 17 5.6 21.8A1 1 0 014 21V3a1 1 0 011-1zm1 2v15l5.402-4.05a1 1 0 011.2 0L18 19V4H6z"
      }
    })]);
  }
};

function ownKeys$j(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$j(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$j(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$j(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var brandAbstract = {
  name: 'IconBrandAbstract',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$j({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M10 9a5 5 0 110 10 5 5 0 010-10zm9-4v14h-3V8H5V5h14zm-9 7a2 2 0 100 4 2 2 0 000-4z"
      }
    })]);
  }
};

function ownKeys$k(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$k(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$k(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$k(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var brandCodeSandbox = {
  name: 'IconBrandCodeSandbox',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$k({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 1.853l9 5.062v10.17l-9 5.062-9-5.062V6.915l9-5.062zM5 9.118v3.409l3 1.58v3.496l3 1.687v-7.172l-6-3zm14 0l-6 3v7.172l3-1.687v-3.487l3-1.587V9.118zm-4.481-3.554L12.006 7 9.478 5.566 6.133 7.448 12 10.382l5.867-2.934-3.348-1.884z"
      }
    })]);
  }
};

function ownKeys$l(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$l(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$l(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$l(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var brandGithub = {
  name: 'IconBrandGithub',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$l({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2C6.477 2 2 6.477 2 12c0 4.418 2.865 8.166 6.839 9.489.5.092.682-.217.682-.482 0-.237-.008-.866-.013-1.7-2.782.603-3.369-1.342-3.369-1.342-.454-1.155-1.11-1.462-1.11-1.462-.908-.62.069-.608.069-.608 1.003.07 1.531 1.03 1.531 1.03.892 1.529 2.341 1.087 2.91.831.092-.646.35-1.086.636-1.336-2.22-.253-4.555-1.11-4.555-4.943 0-1.091.39-1.984 1.029-2.683-.103-.253-.446-1.27.098-2.647 0 0 .84-.268 2.75 1.026A9.578 9.578 0 0112 6.836c.85.004 1.705.114 2.504.337 1.909-1.294 2.747-1.026 2.747-1.026.546 1.377.203 2.394.1 2.647.64.699 1.028 1.592 1.028 2.683 0 3.842-2.339 4.687-4.566 4.935.359.309.678.919.678 1.852 0 1.336-.012 2.415-.012 2.743 0 .267.18.579.688.481C19.137 20.163 22 16.418 22 12c0-5.523-4.478-10-10-10"
      }
    })]);
  }
};

function ownKeys$m(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$m(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$m(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$m(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var brandLinkedin = {
  name: 'IconBrandLinkedin',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$m({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19.668 3c.688 0 1.257.51 1.325 1.165l.007.132v15.404c0 .672-.526 1.226-1.196 1.292l-.136.007H4.328a1.319 1.319 0 01-1.321-1.166L3 19.7V4.297a1.31 1.31 0 011.193-1.29L4.329 3h15.339zm-4.532 6.535c-1.223 0-2.066.63-2.458 1.268l-.069.119h-.035V9.748h-2.56v8.59h2.666v-4.25c0-1.12.214-2.205 1.603-2.205 1.205 0 1.363.993 1.384 1.91l.003.368v4.177h2.668v-4.711l-.005-.391c-.06-2.12-.649-3.701-3.197-3.701zm-6.797.213h-2.67v8.59h2.67v-8.59zm-1.335-4.27a1.548 1.548 0 100 3.096 1.548 1.548 0 000-3.096z"
      }
    })]);
  }
};

function ownKeys$n(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$n(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$n(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$n(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var brandReiIceAxes = {
  name: 'IconBrandReiIceAxes',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$n({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M14.623 2.354c.148.038.27.073.368.103a10.004 10.004 0 016.982 10.26L21.95 13l-.802-.276a1 1 0 01-.671-.874c-.137-1.9-.893-3.306-2.267-4.217L18 7.5l-4.556 4.527 7.526 7.523c.186.186.334.408.435.651l.573 1.383a.301.301 0 01-.393.393l-1.383-.573a2.007 2.007 0 01-.651-.435L12 13.463 4.447 20.97c-.149.15-.32.274-.507.37l-.144.065-1.382.573a.301.301 0 01-.413-.327l.02-.066.572-1.383a2 2 0 01.328-.535l.107-.116 7.525-7.524L6 7.5c-1.508.905-2.333 2.355-2.477 4.35a1 1 0 01-.672.874L2.05 13A10.003 10.003 0 019.008 2.457c.097-.03.22-.065.367-.103A.5.5 0 0110 2.84v.792a1 1 0 01-.56.897l-1.09.535a1 1 0 00-.267 1.605l3.915 3.914 3.918-3.914a1 1 0 00.137-.17l.053-.097a1 1 0 00-.355-1.28l-.102-.058-1.09-.535a1 1 0 01-.552-.772l-.008-.125V2.84a.5.5 0 01.447-.498l.088-.001.09.014zM6.5 5a.5.5 0 100 1 .5.5 0 000-1zm11 0a.5.5 0 100 1 .5.5 0 000-1z"
      }
    })]);
  }
};

function ownKeys$o(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$o(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$o(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$o(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var brandSketch = {
  name: 'IconBrandSketch',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$o({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 18.352L14.993 10H9.006L12 18.352zm-1.942-2.362L7.946 10H5.13l4.928 5.99zM16.054 10l-2.116 5.995L18.87 10h-2.816zM9.16 9h5.68l-2.836-5L9.16 9zm4.133-4.735L16 9V4.721l-2.707-.456zM8 4.727V9l2.695-4.718L8 4.727zM17 9h2.693L17 5.12V9zM4.306 8.998L7 9V5.12L4.306 8.998zm7.592-6.941a1 1 0 01.33 0l5.338.9a1 1 0 01.655.415l3.547 5.107a1 1 0 01-.049 1.205l-8.947 10.877a1 1 0 01-1.544 0L2.28 9.684a1 1 0 01-.05-1.205l3.547-5.105a1 1 0 01.658-.416l5.462-.901z"
      }
    })]);
  }
};

function ownKeys$p(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$p(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$p(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$p(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var buddies = {
  name: 'IconBuddies',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$p({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M8 3a4 4 0 012.536 7.094c.568.278 1.09.65 1.547 1.095a4 4 0 116.453 3.905c1.726.849 3.016 2.542 3.41 4.585l.042.242A.935.935 0 0121.064 21h-10.13a.933.933 0 01-.933-.933l.002-.072.009-.072A6.607 6.607 0 0112.122 16H2.933A.933.933 0 012 15.067l.002-.072.009-.072c.335-2.152 1.658-3.946 3.452-4.83A4 4 0 018 3zm8 13c-2.025 0-3.797 1.462-4.369 3.5h8.731C19.771 17.436 18.006 16 16 16zm0-6.5a2.5 2.5 0 100 5 2.5 2.5 0 000-5zM8 11c-2.025 0-3.797 1.462-4.369 3.5h8.731C11.771 12.436 10.006 11 8 11zm0-6.5a2.5 2.5 0 100 5 2.5 2.5 0 000-5z"
      }
    })]);
  }
};

function ownKeys$q(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$q(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$q(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$q(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var bus = {
  name: 'IconBus',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$q({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M5.22 18.527H3.127a1 1 0 01-.995-.894c-.675-6.335 1.454-9.997 1.543-10.146a1 1 0 01.856-.481h.484V5a1 1 0 011-1h11.983a1 1 0 011 1v2.006h.313c.308 0 .598.14.787.382 2.534 3.22 1.885 9.959 1.857 10.24-.053.51-.483.899-.995.899h-2.18a2.5 2.5 0 01-4.56 0H9.78a2.5 2.5 0 01-4.56 0zm9.004-2.064a2.5 2.5 0 014.552 0h1.217c.089-1.993 0-5.507-1.201-7.458H5.147c-.447 1.01-1.216 2.648-1.15 7.458h1.226a2.5 2.5 0 014.552 0h4.449zM7 7.008h10V6H7v1.008zm.5 11.242a.75.75 0 100-1.5.75.75 0 000 1.5zm9 0a.75.75 0 100-1.5.75.75 0 000 1.5zm-9.498-7.248h5.001a1 1 0 010 2H7.002a1 1 0 010-2zm7.999.005h2.011a1 1 0 010 2h-2.011a1 1 0 110-2z"
      }
    })]);
  }
};

function ownKeys$r(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$r(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$r(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$r(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var calendar = {
  name: 'IconCalendar',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$r({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M18 5h2a1 1 0 011 1v14a1 1 0 01-1 1H4a1 1 0 01-1-1V6a1 1 0 011-1h2v1a2 2 0 104 0V5h4v1a2 2 0 104 0V5zM4.5 9v10.5h15V9h-15zM7 11.5h2v2H7v-2zm0 4h2v2H7v-2zm4-4h2v2h-2v-2zm0 4h2v2h-2v-2zm4-4h2v2h-2v-2zm0 4h2v2h-2v-2zM8 3a1 1 0 011 1v2a1 1 0 11-2 0V4a1 1 0 011-1zm8 0a1 1 0 011 1v2a1 1 0 01-2 0V4a1 1 0 011-1z"
      }
    })]);
  }
};

function ownKeys$s(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$s(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$s(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$s(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var camera = {
  name: 'IconCamera',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$s({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M3 7h3l1.703-2.555A1 1 0 018.535 4h6.933a1 1 0 01.833.446L18 7h3a1 1 0 011 1v11a1 1 0 01-1 1H3a1 1 0 01-1-1V8a1 1 0 011-1zm1 11h16V9h-2.534a1 1 0 01-.832-.446L14.933 6H9.07L7.367 8.555A1 1 0 016.535 9H4v9zm8 0a5 5 0 110-10 5 5 0 010 10zm0-2a3 3 0 100-6 3 3 0 000 6z"
      }
    })]);
  }
};

function ownKeys$t(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$t(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$t(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$t(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var canoe = {
  name: 'IconCanoe',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$t({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M14.01 11.975l.976 2H16.5h-.033.033a2.5 2.5 0 001.463-4.527A3 3 0 0115 11.975h-.99zm-2.219 0H9a3 3 0 01-2.963-2.527A2.5 2.5 0 007.5 13.975h5.265l-.974-2zm-.973-2L8.166 4.527a1 1 0 011.687-1.074l.004.007c.03.05.056.103.077.157l3.101 6.358H15a1 1 0 001-1v-1a1 1 0 011.13-.992c2.332.143 3.87 2.1 3.87 4.492a4.5 4.5 0 01-4.5 4.5h-.449l.86 1.024a.98.98 0 01.227.302l.877 1.798a1 1 0 01-.46 1.337l-.9.438a1 1 0 01-1.336-.46l-.877-1.798a.998.998 0 01-.098-.349l-.375-1.778a.997.997 0 01-.03-.1l-.201-.414H7.5a4.5 4.5 0 01-4.5-4.5c0-2.392 1.538-4.349 3.87-4.492A1 1 0 018 7.975v1a1 1 0 001 1h1.818z"
      }
    })]);
  }
};

function ownKeys$u(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$u(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$u(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$u(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var car = {
  name: 'IconCar',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$u({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M3 18a1 1 0 01-1-1V9c0-.287.121-.546.315-.728l3.9-3.891A.998.998 0 017 4h8a1 1 0 01.942.663l1.78 3.487 3.408.858A1 1 0 0122 10v7a1 1 0 01-1 1h-2.05a2.5 2.5 0 01-4.9 0h-4.1a2.5 2.5 0 01-4.9 0H3zm4.5.25a.75.75 0 100-1.5.75.75 0 000 1.5zm9 0a.75.75 0 100-1.5.75.75 0 000 1.5zM4 16h1.5c.456-.607 1.182-1 2-1 .818 0 1.544.393 2 1h5c.456-.607 1.182-1 2-1 .818 0 1.544.393 2 1H20v-5.215l-3.176-.8a1.001 1.001 0 01-.799-.76L14.38 6H7.412L4 9.404V16zm2.002-5.997a1 1 0 000 2h4.01a1 1 0 100-2h-4.01zm6.999.004a1 1 0 000 2h2.011a1 1 0 100-2h-2.011z"
      }
    })]);
  }
};

function ownKeys$v(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$v(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$v(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$v(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var IconCaretLeft = {
  name: 'IconCaretLeft',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$v({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M8 12c0 .273.11.521.288.702l5.005 5.005a1 1 0 001.414-1.414L10.415 12l4.295-4.295a1 1 0 00-1.417-1.412l-4.98 4.98A.997.997 0 008 12z"
      }
    })]);
  }
};

function ownKeys$w(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$w(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$w(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$w(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var IconCaretRight = {
  name: 'IconCaretRight',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$w({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M16 12a.997.997 0 00-.288-.702l-5.005-5.005a1 1 0 00-1.414 1.414L13.585 12 9.29 16.295a1 1 0 001.417 1.412l4.98-4.98A.997.997 0 0016 12z"
      }
    })]);
  }
};

function ownKeys$x(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$x(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$x(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$x(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var caretUp = {
  name: 'IconCaretUp',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$x({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 8a.997.997 0 00-.702.288l-5.005 5.005a1 1 0 001.414 1.414L12 10.415l4.295 4.295a1 1 0 001.412-1.417l-4.98-4.98A.997.997 0 0012 8z"
      }
    })]);
  }
};

function ownKeys$y(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$y(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$y(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$y(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var cartFill = {
  name: 'IconCartFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$y({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M9.25 18.5a1.25 1.25 0 110 2.5 1.25 1.25 0 010-2.5zm7.5 0a1.25 1.25 0 110 2.5 1.25 1.25 0 010-2.5zM6 3c.317 0 .6.147.782.377.085.105.15.23.187.369L7.573 6H20a1 1 0 01.936.648c.073.19.089.404.032.616l-1.607 5.998a1 1 0 01-1.048.738H9.168l-.402 1.5H18a1 1 0 010 2H7.47a1 1 0 01-.864-.497.997.997 0 01-.107-.77l.873-3.258L5.236 5H4a1 1 0 110-2h2z"
      }
    })]);
  }
};

function ownKeys$z(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$z(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$z(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$z(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var cart = {
  name: 'IconCart',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$z({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M9.25 18.5a1.25 1.25 0 110 2.5 1.25 1.25 0 010-2.5zm7.5 0a1.25 1.25 0 110 2.5 1.25 1.25 0 010-2.5zM6 3c.317 0 .6.147.782.377.085.105.15.23.187.369L7.573 6H20a1 1 0 01.936.648c.073.19.089.404.032.616l-1.607 5.998a1 1 0 01-1.048.738H9.168l-.402 1.5H18a1 1 0 010 2H7.47a1 1 0 01-.864-.497.997.997 0 01-.107-.77l.873-3.258L5.236 5H4a1 1 0 110-2h2zm12.7 5H8.11l1.071 4h8.447L18.7 8z"
      }
    })]);
  }
};

function ownKeys$A(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$A(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$A(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$A(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var chainLink = {
  name: 'IconChainLink',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$A({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M5.586 12.762a3.998 3.998 0 013.864-1.036L5.586 15.59a2 2 0 102.828 2.828l3.864-3.864a3.998 3.998 0 01-1.035 3.864l-1.415 1.415a4 4 0 11-5.656-5.657zm10.117-4.47a1 1 0 010 1.415l-5.996 5.996a1 1 0 11-1.414-1.414l5.996-5.996a1 1 0 011.414 0zm4.13-4.12a4 4 0 01.15 5.497l-.15.16-1.415 1.414a3.996 3.996 0 01-3.64 1.088l-.224-.053 3.864-3.864a2 2 0 00-2.7-2.945l-.128.117-3.864 3.864a4 4 0 01.868-3.686l.168-.178 1.414-1.414a4 4 0 015.657 0z"
      }
    })]);
  }
};

function ownKeys$B(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$B(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$B(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$B(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var chat = {
  name: 'IconChat',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$B({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M21 4a1 1 0 011 1v11a1 1 0 01-1 1h-2.002v2a.999.999 0 01-1.635.771L14 17H3a1 1 0 01-1-1V5a1 1 0 011-1h18zm-1 2H4v9h10.718l2.28 1.879V15H20V6zm-7.5 3a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm-4 0a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm8 0a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"
      }
    })]);
  }
};

function ownKeys$C(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$C(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$C(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$C(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var checkFill = {
  name: 'IconCheckFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$C({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm4.77-13.357a1 1 0 10-1.533-1.286l-5.95 7.083-1.52-1.817a1 1 0 00-1.533 1.285l2.227 2.66a.999.999 0 001.565.1l6.743-8.025z"
      }
    })]);
  }
};

function ownKeys$D(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$D(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$D(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$D(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var checkLg = {
  name: 'IconCheckLg',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$D({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M9.673 18.669h.001L19.766 6.644a1 1 0 10-1.532-1.286l-9.3 11.085-3.169-3.776a1 1 0 10-1.532 1.286l3.875 4.618a.999.999 0 001.565.099z"
      }
    })]);
  }
};

function ownKeys$E(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$E(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$E(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$E(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var checkSm = {
  name: 'IconCheckSm',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$E({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M16.77 8.645a1 1 0 10-1.533-1.286l-5.95 7.083-1.52-1.817a1 1 0 10-1.533 1.285l2.227 2.66a.999.999 0 001.565.1l6.743-8.025z"
      }
    })]);
  }
};

function ownKeys$F(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$F(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$F(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$F(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var checkStroke = {
  name: 'IconCheckStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$F({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 2a8 8 0 100 16 8 8 0 000-16zm3.237 3.36a1 1 0 111.532 1.285l-6.743 8.025a.997.997 0 01-1.565-.1l-2.227-2.66a1 1 0 111.532-1.285l1.52 1.817z"
      }
    })]);
  }
};

function ownKeys$G(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$G(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$G(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$G(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var climb = {
  name: 'IconClimb',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$G({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19.24 11.306a1 1 0 01.729 1.212l-1.078 3.979a1 1 0 01-1.212.728l-.51-.127c-.182.61-.377 1.244-.585 1.902a5.001 5.001 0 01-9.12.106c-1.992-4.486-3.142-8.23-3.451-11.232A5.5 5.5 0 019.5 2c1.205 0 3.043.237 5.513.71A5.502 5.502 0 0119 8c0 .85-.115 1.903-.346 3.16l.587.146h-.001zM17 8a3.502 3.502 0 00-2.46-3.343C12.233 4.217 10.536 4 9.5 4a3.5 3.5 0 00-3.493 3.721c.293 2.755 1.383 6.29 3.27 10.542a3 3 0 005.436.02c.182-.576.353-1.132.513-1.67l-.458-.113a1 1 0 01-.728-1.213l1.078-3.979a1 1 0 011.212-.728l.38.095C16.904 9.597 17 8.703 17 8zm-.76 6.806l.97.242.555-2.049-.97-.241-.555 2.048z"
      }
    })]);
  }
};

function ownKeys$H(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$H(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$H(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$H(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var clipboard = {
  name: 'IconClipboard',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$H({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M6 6v14h12V6h1a1 1 0 011 1v14a1 1 0 01-1 1H5a1 1 0 01-1-1V7a1 1 0 011-1h1zm6 8v1H8v-1h4zm4-2v1H8v-1h8zm0-2v1H8v-1h8zm-4-8a2 2 0 011.732 3.001L16 5a1 1 0 011 1v1H7V6a1 1 0 011-1l2.268.001A2 2 0 0112 2zm0 1a1 1 0 100 2 1 1 0 000-2z"
      }
    })]);
  }
};

function ownKeys$I(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$I(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$I(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$I(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var clock = {
  name: 'IconClock',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$I({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 2a8 8 0 100 16 8 8 0 000-16zm-.25 2a.75.75 0 01.75.75v5.097l2.775 2.775a.78.78 0 01-1.103 1.103l-2.884-2.884A.749.749 0 0111 12.25v-5.5a.75.75 0 01.75-.75z"
      }
    })]);
  }
};

function ownKeys$J(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$J(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$J(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$J(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var codeHtml = {
  name: 'IconCodeHtml',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$J({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M4.414 12l2.293 2.293a1 1 0 11-1.414 1.414l-3-2.999a1 1 0 010-1.414l3-3.001a1 1 0 111.414 1.414l-2.293 2.294zm12.879-2.293a1 1 0 111.414-1.414l3 3a1 1 0 010 1.415l-3 3a1 1 0 11-1.414-1.415L19.586 12l-2.293-2.294zm-4.255-4.982a1 1 0 111.924.55l-4 14a1 1 0 11-1.924-.55l4-14z"
      }
    })]);
  }
};

function ownKeys$K(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$K(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$K(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$K(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var codeJs = {
  name: 'IconCodeJs',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$K({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M17 9V6a1 1 0 00-1-1 1 1 0 010-2 3 3 0 013 3v3a2 2 0 002 2 1 1 0 010 2 2 2 0 00-2 2v3a3 3 0 01-3 3 1 1 0 010-2 1 1 0 001-1v-3a3.99 3.99 0 011.354-3A3.99 3.99 0 0117 9zM7 9a3.99 3.99 0 01-1.354 3A3.99 3.99 0 017 15v3a1 1 0 001 1 1 1 0 010 2 3 3 0 01-3-3v-3a2 2 0 00-2-2 1 1 0 010-2 2 2 0 002-2V6a3 3 0 013-3 1 1 0 110 2 1 1 0 00-1 1v3zm2 8a1 1 0 110-2 1 1 0 010 2zm3 0a1 1 0 110-2 1 1 0 010 2zm3 0a1 1 0 110-2 1 1 0 010 2z"
      }
    })]);
  }
};

function ownKeys$L(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$L(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$L(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$L(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var compass = {
  name: 'IconCompass',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$L({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16zm.224-7.776l.487-.937-.937.487-.487.937.937-.487zm-1.751-1.748v-.002l.002-.002v.001l5.366-2.786a.35.35 0 01.472.472l-2.786 5.365v.002l-.002.002v-.001l-5.366 2.786a.35.35 0 01-.472-.472l2.786-5.365z"
      }
    })]);
  }
};

function ownKeys$M(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$M(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$M(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$M(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var copy = {
  name: 'IconCopy',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$M({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19 2a1 1 0 011 1v15a1 1 0 01-1 1h-2v2a1 1 0 01-1 1H5a1 1 0 01-1-1V6a1 1 0 011-1h2V3a1 1 0 011-1h11zM7 7H6v13h9v-1H8a1 1 0 01-1-1V7zm11-3H9v13h9V4zm-4 6v1h-4v-1h4zm3-2v1h-7V8h7zm0-2v1h-7V6h7z"
      }
    })]);
  }
};

function ownKeys$N(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$N(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$N(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$N(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var couponFill = {
  name: 'IconCouponFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$N({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19.998 3a1 1 0 011 1l-.011 7.587a1 1 0 01-.293.705l-8.404 8.414a1 1 0 01-1.411.004l-7.582-7.506a1 1 0 01-.007-1.415l8.402-8.492A1 1 0 0112.403 3h7.595zM16.75 6a1.25 1.25 0 100 2.5 1.25 1.25 0 000-2.5z"
      }
    })]);
  }
};

function ownKeys$O(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$O(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$O(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$O(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var couponStroke = {
  name: 'IconCouponStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$O({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19.998 3a1 1 0 011 1l-.011 7.587a1 1 0 01-.293.705l-8.404 8.414a1 1 0 01-1.411.004l-7.582-7.506a1 1 0 01-.007-1.415l8.402-8.492A1 1 0 0112.403 3h7.595zm-1.002 2h-6.175l-7.408 7.485 6.165 6.103 7.41-7.417L18.995 5zM16.75 6a1.25 1.25 0 110 2.5 1.25 1.25 0 010-2.5z"
      }
    })]);
  }
};

function ownKeys$P(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$P(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$P(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$P(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var creditCard = {
  name: 'IconCreditCard',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$P({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M21 5a1 1 0 011 1v12a1 1 0 01-1 1H3a1 1 0 01-1-1V6a1 1 0 011-1h18zm-1 7H4v5h16v-5zm0-5H4v2h16V7zm-4 7h3v2h-3v-2zm-3 0h2v2h-2v-2z"
      }
    })]);
  }
};

function ownKeys$Q(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$Q(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$Q(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$Q(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var day = {
  name: 'IconDay',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$Q({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 15a3 3 0 100-6 3 3 0 000 6zm0 2a5 5 0 110-10 5 5 0 010 10zm0-15a1 1 0 011 1v2a1 1 0 01-2 0V3a1 1 0 011-1zm0 16a1 1 0 011 1v2a1 1 0 01-2 0v-2a1 1 0 011-1zm7.071-13.071a1 1 0 010 1.414l-1.414 1.414a1 1 0 11-1.414-1.414l1.414-1.414a1 1 0 011.414 0zM7.757 16.243a1 1 0 010 1.414L6.343 19.07a1 1 0 11-1.414-1.414l1.414-1.414a1 1 0 011.414 0v.001zM22 12a1 1 0 01-1 1h-2a1 1 0 010-2h2a1 1 0 011 1zM6 12a1 1 0 01-1 1H3a1 1 0 010-2h2a1 1 0 011 1zm13.071 7.071a1 1 0 01-1.414 0l-1.414-1.414a1 1 0 111.414-1.414l1.414 1.414a1 1 0 010 1.414zM7.757 7.757a1 1 0 01-1.414 0L4.93 6.343A1 1 0 016.343 4.93l1.414 1.414a1 1 0 010 1.414v-.001z"
      }
    })]);
  }
};

function ownKeys$R(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$R(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$R(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$R(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var diving = {
  name: 'IconDiving',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$R({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M14 12a1.3 1.3 0 011.265 1c.348.598.995 1 1.735 1a2 2 0 100-4h-6a2 2 0 101.732 3c.138-.573.653-1 1.268-1zm-3-4h6a4 4 0 11-3 6.646A4.002 4.002 0 017.126 13H5v3.5A2.5 2.5 0 007.5 19H12a1 1 0 012 0v1a1 1 0 01-1 1H7.5A4.5 4.5 0 013 16.5V4a1 1 0 112 0v7h2.126C7.57 9.275 9.136 8 11 8z"
      }
    })]);
  }
};

function ownKeys$S(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$S(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$S(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$S(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var dog = {
  name: 'IconDog',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$S({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12.024 17.245c-.55.496-1.266.77-2.007.769h-.005a1.002 1.002 0 010-2.003 1.01 1.01 0 00.922-.676l-.555-.55a1 1 0 01.671-1.773h1.928l.037-.001a1 1 0 01.684 1.73l-.59.586c.134.388.497.674.925.684a1.002 1.002 0 010 2.003h-.004a2.989 2.989 0 01-2.007-.77l.001.001zm2.99-6.236a1.001 1.001 0 11-2.002 0 1.001 1.001 0 012.002 0zm-3.997-.004a1 1 0 110-.001v.001zm-2.79 8.005h7.574c1.275-.33 2.213-1.605 2.213-2.91 0-.988-.486-1.912-1.3-2.471a1 1 0 01-.583-1.43 5.3 5.3 0 00.384-2.043 4.5 4.5 0 00-4.5-4.5v-2c.98 0 1.911.217 2.745.606A3.574 3.574 0 0117.496 3c1.785 0 3.262 1.292 3.52 2.977v3.86a1 1 0 01-1.685.873 2.98 2.98 0 00-.816-.488 6.49 6.49 0 01-.338 2.006 4.99 4.99 0 011.837 3.873c0 2.42-1.674 4.513-4 4.901l-.005.008H8.02l-.007-.008c-2.325-.388-4-2.48-4-4.901a4.99 4.99 0 011.838-3.873 6.49 6.49 0 01-.338-2.006 2.98 2.98 0 00-.816.488 1 1 0 01-1.684-.873v-3.86C3.27 4.292 4.746 3 6.532 3c1.1 0 2.082.49 2.735 1.262.86-.4 1.797-.607 2.745-.606v2a4.5 4.5 0 00-4.5 4.5c0 .737.113 1.355.384 2.043a1 1 0 01-.583 1.43 2.997 2.997 0 00-1.3 2.472c0 1.304.94 2.579 2.214 2.91v-.001zM5.012 8.275c.275-.093.557-.163.843-.208a6.505 6.505 0 011.72-2.66A1.533 1.533 0 006.531 5c-.796 0-1.449.599-1.519 1.363v1.912zm14.004 0V6.363A1.516 1.516 0 0017.497 5c-.404 0-.77.154-1.044.406a6.505 6.505 0 011.72 2.66c.287.045.569.115.843.209z"
      }
    })]);
  }
};

function ownKeys$T(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$T(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$T(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$T(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var download = {
  name: 'IconDownload',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$T({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19 17a1 1 0 011 1v3a.997.997 0 01-1 1H5a.997.997 0 01-1-1v-3a1 1 0 012 0v2h12v-2a1 1 0 011-1zM12 2a1 1 0 011 1v11.586l3.293-3.293a1 1 0 011.414 1.414l-5.005 5.005a.997.997 0 01-1.43-.026l-4.98-4.979a1 1 0 011.413-1.417L11 14.585V3a1 1 0 011-1z"
      }
    })]);
  }
};

function ownKeys$U(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$U(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$U(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$U(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var edit = {
  name: 'IconEdit',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$U({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M18.196 3.59l2.174 2.188c.74.745.78 1.93.117 2.72l-.124.136-11.4 11.359-4.741 1.004a1.054 1.054 0 01-1.22-1.092l.012-.122.944-4.827L15.37 3.583a1.993 1.993 0 012.825.007zm-4.488 4.484l-7.905 7.878-.54 2.765 2.71-.575 7.91-7.881-2.175-2.187zm3.072-3.06l-1.649 1.643 2.176 2.186 1.647-1.64-2.174-2.188z"
      }
    })]);
  }
};

function ownKeys$V(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$V(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$V(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$V(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var elevation = {
  name: 'IconElevation',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$V({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M9.038 15.274L8.003 12.7 5.483 19H18.55L14.01 6.907l-3.034 8.312a1 1 0 01-1.938.055zM20 21H4a1 1 0 01-.884-1.467l3.92-9.802a1 1 0 011.92-.024l.998 2.482 3.072-8.415a1 1 0 011.954.025l5.912 15.748A1 1 0 0120 21z"
      }
    })]);
  }
};

function ownKeys$W(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$W(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$W(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$W(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var expand = {
  name: 'IconExpand',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$W({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19.002 6.42l-4.295 4.287a1 1 0 01-1.414-1.415L17.583 5h-2.58a1 1 0 110-2h5.006a.997.997 0 01.992 1.029V9a1 1 0 01-2 .004l.001-2.584zM5 17.58l4.296-4.287a1 1 0 011.414 1.414L6.419 19H9a1 1 0 110 2H3.993A.997.997 0 013 19.97V15a1 1 0 012-.004v2.584z"
      }
    })]);
  }
};

function ownKeys$X(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$X(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$X(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$X(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesBackpacking = {
  name: 'IconExperiencesBackpacking',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$X({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M15.75 20.25l.113-.005-.047.004-.066.001zm-2.165-8.372l-.093.013A.756.756 0 0113.5 12v.75a.75.75 0 01-.75.75h-1.5a.75.75 0 01-.75-.75V12c0-.037.003-.073.008-.109-1.27-.186-2.339-.608-3.008-1.163v8.022c0 .414.336.75.75.75h7.5a.75.75 0 00.75-.75v-8.023c-.652.542-1.686.957-2.915 1.151zM6.75 14.25h-1.5V15c0 2.037.724 3.713 1.598 4.287l.029.07.013.026-.024-.055-.041-.109a1.499 1.499 0 01-.075-.469v-4.5zm12 0h-1.5v4.5c0 .188-.035.368-.098.534v.003c.844-.554 1.548-2.135 1.595-4.076L18.75 15v-.75zm-3.75 0a.75.75 0 01.75.75v3a.75.75 0 01-.75.75H9a.75.75 0 01-.75-.75v-3a.75.75 0 01.75-.75h6zm0 2.25H9V18h6v-1.5zm0-1.5H9v.75h6V15zm-2.25-3h-1.5v.75h1.5V12zm3-4.5h-7.5a.75.75 0 00-.75.75v1.125c0 .894 1.962 1.875 4.5 1.875 2.468 0 4.39-.927 4.495-1.8l.005-.075V8.25a.75.75 0 00-.75-.75zm-7.5-3H7.125a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375H8.25V4.5zm1.5 0H9v2.25h.75V4.5zm5.25 0h-.75v2.25H15V4.5zm-1.5 0h-3v2.25h3V4.5zm3.375 0H15.75v2.25h1.125a.375.375 0 00.375-.375v-1.5a.375.375 0 00-.375-.375zM16.5 20.25h-9l-.115-.004C5.78 20.14 4.5 17.832 4.5 15v-.75a.75.75 0 01.75-.75h1.5V8.25c0-.279.076-.54.209-.764A1.123 1.123 0 016 6.375v-1.5c0-.621.504-1.125 1.125-1.125h9.75c.621 0 1.125.504 1.125 1.125v1.5c0 .565-.417 1.033-.96 1.113.134.222.21.483.21.762v5.25h1.5a.75.75 0 01.745.663l.005.087V15c0 2.763-1.22 5.027-2.768 5.235l-.117.011-.115.004z"
      }
    })]);
  }
};

function ownKeys$Y(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$Y(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$Y(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$Y(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesCamping = {
  name: 'IconExperiencesCamping',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$Y({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M7.125 8.986a1.865 1.865 0 01-1.863-1.864 1.865 1.865 0 013.117-1.378.374.374 0 01-.195.7h-.01a.68.68 0 10-.006 1.358.38.38 0 01.351.231.37.37 0 01-.078.408 1.85 1.85 0 01-1.316.545zm0-2.977c-.614 0-1.113.5-1.113 1.113 0 .66.609 1.184 1.252 1.105a1.427 1.427 0 01-.002-2.21 1.196 1.196 0 00-.137-.008zm11.533 11.343a.376.376 0 01-.012.531l-.68.65a.372.372 0 01-.33.204h-12a.368.368 0 01-.307-.173l-.713-.68a.375.375 0 11.518-.543l.158.15c.352-3.935 3.056-7.008 6.334-7.016h.012c1.006.003 1.955.301 2.802.818l1.323-1.322V8.78l-.86.86a.377.377 0 01-.53 0 .375.375 0 010-.53l1.39-1.391V6.53l-.86.86a.377.377 0 01-.53 0 .375.375 0 010-.53l1.498-1.5a.372.372 0 01.531 0l1.5 1.5a.375.375 0 01-.531.53l-.86-.86v1.19l1.39 1.39a.375.375 0 01-.53.53l-.86-.86v1.19l1.39 1.39a.375.375 0 01-.53.53l-.86-.86v2.263c.792 1.163 1.317 2.609 1.459 4.197l.157-.15a.375.375 0 01.53.012zm-6.646-2.465v3.099h2.575l-2.575-3.1zm-.75 3.099v-3.1l-2.576 3.1h2.576zm4.5-6.956l-.697.696c.245.194.477.405.697.637V11.03zm-4.131.195c-3.005.003-5.46 3.003-5.616 6.76H7.71l3.637-4.376c.008-.01.019-.014.027-.022.008-.008.013-.02.022-.027.011-.009.024-.011.035-.019a.382.382 0 01.134-.055.36.36 0 01.276.056c.01.008.024.01.035.019.009.007.013.019.022.027.008.008.02.013.027.022l3.637 4.376h1.684c-.155-3.758-2.61-6.758-5.616-6.761z"
      }
    })]);
  }
};

function ownKeys$Z(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$Z(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$Z(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$Z(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesClimbing = {
  name: 'IconExperiencesClimbing',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$Z({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M15.74 11.002c.202 0 .375.165.375.375s-.165.375-.375.375h-.75a.371.371 0 01-.375-.375c0-.21.165-.375.375-.375h.75zm1.125-1.387c.217.127.375.36.375.645v2.25a.74.74 0 01-.375.63v.862a.76.76 0 01-.375.638v.195c0 2.572-1.973 4.665-4.395 4.665h-.06c-1.98 0-3.728-1.418-4.245-3.442L6.155 9.645c-.375-1.463-.06-3.03.847-4.2.833-1.073 2.07-1.695 3.39-1.695h1.703c2.287 0 4.17 1.875 4.38 4.26l.007.105c.225.127.383.36.383.637v.863zm-1.125 5.213h-.008v-.068h-.75v.082c0 1.748-1.297 3.165-2.895 3.165-1.35 0-2.497-.952-2.85-2.317L7.595 9.278c-.255-1.02-.038-2.108.592-2.91.555-.72 1.343-1.118 2.205-1.118h1.703c1.462 0 2.662 1.2 2.85 2.752h.75C15.5 6.037 13.962 4.5 12.087 4.5h-1.702c-1.08 0-2.1.51-2.798 1.41a4.118 4.118 0 00-.712 3.547l1.642 6.413c.435 1.695 1.883 2.88 3.518 2.88h.06c2.01 0 3.645-1.762 3.645-3.922zm.375-6.075h-1.5v.75h1.5v-.75zm-2.25 4.387a.811.811 0 01-.39-.638v-2.25a.75.75 0 01.375-.637v-.863c0-.262.15-.487.36-.622 0-.06-.008-.12-.015-.12C14.022 6.87 13.145 6 12.087 6h-1.702c-.623 0-1.2.293-1.613.825a2.66 2.66 0 00-.45 2.265l1.65 6.42c.263 1.028 1.11 1.748 2.063 1.748 1.245 0 2.205-1.088 2.205-2.423v-.195a.75.75 0 01-.375-.638v-.862zm2.25.862v-.75h-1.5v.75h1.5zm.375-1.5v-2.25h-2.25v2.25h2.25z"
      }
    })]);
  }
};

function ownKeys$_(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$_(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$_(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$_(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesClothing = {
  name: 'IconExperiencesClothing',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$_({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M17.505 11.355c-.502-.322-.997-.818-1.102-2.888-.03-.652-.6-1.162-1.29-1.162h-.54V5.903a1.38 1.38 0 00-.023-.248v-.03c-.113-.645-.607-1.125-1.208-1.125H9.909c-.6 0-1.095.487-1.208 1.14v.008a1.403 1.403 0 00-.022.255v1.395h-.54c-.69 0-1.26.51-1.29 1.162-.106 2.077-.6 2.565-1.103 2.887-.308.203-.495.57-.495.983v6.292c0 .683.585 1.23 1.298 1.23h10.155c.712 0 1.297-.555 1.297-1.23V12.33c0-.405-.188-.773-.495-.975zm-.765 5.13l-1.875-1.875h2.385v1.875h-.51zm-10.74 0V14.61h2.385L6.51 16.485H6zm0-4.147c0-.06.015-.255.15-.353h4.725v1.875H6v-1.522zm11.1-.353c.142.098.15.293.15.353v1.522h-5.625v-.563H12c.21 0 .375-.165.375-.375a.371.371 0 00-.375-.375h-.375v-.562H17.1zM9.352 14.7c.03-.03.046-.06.06-.09h1.463v1.875H7.567L9.352 14.7zm2.273 1.223H12c.21 0 .375-.165.375-.376a.371.371 0 00-.375-.375h-.375v-.562h2.213a.33.33 0 00.06.09l1.784 1.785h-4.057v-.563zm4.027-7.425c.068 1.372.308 2.19.676 2.737h-4.703v-.563H12c.21 0 .375-.165.375-.375A.371.371 0 0012 9.922h-.375V9.36h1.71c.652 0 1.185-.585 1.222-1.313h.548c.293 0 .54.203.547.45zM9.428 6.63c.15.06.307.105.48.105h.967V8.61h-.967c-.263 0-.48-.3-.48-.652V6.63zm2.197 1.417H12c.21 0 .375-.165.375-.375A.371.371 0 0012 7.299h-.375v-.563h1.71c.172 0 .33-.045.48-.105v1.327c0 .353-.217.653-.48.653h-1.71v-.563zM9.908 5.25h3.427c.21 0 .39.195.45.457-.06.165-.24.278-.443.278H9.909a.486.486 0 01-.45-.3c.075-.247.247-.435.45-.435zm-2.31 3.248c.007-.248.255-.45.54-.45h.547c.045.727.57 1.312 1.223 1.312h.967v1.875H6.923c.367-.547.607-1.365.675-2.737zM6 18.63v-1.395h4.875v1.875H6.548c-.3 0-.548-.218-.548-.48zm10.703.48h-5.078v-.563H12c.21 0 .375-.165.375-.375a.371.371 0 00-.375-.375h-.375v-.562h5.625v1.395c0 .262-.247.48-.547.48z"
      }
    })]);
  }
};

function ownKeys$$(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$$(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$$(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$$(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesCycling = {
  name: 'IconExperiencesCycling',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$$({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M20.176 12.42a.7.7 0 01-.059.702c-.082.108-.18.187-.257.25-.063.051-.13.104-.135.133-.005.03.034.104.073.176.048.088.106.196.141.326a.69.69 0 01-.198.675 1.43 1.43 0 01-.302.194c-.073.039-.148.077-.16.105-.011.028.015.108.039.186.029.096.066.215.075.35a.69.69 0 01-.326.621c-.118.069-.238.103-.335.132-.078.022-.16.046-.176.071-.017.026-.009.11 0 .19.01.1.024.224.006.358a.69.69 0 01-.44.546c-.131.044-.256.054-.356.063-.081.007-.166.015-.187.036-.022.021-.03.107-.036.189-.009.1-.02.225-.063.353a.684.684 0 01-.676.456c-.076 0-.15-.008-.225-.016-.046-.005-.091-.011-.136-.011-.081.026-.105.11-.128.19a1.498 1.498 0 01-.129.336.675.675 0 01-.573.333 1.452 1.452 0 01-.396-.081c-.066-.021-.133-.043-.171-.043-.045.015-.085.092-.123.168-.046.09-.103.204-.192.309a.662.662 0 01-.5.224l-.163-.02c-.133-.038-.244-.1-.333-.149a.57.57 0 00-.172-.078c-.04.006-.093.075-.145.142-.063.08-.141.18-.249.266a.67.67 0 01-.688.069 1.488 1.488 0 01-.297-.21c-.064-.055-.13-.112-.162-.113-.043.003-.105.058-.166.111-.077.067-.172.15-.295.213a.65.65 0 01-.294.07.634.634 0 01-.393-.132 1.546 1.546 0 01-.25-.266c-.052-.066-.106-.136-.138-.144a.56.56 0 00-.187.082c-.089.05-.199.112-.33.15l-.17.023a.642.642 0 01-.488-.217 1.517 1.517 0 01-.193-.312c-.039-.077-.078-.155-.108-.17-.087-.01-.134.021-.202.044-.102.033-.217.07-.353.082a.67.67 0 01-.606-.32 1.506 1.506 0 01-.129-.343c-.023-.083-.046-.169-.074-.189-.104-.008-.154-.001-.203.004a1.52 1.52 0 01-.363.012.653.653 0 01-.532-.434c-.042-.13-.051-.258-.06-.36-.006-.086-.013-.173-.035-.198-.028-.023-.116-.03-.2-.036-.107-.009-.228-.018-.357-.06a.652.652 0 01-.44-.53 1.53 1.53 0 01.012-.363c.01-.085.02-.172.004-.201-.02-.03-.106-.053-.188-.076-.1-.028-.222-.062-.342-.128a.644.644 0 01-.325-.6c.011-.139.05-.255.082-.356.027-.082.055-.166.044-.2-.014-.032-.093-.071-.17-.11-.09-.046-.204-.103-.31-.192a.645.645 0 01-.2-.656c.038-.132.1-.242.149-.33.041-.075.085-.151.08-.185-.006-.035-.075-.09-.142-.142a1.458 1.458 0 01-.265-.249.657.657 0 01-.068-.686c.062-.122.144-.218.21-.296.055-.064.112-.13.113-.163-.001-.035-.058-.101-.112-.165a1.486 1.486 0 01-.21-.295.664.664 0 01.065-.689c.086-.109.186-.187.267-.25.059-.046.119-.092.137-.124a.465.465 0 00-.073-.192c-.05-.089-.111-.2-.148-.332a.664.664 0 01.198-.665c.104-.09.218-.147.309-.194.075-.037.152-.076.165-.105.01-.029-.015-.11-.041-.19-.03-.097-.069-.217-.08-.354a.678.678 0 01.328-.615c.119-.068.24-.102.337-.129.08-.023.164-.047.18-.073.017-.025.008-.11-.001-.192a1.489 1.489 0 01-.008-.361.685.685 0 01.444-.542c.128-.043.253-.053.353-.062.082-.007.168-.014.189-.036.02-.022.028-.106.036-.188.009-.1.02-.225.063-.353a.69.69 0 01.543-.446 1.46 1.46 0 01.357.006c.046.005.09.01.135.01.081-.025.105-.107.128-.186a1.54 1.54 0 01.131-.335.688.688 0 01.581-.33c.174.01.293.046.388.076.065.02.131.04.17.04.044-.014.084-.09.121-.162.047-.09.105-.2.194-.303a.681.681 0 01.509-.222l.165.021c.13.034.239.093.325.142.06.032.136.074.168.074.036-.007.09-.073.14-.136.064-.078.14-.175.249-.257a.704.704 0 01.701-.068c.122.06.217.139.294.202.125.103.189.103.314 0 .077-.063.172-.142.293-.201a.709.709 0 01.703.068c.108.081.186.176.249.254.051.062.104.126.133.132.039 0 .114-.04.174-.072.089-.048.197-.107.327-.14l.164-.022c.196 0 .387.083.512.222.09.102.148.211.195.3.038.071.077.145.105.156a.66.66 0 00.184-.036c.096-.03.214-.066.349-.074h.004a.71.71 0 01.62.332c.068.115.103.234.131.329.024.078.048.158.073.175.101.01.143.004.188 0 .117-.01.236-.02.354-.003a.692.692 0 01.548.449c.043.124.055.247.065.345.008.08.017.164.038.185.02.021.105.029.185.037.098.01.22.022.345.065a.696.696 0 01.453.545c.019.133.007.256-.003.355-.008.08-.016.164 0 .188.016.025.096.05.174.072.094.029.213.064.328.132a.687.687 0 01.337.618c-.008.137-.045.255-.074.35-.024.079-.05.159-.038.186.012.028.09.07.158.106.088.046.197.104.298.193.187.165.27.436.207.673-.033.131-.093.24-.14.328-.04.072-.08.146-.074.175.006.029.071.082.134.133.078.062.174.141.256.248.15.197.179.48.072.7a1.494 1.494 0 01-.203.295c-.052.063-.105.127-.105.157s.054.095.105.158c.063.076.142.171.201.291zm-15.155.925l.013.076c.037.294-.082.506-.169.661l-.05.092c.029.017.062.033.096.05.161.082.382.193.507.454l.028.071c.095.292.02.521-.035.688a2.822 2.822 0 00-.03.099c.03.01.067.02.103.03.175.048.415.114.588.345l.052.08c.138.244.109.486.089.661-.005.038-.01.074-.011.106.033.005.07.008.108.01.18.015.426.034.64.223l.06.059c.194.215.212.463.227.643l.01.105.107-.01c.246-.03.478-.018.666.09l.073.046c.236.175.304.417.352.594l.029.1.101-.032c.177-.058.438-.12.669-.043l.087.034c.264.124.376.348.458.51.016.033.031.065.047.094l.095-.054c.14-.079.315-.177.547-.177l.185.02c.285.07.438.266.55.41l.068.082.08-.068c.13-.114.305-.267.576-.291l.059-.003c.344.008.533.17.673.29.03.025.058.05.085.07.024-.026.047-.056.07-.087.116-.147.273-.348.57-.412a.888.888 0 01.167-.017c.228 0 .4.095.538.172.035.02.069.038.1.053.018-.03.036-.064.053-.1.086-.17.202-.401.488-.52.241-.099.522-.04.705.019.04.013.078.025.112.034.012-.034.023-.072.035-.113.05-.18.121-.428.376-.599.191-.128.433-.15.69-.12.041.004.08.009.12.01.007-.036.01-.078.014-.123.017-.186.039-.439.254-.654.214-.213.466-.236.65-.252.044-.004.086-.008.12-.014 0-.037-.004-.08-.01-.127-.018-.184-.046-.436.123-.687.168-.252.411-.323.589-.375.04-.012.08-.023.114-.036a1.416 1.416 0 00-.035-.124c-.055-.176-.13-.417-.014-.695.115-.28.34-.398.505-.483l.106-.058c-.015-.035-.037-.074-.059-.115-.087-.163-.208-.384-.149-.68.059-.294.255-.453.398-.57.035-.026.067-.053.094-.078-.022-.032-.051-.067-.08-.103-.117-.142-.278-.336-.278-.636s.16-.494.278-.636a1.19 1.19 0 00.078-.098c-.027-.027-.062-.055-.098-.085-.142-.115-.338-.274-.396-.568-.058-.295.061-.516.149-.678.02-.04.042-.078.056-.112a1.79 1.79 0 00-.112-.063c-.163-.086-.387-.204-.5-.482-.115-.276-.041-.517.013-.693a1.63 1.63 0 00.034-.12 1.529 1.529 0 00-.124-.04c-.176-.053-.416-.126-.583-.375-.166-.248-.141-.497-.122-.679.004-.046.009-.09.009-.128a1.687 1.687 0 00-.131-.017c-.182-.018-.431-.042-.642-.252-.21-.211-.235-.46-.253-.642a1.623 1.623 0 00-.016-.126c-.06 0-.095.004-.132.007-.253.026-.492.002-.679-.123-.248-.166-.32-.406-.373-.582-.014-.043-.026-.086-.04-.12-.037.007-.08.02-.125.034-.182.055-.46.109-.692.013-.278-.115-.396-.337-.481-.499a1.957 1.957 0 00-.062-.11 1.286 1.286 0 00-.117.059c-.165.09-.39.205-.675.148-.294-.059-.452-.252-.567-.394-.03-.036-.058-.07-.084-.098-.032.022-.067.05-.103.08-.142.118-.336.277-.635.277-.3 0-.493-.16-.634-.276a1.364 1.364 0 00-.101-.079c-.026.026-.053.06-.081.095-.117.143-.275.34-.571.4-.287.056-.513-.06-.678-.15a1.482 1.482 0 00-.113-.057c-.02.03-.04.069-.059.107-.086.165-.204.39-.483.506-.235.099-.515.042-.695-.014a3.646 3.646 0 00-.122-.036c-.013.035-.024.076-.037.119-.052.177-.123.421-.374.59-.192.127-.429.15-.687.121-.042-.004-.082-.01-.124-.01a1.87 1.87 0 00-.014.124c-.017.185-.04.438-.253.652-.215.215-.468.237-.653.253-.043.004-.084.007-.12.013.001.037.006.08.01.123.021.185.049.438-.12.69-.17.256-.418.326-.6.378-.037.011-.076.021-.109.033.01.034.021.074.035.114.054.17.137.423.019.708-.119.285-.36.407-.52.488a1.944 1.944 0 00-.098.051l.055.101c.092.164.218.388.16.689l-.002.009h.001a.123.123 0 01-.002.008l-.01.039c-.073.271-.262.42-.403.53a1.52 1.52 0 00-.085.068c.02.028.046.057.072.088.118.138.28.328.292.62-.012.354-.175.543-.294.682-.024.03-.05.057-.07.084l.086.07c.143.112.337.265.408.546zm6.974-7.914a6.57 6.57 0 016.563 6.562 6.57 6.57 0 01-6.563 6.563 6.57 6.57 0 01-6.562-6.563 6.57 6.57 0 016.562-6.562zm4.833 3.339a5.86 5.86 0 00-1.61-1.61l-2.173 3.765.019.018 3.764-2.173zm-4.083 3.223a.75.75 0 10-1.501.002.75.75 0 001.501-.002zm-.375-1.446l.024.007 2.174-3.765A5.767 5.767 0 0012.37 6.2v4.347zm-.75 0V6.2a5.753 5.753 0 00-2.197.59l2.174 3.764.023-.007zm-1.071 1.071l.007-.023-3.765-2.173a5.76 5.76 0 00-.589 2.196h4.347zm0 .75H6.202c.05.785.257 1.527.589 2.197l3.765-2.173-.007-.024zm1.071 1.072l-.023-.007-2.174 3.765c.67.333 1.412.539 2.197.59V13.44zm.75 0v4.346a5.753 5.753 0 002.198-.588l-2.174-3.765-.024.007zm1.072-1.072c-.001.009-.004.016-.007.024l3.765 2.173a5.76 5.76 0 00.589-2.197h-4.347zm0-.75h4.346a5.767 5.767 0 00-.588-2.196l-3.765 2.173.007.023zM8.772 7.16a5.863 5.863 0 00-1.61 1.61l3.765 2.173.019-.018L8.773 7.16zm-1.61 8.057a5.85 5.85 0 001.61 1.61l2.173-3.765-.018-.019-3.765 2.174zm8.057 1.61a5.86 5.86 0 001.61-1.61l-3.765-2.173-.019.019 2.174 3.764z"
      }
    })]);
  }
};

function ownKeys$10(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$10(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$10(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$10(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesFamily = {
  name: 'IconExperiencesFamily',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$10({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M16.864 12.973a4.129 4.129 0 012.636 3.842.375.375 0 01-.375.375h-4.492c.227.454.367.959.367 1.5a.375.375 0 01-.375.375h-6a.375.375 0 01-.375-.375c0-.541.14-1.046.367-1.5H4.125a.375.375 0 01-.375-.375 4.128 4.128 0 012.638-3.842 2.624 2.624 0 01-1.136-2.158A2.628 2.628 0 017.877 8.19a2.628 2.628 0 012.625 2.625c0 .894-.452 1.684-1.137 2.158.22.086.43.19.63.31a1.87 1.87 0 011.63-.967c.704 0 1.31.393 1.631.967.2-.12.41-.225.63-.31a2.624 2.624 0 01-1.136-2.158 2.628 2.628 0 012.625-2.625A2.628 2.628 0 0118 10.815c0 .894-.451 1.684-1.136 2.158zM13.5 10.815c0 1.034.841 1.875 1.875 1.875a1.878 1.878 0 001.875-1.875 1.878 1.878 0 00-1.875-1.875 1.878 1.878 0 00-1.875 1.875zm-2.898 2.913a1.11 1.11 0 00-.102.462c0 .592.46 1.073 1.04 1.117.028.001.056.008.085.008.62 0 1.125-.505 1.125-1.125 0-.165-.037-.32-.102-.462a1.124 1.124 0 00-1.023-.663c-.455 0-.846.273-1.023.663zM6 10.815c0 1.034.841 1.875 1.875 1.875a1.878 1.878 0 001.875-1.875A1.878 1.878 0 007.875 8.94 1.878 1.878 0 006 10.815zM4.521 16.44h4.606c.34-.376.756-.681 1.233-.874a1.864 1.864 0 01-.61-1.376c0-.054.011-.104.016-.157a3.341 3.341 0 00-1.891-.593 3.38 3.38 0 00-3.354 3zm4.506 1.875h5.196a2.597 2.597 0 00-.457-1.125 2.63 2.63 0 00-.791-.75 2.604 2.604 0 00-1.35-.375c-.105 0-.206.017-.307.029-.052.006-.106.005-.157.014a2.604 2.604 0 00-.886.332c-.315.19-.58.45-.791.75a2.6 2.6 0 00-.457 1.125zm5.096-1.875h4.606a3.38 3.38 0 00-3.354-3c-.703 0-1.35.224-1.89.593.004.053.015.103.015.157 0 .545-.238 1.033-.61 1.376.476.194.893.498 1.232.874zM11.36 8.406l-1.296-1.295a1.094 1.094 0 01.012-1.546c.416-.415 1.136-.42 1.546-.011l.003.003.003-.002c.41-.41 1.13-.405 1.546.01.43.43.435 1.124.012 1.547L11.89 8.407a.377.377 0 01-.53-.001zm-.753-2.31a.344.344 0 00-.012.485l1.03 1.03 1.029-1.031a.344.344 0 00-.011-.485c-.133-.134-.36-.138-.486-.012l-.267.268a.375.375 0 01-.53 0l-.268-.268a.327.327 0 00-.233-.094.357.357 0 00-.252.106z"
      }
    })]);
  }
};

function ownKeys$11(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$11(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$11(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$11(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesFitness = {
  name: 'IconExperiencesFitness',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$11({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M18.383 12.105a6.024 6.024 0 01-3.075 5.242L14.4 19.11a1.113 1.113 0 01-.998.608H11.37a1.13 1.13 0 01-.997-.6l-.953-1.785v-.008a6.003 6.003 0 01-3.022-4.845H6v.375c0 .21-.165.375-.375.375a.371.371 0 01-.375-.375v-1.5c0-.21.165-.375.375-.375s.375.165.375.375v.375h.39a6.002 6.002 0 013.022-4.838c.008-.007.008-.007.008-.014l.96-1.778c.195-.367.57-.6.99-.6h2.033c.42 0 .802.232.997.607l.9 1.755a5.962 5.962 0 013.082 5.243zm-7.35-6.66l-.51.96a5.846 5.846 0 011.852-.3c.63 0 1.245.097 1.83.285l-.48-.938a.358.358 0 00-.33-.202h-2.032a.382.382 0 00-.33.195zm2.692 13.313l.495-.945a5.918 5.918 0 01-1.83.292h-.015a5.977 5.977 0 01-1.845-.293l.503.945a.366.366 0 00.33.203h2.032a.374.374 0 00.33-.203zm-1.357-1.395v.007h.007c2.902-.008 5.258-2.363 5.258-5.258A5.22 5.22 0 0016.095 8.4a5.257 5.257 0 00-8.97 3.713c0 2.895 2.355 5.25 5.243 5.25zm.014-9.953a4.702 4.702 0 014.696 4.695 4.702 4.702 0 01-4.695 4.695 4.702 4.702 0 01-4.695-4.695 4.702 4.702 0 014.695-4.695zm0 .75c-2.077 0-3.764 1.62-3.915 3.66h1.545l.503-.96a.363.363 0 01.352-.202c.143 0 .27.082.33.21l.976 1.964 1.087-2.482a.368.368 0 01.675-.008l.682 1.478h1.68c-.15-2.04-1.837-3.66-3.915-3.66zm0 7.89c2.01 0 3.66-1.523 3.9-3.473l-1.905-.007a.37.37 0 01-.337-.218l-.435-.937-1.072 2.453a.377.377 0 01-.338.224h-.008a.384.384 0 01-.337-.21l-1.005-2.024-.263.51a.358.358 0 01-.33.202H8.49c.232 1.957 1.875 3.48 3.893 3.48z"
      }
    })]);
  }
};

function ownKeys$12(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$12(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$12(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$12(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesHiking = {
  name: 'IconExperiencesHiking',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$12({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12.037 18.758c.015.007.045.044.068.067.098.113.277.33.615.33.337 0 .518-.21.615-.33.015-.015.037-.045.037-.06.015.015.038.045.053.06.098.113.277.33.615.33.338 0 .518-.21.615-.33.015-.023.038-.045.038-.06.014.015.037.037.052.06.098.113.278.33.615.33.338 0 .518-.21.615-.33.015-.015.037-.045.037-.06.015.015.038.037.053.06.098.113.277.33.615.33.337 0 .518-.21.615-.33.015-.023.045-.045.037-.06.015.015.038.045.06.06.098.113.278.33.616.33a.724.724 0 00.532-.233.374.374 0 00.218-.337v-3.068c0-.99-.758-1.8-1.763-1.867-3.353-.248-5.985-1.418-6.098-2.693.226-.21.368-.51.368-.862A1.09 1.09 0 0010.177 9h-.194c.037-.12.067-.24.067-.375 0-.293-.113-.547-.293-.75.18-.202.293-.457.293-.75s-.113-.548-.293-.75c.18-.202.293-.457.293-.75 0-.622-.503-1.125-1.125-1.125h-3c-.622 0-1.125.503-1.125 1.125 0 .293.112.548.293.75a1.109 1.109 0 000 1.5 1.102 1.102 0 00-.128 1.328 1.083 1.083 0 00-.465.885v.795l.008 6.172c0 .008-.008.015-.008.023 0 .007.008.022.008.03v1.357c.037.172.165.375.172.375a.685.685 0 00.593.308c.337 0 .517-.21.615-.33.014-.016.037-.046.037-.06a.429.429 0 01.053.06c.097.112.277.33.615.33.337 0 .517-.21.614-.33.016-.023.038-.046.038-.06a.469.469 0 01.053.06c.097.112.277.33.614.33.338 0 .518-.21.615-.33.016-.016.038-.046.038-.06a.429.429 0 01.053.06c.097.112.277.33.614.33.338 0 .518-.21.616-.33.022-.023.052-.06.044-.06h2.146zm-1.162-6.36l-.78.787a.385.385 0 000 .532.364.364 0 00.525 0l.848-.847c.202.135.427.263.675.39l-.69.69a.385.385 0 000 .533.364.364 0 00.525 0l.9-.9c.24.09.495.18.764.255l-.622.622a.385.385 0 000 .532.364.364 0 00.525 0l.938-.937c.742.165 1.56.293 2.437.353.607.045 1.072.524 1.072 1.125v1.185H5.242v-5.453h4.921c.097.39.345.78.712 1.133zm-.375-2.243c0 .195-.15.345-.338.345H5.25v-.412c0-.188.15-.338.338-.338h4.574c.188 0 .338.158.338.405zM5.925 5.25h3c.21 0 .375.165.375.375S9.135 6 8.925 6a.371.371 0 00-.375.375c0 .21.165.375.375.375s.375.165.375.375-.165.375-.375.375H7.41a.371.371 0 00-.375.375c0 .21.165.375.375.375h1.515c.21 0 .375.165.375.375S9.135 9 8.925 9h-3a.371.371 0 01-.375-.375c0-.21.173-.375.375-.375.21 0 .375-.165.375-.375a.371.371 0 00-.375-.375.371.371 0 01-.375-.375c0-.21.173-.375.375-.375h1.47c.21 0 .375-.165.375-.375A.371.371 0 007.395 6h-1.47a.371.371 0 01-.375-.375c0-.21.173-.375.375-.375zm3.96 12.758c-.338 0-.518.21-.615.33-.015.022-.037.044-.037.06a.429.429 0 01-.053-.06c-.098-.113-.277-.33-.615-.33-.338 0-.518.21-.615.33-.015.014-.038.044-.03.06a.549.549 0 01-.053-.06c-.097-.113-.277-.33-.614-.33-.338 0-.518.21-.615.33-.016.014-.038.044-.03.06a.46.46 0 01-.053-.06c-.098-.113-.277-.33-.615-.33-.338 0-.518.21-.615.33-.015.014-.03.037-.03.052-.015-.023-.022-.045-.03-.06v-.877h12.75v.937l-.045-.045c-.098-.112-.277-.33-.615-.33-.338 0-.518.21-.615.33-.015.023-.037.045-.037.06-.015-.015-.038-.045-.053-.06-.098-.112-.277-.33-.615-.33-.338 0-.518.21-.615.33-.015.023-.037.045-.037.06a.429.429 0 01-.053-.06c-.098-.112-.277-.33-.615-.33-.338 0-.518.21-.615.33-.015.023-.037.045-.037.06a.429.429 0 01-.053-.06c-.098-.112-.277-.33-.615-.33-.338 0-.518.21-.615.33-.015.023-.037.045-.037.06a.429.429 0 01-.053-.06c-.098-.112-.277-.33-.615-.33l-2.19-.008z"
      }
    })]);
  }
};

function ownKeys$13(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$13(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$13(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$13(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesOutdoorBasics = {
  name: 'IconExperiencesOutdoorBasics',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$13({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13.988 7.013l-1.613-1.606v1.936l2.137 2.137c.15.15.15.39 0 .532a.352.352 0 01-.262.113.375.375 0 01-.262-.105l-1.613-1.612v1.934l2.137 2.138c.15.15.15.39 0 .532a.352.352 0 01-.262.113.352.352 0 01-.262-.113L12.375 11.4v1.942l2.137 2.138c.15.15.15.39 0 .532a.352.352 0 01-.262.113.375.375 0 01-.262-.105l-1.613-1.612V19.5c0 .21-.165.375-.375.375a.371.371 0 01-.375-.375v-5.1l-1.613 1.612a.352.352 0 01-.262.113.352.352 0 01-.262-.113.385.385 0 010-.532l2.137-2.138V11.4l-1.613 1.612a.352.352 0 01-.262.113.375.375 0 01-.262-.105.385.385 0 010-.532l2.137-2.138V8.408l-1.613 1.604a.352.352 0 01-.262.113.375.375 0 01-.262-.105.385.385 0 010-.532l2.137-2.138V5.408l-1.613 1.604a.352.352 0 01-.262.113.375.375 0 01-.262-.105.385.385 0 010-.532l2.25-2.258c.03-.038.075-.06.12-.083a.375.375 0 01.284 0 .429.429 0 01.12.083l2.25 2.25c.15.15.15.39 0 .532a.352.352 0 01-.262.113.352.352 0 01-.262-.112zm-6 1.5l-.863-.856v1.185l1.387 1.388c.15.15.15.39 0 .532a.352.352 0 01-.262.113.375.375 0 01-.263-.105l-.862-.862v1.184l1.387 1.388c.15.15.15.39 0 .532a.352.352 0 01-.262.113.375.375 0 01-.263-.105l-.862-.862v5.092c0 .21-.165.375-.375.375a.371.371 0 01-.375-.375v-5.092l-.862.854a.352.352 0 01-.263.113.375.375 0 01-.263-.105.385.385 0 010-.532L6.375 11.1V9.908l-.862.854a.352.352 0 01-.263.113.375.375 0 01-.263-.105.385.385 0 010-.532L6.375 8.85V7.658l-.862.854a.352.352 0 01-.263.113.375.375 0 01-.263-.105.385.385 0 010-.532l1.5-1.5a.266.266 0 01.12-.083.375.375 0 01.285 0 .27.27 0 01.12.082l1.5 1.493c.15.15.15.39 0 .532a.352.352 0 01-.262.113.352.352 0 01-.263-.113zm10.5 2.25l-.863-.855v1.184l1.387 1.388c.15.15.15.39 0 .532a.352.352 0 01-.262.113.375.375 0 01-.262-.105l-.863-.862v5.092c0 .21-.165.375-.375.375a.371.371 0 01-.375-.375v-5.1l-.863.862a.352.352 0 01-.262.113.375.375 0 01-.262-.105.385.385 0 010-.532l1.387-1.388V9.908l-.863.854a.352.352 0 01-.262.113.375.375 0 01-.262-.105.385.385 0 010-.532l1.387-1.388V7.658l-.863.854a.352.352 0 01-.262.113.352.352 0 01-.262-.113.385.385 0 010-.532l1.5-1.5c.03-.038.075-.06.12-.083a.375.375 0 01.284 0 .429.429 0 01.12.083l1.5 1.5c.15.15.15.39 0 .532a.352.352 0 01-.262.113.375.375 0 01-.262-.105l-.863-.862v1.184l1.387 1.388c.15.15.15.39 0 .532a.352.352 0 01-.262.113.352.352 0 01-.262-.113z"
      }
    })]);
  }
};

function ownKeys$14(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$14(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$14(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$14(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesPaddling = {
  name: 'IconExperiencesPaddling',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$14({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M4.875 9C5.497 9 6 9.502 6 10.125c0 .48-.57 1.357-.817 1.71a.368.368 0 01-.615 0c-.248-.353-.818-1.23-.818-1.71C3.75 9.502 4.253 9 4.875 9zm0 1.928c.218-.36.375-.69.375-.803a.376.376 0 00-.375-.375.371.371 0 00-.375.375c0 .113.157.443.375.803zm13.808 1.237c.247.353.817 1.23.817 1.71 0 .623-.503 1.125-1.125 1.125a1.123 1.123 0 01-1.125-1.125c0-.48.57-1.357.817-1.71.136-.202.473-.202.616 0zm-.308 2.085c.21 0 .375-.165.375-.375 0-.113-.157-.435-.375-.803-.218.36-.375.69-.375.803 0 .21.165.375.375.375zm-3.75-8.265c.21 0 .375.172.375.375v3c0 .21-.165.375-.375.375a.371.371 0 01-.375-.375v-3c0-.21.165-.375.375-.375zM15.75 4.5c.622 0 1.125.503 1.125 1.125V9.84c0 .262-.09.518-.247.72l-1.126 1.357a1.17 1.17 0 01-.495.338v7.237c.21 0 .376.165.376.375s-.165.375-.375.375h-.75a.371.371 0 01-.375-.375c0-.21.165-.375.375-.375v-7.237a1.126 1.126 0 01-.495-.338l-1.126-1.357a1.106 1.106 0 01-.262-.72V5.625c0-.622.502-1.125 1.125-1.125h2.25zm.375 5.34V5.625a.376.376 0 00-.375-.375H13.5a.371.371 0 00-.375.375V9.84c0 .09.03.172.098.24l1.124 1.357a.367.367 0 00.571 0l1.125-1.357a.388.388 0 00.082-.24zM8.625 15c.21 0 .375.165.375.375v3c0 .21-.165.375-.375.375a.371.371 0 01-.375-.375v-3c0-.21.165-.375.375-.375zm.863-2.182l1.132 1.357c.165.202.255.457.255.72v4.215c0 .623-.502 1.125-1.125 1.125H7.5a1.123 1.123 0 01-1.125-1.125v-4.215c0-.262.09-.518.263-.72l1.125-1.357c.127-.158.3-.263.487-.323V5.25a.371.371 0 01-.375-.375c0-.21.165-.375.375-.375H9c.21 0 .375.165.375.375S9.21 5.25 9 5.25v7.245c.188.06.36.165.488.323zm.637 6.292v-4.215c0-.09-.03-.172-.082-.24l-1.125-1.357a.376.376 0 00-.578 0l-1.125 1.357a.354.354 0 00-.09.24v4.215c0 .21.165.375.375.375h2.25c.21 0 .375-.165.375-.375z"
      }
    })]);
  }
};

function ownKeys$15(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$15(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$15(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$15(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesRentals = {
  name: 'IconExperiencesRentals',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$15({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19.943 5.256l.307.057V9H18v.75h1.376l.096.233.924 2.252c.154.445.229 1 .229 1.665 0 .594-.06 1.446-.18 2.561l-.005.039h.185a.375.375 0 01.067.744l-.067.006H18.75a1.5 1.5 0 01-2.996.112l-.004-.112H9a1.5 1.5 0 01-2.996.112L6 17.25H3.375a.375.375 0 110-.75l.003-.162c.081-2.241 1.87-3.43 5.2-3.575l.24-.009 2.436-3.004H12V9H9.75v-.889l.09-.105c.29-.338.517-.586.685-.744 1.262-1.193 2.163-1.699 3.648-2.01 1.694-.356 3.506-.414 5.77.004zM17.25 16.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-9.75 0a.75.75 0 100 1.5.75.75 0 000-1.5zm6.75-3H9.006c-3.24.056-4.804 1.012-4.878 2.86l-.003.14 2.077-.002a1.5 1.5 0 012.596 0h5.452V13.5zm5.614 0H15v2.998h.952a1.5 1.5 0 012.596 0h1.139c.125-1.148.188-2.016.188-2.598 0-.14-.004-.274-.01-.4zm-6.739.75a.375.375 0 110 .75h-.75a.375.375 0 110-.75h.75zm-1.513-3.75l-1.825 2.25h4.463V10.5h-2.638zM17.25 9h-4.5v.75h4.5V9zm-2.923-3.014c-1.34.281-2.12.719-3.287 1.82-.105.1-.245.248-.418.444H19.5V5.94c-2.02-.34-3.646-.274-5.173.046zm4.048.764a.375.375 0 110 .75h-4.5a.375.375 0 110-.75h4.5zm-3.375 6h4.765c-.01-.041-.019-.08-.03-.117l-.04-.133-.821-2H15v2.25z"
      }
    })]);
  }
};

function ownKeys$16(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$16(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$16(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$16(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesSnowsports = {
  name: 'IconExperiencesSnowsports',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$16({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M18.802 15.803l-2.46-1.426 2.025-.54a.367.367 0 00.262-.457.378.378 0 00-.457-.263l-2.745.735-2.558-1.477 2.55-1.47 2.745.735a.375.375 0 00.458-.263.375.375 0 00-.263-.457l-2.025-.54 2.468-1.425a.37.37 0 00.135-.51.372.372 0 00-.51-.135l-.645.367-.008.008-1.815 1.05.54-2.025a.375.375 0 00-.262-.457.385.385 0 00-.458.262l-.735 2.753-2.55 1.47v-2.94l2.01-2.01a.371.371 0 000-.533.378.378 0 00-.532 0L12.494 7.74V4.875a.371.371 0 00-.375-.375.371.371 0 00-.375.375v2.857l-1.477-1.477a.385.385 0 00-.533 0c-.15.143-.142.383 0 .532l2.01 2.01v2.933L9.21 10.26l-.735-2.745a.383.383 0 00-.457-.27.385.385 0 00-.27.465l.54 2.025-1.823-1.057-.007-.008-.645-.367a.37.37 0 00-.51.134.368.368 0 00.135.51L7.92 10.38l-2.025.54a.372.372 0 10.195.72l2.745-.735 2.535 1.47-2.542 1.47-2.745-.735a.38.38 0 00-.458.263.375.375 0 00.263.457l2.025.54-2.475 1.433a.37.37 0 00-.135.51c.105.18.33.24.51.135l.645-.368h.007l1.83-1.057-.54 2.024a.375.375 0 00.36.473.376.376 0 00.36-.277l.735-2.745 2.543-1.47v2.947l-2.018 2.01a.385.385 0 000 .532c.143.15.383.15.533 0l1.485-1.477v2.835c0 .21.165.375.375.375s.375-.165.375-.375v-2.843l1.485 1.485c.15.15.382.15.532 0a.371.371 0 000-.532l-2.01-2.01v-2.947l2.55 1.47.735 2.745a.376.376 0 00.36.277c.03 0 .068-.008.098-.015a.367.367 0 00.262-.457l-.54-2.025 1.815 1.05s.008 0 .008.007l.645.375a.37.37 0 00.51-.135c.09-.188.03-.42-.15-.518z"
      }
    })]);
  }
};

function ownKeys$17(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$17(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$17(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$17(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var experiencesTravel = {
  name: 'IconExperiencesTravel',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$17({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M17.67 8.25c.6 0 1.08.488 1.087 1.08v7.597c0 .6-.487 1.08-1.08 1.08H5.58c-.593 0-1.08-.487-1.08-1.08V9.33c0-.592.487-1.08 1.08-1.08H9V7.125C9 6.503 9.502 6 10.125 6h3c.623 0 1.125.503 1.125 1.125V8.25h3.42zm-8.333 2.992L9 11.61v1.14h.75v-1.133l-.39-.367c-.008 0-.015-.008-.022-.008zM9 10.62V9H7.5v8.25h8.25V9h-6v1.62c.037.023.082.038.113.075l.45.428c.12.112.187.262.187.42v1.342c0 .338-.3.615-.675.615h-.9c-.375 0-.675-.277-.675-.615v-1.342c0-.158.068-.308.188-.428l.45-.428c.03-.03.075-.044.112-.067zm1.125-3.87a.376.376 0 00-.375.375V8.25h3.75V7.125a.376.376 0 00-.375-.375h-3zM5.25 16.92c0 .18.15.33.33.33h1.17V9H5.58c-.18 0-.33.15-.33.33v7.59zm12.75 0V9.33c0-.18-.15-.33-.33-.33H16.5v8.25h1.17c.18 0 .33-.15.33-.33zm-5.625-.233a.371.371 0 01-.375-.375v-1.5a.37.37 0 01.375-.374h2.25a.37.37 0 01.375.374v1.5c0 .21-.165.375-.375.375h-2.25zm.375-1.5v.75h1.5v-.75h-1.5zm1.125-1.687a1.123 1.123 0 01-1.125-1.125c0-.623.502-1.125 1.125-1.125S15 11.752 15 12.375s-.502 1.125-1.125 1.125zm0-1.5a.376.376 0 00-.375.375.376.376 0 00.75 0 .376.376 0 00-.375-.375z"
      }
    })]);
  }
};

function ownKeys$18(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$18(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$18(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$18(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var externalLink = {
  name: 'IconExternalLink',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$18({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M10 7a1 1 0 010 2H5v10h10v-5a1 1 0 012 0v6a.997.997 0 01-1 1H4a.997.997 0 01-1-1V8a.997.997 0 011-1zm10.007-4a.997.997 0 01.992 1.029V9a1 1 0 01-2 .004L19 6.42l-8.295 8.287a1 1 0 01-1.414-1.415L17.58 5H15a1 1 0 010-2z"
      }
    })]);
  }
};

function ownKeys$19(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$19(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$19(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$19(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var eyeHide = {
  name: 'IconEyeHide',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$19({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M18.293 4.293a1 1 0 011.414 1.414l-14 14a1 1 0 11-1.414-1.414l1.866-1.866c-1.617-.941-3-2.272-4.008-3.899a1 1 0 010-1.053A11.566 11.566 0 0112 6c1.36 0 2.678.235 3.91.675l2.383-2.382zm.544 3.93a11.558 11.558 0 013.013 3.25 1 1 0 010 1.054A11.57 11.57 0 0112 18a11.65 11.65 0 01-2.638-.302l1.83-1.831-.089.092c.296.027.595.041.897.041a9.57 9.57 0 007.799-4 9.556 9.556 0 00-2.397-2.342l1.435-1.435zM12 8a9.567 9.567 0 00-7.798 4 9.558 9.558 0 003.43 2.954l1.66-1.66a3 3 0 014.001-4.001l1.014-1.014A9.646 9.646 0 0012 8z"
      }
    })]);
  }
};

function ownKeys$1a(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1a(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1a(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1a(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var eyeShow = {
  name: 'IconEyeShow',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1a({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 6a11.57 11.57 0 019.85 5.473 1 1 0 010 1.054A11.57 11.57 0 0112 18a11.57 11.57 0 01-9.85-5.472 1 1 0 010-1.053A11.566 11.566 0 0112 6zm0 2a9.567 9.567 0 00-7.798 4A9.57 9.57 0 0012 16a9.57 9.57 0 007.799-4A9.57 9.57 0 0012 8zm0 1a3 3 0 110 6 3 3 0 010-6z"
      }
    })]);
  }
};

function ownKeys$1b(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1b(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1b(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1b(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var facebook = {
  name: 'IconFacebook',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1b({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M9.677 20.895v-8.241H7V9.69h2.677V7.517S9.485 3 13.394 3H17v3.02h-2.415s-1.45-.08-1.465 1.417V9.69h3.34L16 12.654h-2.912V21h-3.41v-.105z"
      }
    })]);
  }
};

function ownKeys$1c(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1c(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1c(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1c(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var filterAlt = {
  name: 'IconFilterAlt',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1c({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13.5 14.598v5.53a.879.879 0 01-1.5.622l-1.207-1.207a1 1 0 01-.293-.707v-4.238L4.18 5.574A1 1 0 015.013 4h13.976a1 1 0 01.831 1.574l-6.32 9.024zM12 13.254L17.079 6H6.921L12 13.254z"
      }
    })]);
  }
};

function ownKeys$1d(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1d(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1d(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1d(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var filter = {
  name: 'IconFilter',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1d({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M4.125 7h15.75C20.496 7 21 7.448 21 8s-.504 1-1.125 1H4.125C3.504 9 3 8.552 3 8s.504-1 1.125-1zM7 11h10a1 1 0 010 2H7a1 1 0 010-2zm4 4h2a1 1 0 010 2h-2a1 1 0 010-2z"
      }
    })]);
  }
};

function ownKeys$1e(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1e(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1e(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1e(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var findLocation = {
  name: 'IconFindLocation',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1e({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M6 11a1 1 0 010 2H4.062A8.004 8.004 0 0011 19.938V18a1 1 0 012 0v1.938A8.004 8.004 0 0019.938 13H18a1 1 0 010-2h1.938A8.004 8.004 0 0013 4.062V6a1 1 0 01-2 0V4.062A8.004 8.004 0 004.062 11H6zm6 11C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-8.75a1.25 1.25 0 110-2.5 1.25 1.25 0 010 2.5z"
      }
    })]);
  }
};

function ownKeys$1f(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1f(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1f(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1f(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var fire = {
  name: 'IconFire',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1f({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12.264 6.35a7.317 7.317 0 01-.56-1.272c-1.412 1.586-2.64 4.13-2.682 6.17-.02 1.07.13 1.846.902 2.372.45.306 1.046.363 1.67.384 1.197.04 2.496-.315 3.06-1.123.258-.372.347-.725.364-1.135.019-.451-.06-.968-.332-1.606-.302-.711-.77-1.357-1.267-2.041-.397-.548-.808-1.116-1.155-1.748V6.35zm-.516 9.654c-1.067 0-2.118-.163-2.95-.732-1.336-.911-1.81-2.315-1.775-4.063.072-3.586 2.918-7.76 4.992-9.056a.997.997 0 011.376.316.992.992 0 01.068.937c-.004.089.002.185.003.235.004.209.028.384.076.582.086.353.243.735.48 1.167.286.522.643 1.013 1.02 1.535.54.744 1.098 1.512 1.49 2.43.245.58.456 1.305.49 2.107.034.8-.107 1.677-.724 2.562-.93 1.337-2.76 1.98-4.546 1.98zm-6.45 5.962a1 1 0 11-.55-1.922l3.639-1.041-3.64-1.04a1 1 0 01.552-1.923L12.023 18l6.725-1.961a1 1 0 11.55 1.922L15.66 19l3.639 1.04a1 1 0 11-.551 1.924L12.023 20l-6.724 1.966z"
      }
    })]);
  }
};

function ownKeys$1g(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1g(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1g(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1g(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var fishing = {
  name: 'IconFishing',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1g({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M6.446 8.841A3.502 3.502 0 017.491 2a3.5 3.5 0 01.955 6.868v6.81c.007.1.24 3.69 3.603 4.245.37.062.77.088 1.195.072 4.456-.135 4.732-3.508 4.75-3.895v-.098h-1.002a1.002 1.002 0 01-.903-1.43l2.023-4.003a.991.991 0 011.123-.54c.45.103.766.508.755.97v5.142c-.066 1.986-1.53 5.698-6.678 5.855-.094.002-.187.004-.28.004a7.936 7.936 0 01-1.304-.103c-3.974-.657-5.192-4.317-5.28-6.172l-.002-6.884zM7.491 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"
      }
    })]);
  }
};

function ownKeys$1h(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1h(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1h(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1h(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var freeProduct = {
  name: 'IconFreeProduct',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1h({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M14.5 2a3.5 3.5 0 013.163 5.001L21 7a1 1 0 01.993.883L22 8v4a1 1 0 01-.883.993L21 13v8a1 1 0 01-.883.993L20 22H4a1 1 0 01-.993-.883L3 21v-8a1 1 0 01-.993-.883L2 12V8a1 1 0 01.883-.993L3 7l3.337.001a3.5 3.5 0 015.664-3.95A3.48 3.48 0 0114.5 2zM11 13H5v7h6v-7zm8 0h-6v7h6v-7zm-8-4H4v2h7V9zm9 0h-7v2h7V9zM9.5 4a1.5 1.5 0 00-.144 2.993L9.5 7H11V5.5a1.5 1.5 0 00-1.215-1.473l-.14-.02L9.5 4zm5 0l-.144.007A1.5 1.5 0 0013 5.5V7h1.5a1.5 1.5 0 000-3z"
      }
    })]);
  }
};

function ownKeys$1i(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1i(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1i(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1i(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var gridView = {
  name: 'IconGridView',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1i({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M4 3h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1V4a1 1 0 011-1zm11 0h5a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1V4a1 1 0 011-1zm0 11h5a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5a1 1 0 011-1zM4 14h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1z"
      }
    })]);
  }
};

function ownKeys$1j(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1j(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1j(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1j(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var heartFill = {
  name: 'IconHeartFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1j({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12.702 20.712a.997.997 0 01-1.43-.026c-5.05-4.985-7.763-7.71-8.137-8.173C2.575 11.818 2 10.312 2 9a6 6 0 0110-4.472 6 6 0 018.701 8.2c-.542.683-3.208 3.344-8 7.984z"
      }
    })]);
  }
};

function ownKeys$1k(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1k(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1k(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1k(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var heartStroke = {
  name: 'IconHeartStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1k({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M16 3a6 6 0 014.701 9.728c-.542.683-3.208 3.344-8 7.984a.997.997 0 01-1.428-.026c-5.051-4.985-7.764-7.71-8.138-8.173C2.575 11.818 2 10.312 2 9a6 6 0 0110-4.472A5.978 5.978 0 0116 3zm0 2a3.994 3.994 0 00-3.215 1.62.998.998 0 01-1.549.026l-.049-.063a4 4 0 00-6.43 4.76c.318.439 2.732 2.853 7.243 7.243 4.374-4.156 6.788-6.57 7.241-7.241.68-1.008.759-1.47.759-2.345a4 4 0 00-4-4z"
      }
    })]);
  }
};

function ownKeys$1l(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1l(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1l(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1l(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var hike = {
  name: 'IconHike',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1l({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13.497 10h1.492a1 1 0 010 2h-2a1 1 0 01-.868-.503l-1.815-2.405-.32.899.003.009 3.949 10.675a1 1 0 01-1.892.651l-3.107-8.4-2.994 8.397a1 1 0 01-1.891-.65l4.988-13.99a1 1 0 011.719-.31l.002.002.045.06L13.497 10zm-7.55 2.33a1 1 0 11-1.892-.652l2.002-5.996a1 1 0 111.89.652l-2 5.996zm11.023 8.874a1 1 0 11-1.956-.416l2.98-13.985a1 1 0 111.956.416l-2.98 13.985zM10.499 5a1.5 1.5 0 110-3 1.5 1.5 0 010 3z"
      }
    })]);
  }
};

function ownKeys$1m(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1m(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1m(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1m(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var history = {
  name: 'IconHistory',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1m({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M9 6.002a1 1 0 110 2H5.993A.997.997 0 015 6.973V4.002a1 1 0 012-.004v.52a9 9 0 11-4 7.484 1 1 0 012-.001 7 7 0 103.392-6H9v.001zm3.5 5.847l2.775 2.775a.78.78 0 01-1.103 1.103l-2.87-2.87a.795.795 0 01-.014-.014.749.749 0 01-.288-.591v-5.5a.75.75 0 011.5 0v5.097z"
      }
    })]);
  }
};

function ownKeys$1n(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1n(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1n(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1n(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var home = {
  name: 'IconHome',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1n({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19 12.177V19a.997.997 0 01-1 1h-4a.997.997 0 01-1-1v-5h-2v5a.997.997 0 01-1 1H6a.997.997 0 01-1-1v-6.827l-.301.253a1.002 1.002 0 11-1.354-1.473l-.001-.002 8-6.707a1 1 0 011.354.04l7.944 6.659a1 1 0 11-1.286 1.532L19 12.177zM17 10.5l-5.002-4.193L7 10.497V18h2v-5a.997.997 0 011-1h4a.997.997 0 011 1v5h2v-7.5z"
      }
    })]);
  }
};

function ownKeys$1o(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1o(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1o(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1o(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var horse = {
  name: 'IconHorse',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1o({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M7.041 19.728c.856-4.461 3.152-6.488 3.96-7.046a3.735 3.735 0 01-.038-.493c-.008-.97.39-1.824 1.15-2.473a1 1 0 111.299 1.52c-.313.268-.416.638-.414 1.018.013 1.66 2.411 4.023 3.285 4.749.271.225.404.576.35.925-.029.199-.022.722.185.928.18.177.606.157.84.122.528-.078.916-.264 1.113-.568.355-.55.205-1.458.146-1.668L16.658 7.27a1.014 1.014 0 01-.017-.325l.175-1.36-1.307.345c-.16.066-.333.09-.504.072-3.937-.457-7.91 1.74-10.45 3.824A1 1 0 013.332 8.25C6.344 5.799 10.726 3.61 14.998 4l2.612-.921a.998.998 0 011.383 1.03l-.347 2.892 2.21 9.252c.025.084.212.797.123 1.659a3.542 3.542 0 01-.529 1.57c-.358.554-1.11 1.269-2.5 1.474a4.197 4.197 0 01-.627.049c-.978 0-1.579-.393-1.928-.745-.628-.633-.763-1.486-.773-2.053-.699-.627-2.099-1.996-2.969-3.56-.804.692-2.14 2.416-2.704 5.71-.11.38-.525.643-.951.643-.552 0-1.023-.448-1-1 .004-.083.043-.262.043-.273zm9.717-8.722a.758.758 0 11-1.516 0 .758.758 0 011.516 0z"
      }
    })]);
  }
};

function ownKeys$1p(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1p(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1p(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1p(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var horseshoe = {
  name: 'IconHorseshoe',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1p({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19.002 5a1 1 0 100-2h-2.005a1.001 1.001 0 00-.915 1.403c.176.401.366.819.563 1.249 1.135 2.492 2.456 5.403 2.356 7.9a5.004 5.004 0 01-1.165 3.051c-1.18 1.418-3.496 2.38-5.897 2.395h-.237c-2.31-.014-4.416-.933-5.634-2.395-.743-.892-1.038-1.95-1.063-3.093-.056-2.487 1.222-5.38 2.35-7.857.196-.431.386-.849.562-1.25A.998.998 0 007.002 3H5a1 1 0 000 2h.454c-1.165 2.561-2.532 5.71-2.45 8.631.041 1.517.462 2.972 1.527 4.251 1.59 1.911 4.266 3.098 7.16 3.116h.253c2.367-.014 5.557-.867 7.43-3.116 1.134-1.364 1.58-2.928 1.586-4.553.01-2.835-1.289-5.856-2.415-8.329h.457z"
      }
    })]);
  }
};

function ownKeys$1q(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1q(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1q(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1q(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var image = {
  name: 'IconImage',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1q({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M20 3a1 1 0 011 1v16a1 1 0 01-1 1H4a1 1 0 01-1-1V4a1 1 0 011-1h16zm-3 10.31l-2.867 1.654a1 1 0 01-.88.058l-.12-.058-1.13-.653L5 18.353V19h14v-4.536l-2-1.155zM19 5H5v11.044l6.5-3.752a1 1 0 01.878-.06l.12.058 1.135.653L16.5 11.29a1 1 0 01.88-.059l.12.059 1.501.866V5zM8.25 7a1.25 1.25 0 110 2.5 1.25 1.25 0 010-2.5z"
      }
    })]);
  }
};

function ownKeys$1r(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1r(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1r(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1r(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var informationFill = {
  name: 'IconInformationFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1r({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 8h-1a1 1 0 000 2v4a1 1 0 000 2h2a1 1 0 000-2v-5a.997.997 0 00-1-1zm0-4a1.25 1.25 0 100 2.5A1.25 1.25 0 0012 6z"
      }
    })]);
  }
};

function ownKeys$1s(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1s(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1s(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1s(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var informationStroke = {
  name: 'IconInformationStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1s({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16zm0-10a.997.997 0 011 1v5a1 1 0 010 2h-2a1 1 0 010-2v-4a1 1 0 010-2h1zm.03-4a1.28 1.28 0 110 2.56 1.28 1.28 0 010-2.56z"
      }
    })]);
  }
};

function ownKeys$1t(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1t(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1t(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1t(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var instagram = {
  name: 'IconInstagram',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1t({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M16 3a5 5 0 015 5v8a5 5 0 01-5 5H8a5 5 0 01-5-5V8a5 5 0 015-5h8zm0 2H8a3 3 0 00-3 3v8a3 3 0 003 3h8a3 3 0 003-3V8a3 3 0 00-3-3zm-4 2a5 5 0 110 10 5 5 0 010-10zm0 2a3 3 0 100 6 3 3 0 000-6zm4.75-2.75a1 1 0 110 2 1 1 0 010-2z"
      }
    })]);
  }
};

function ownKeys$1u(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1u(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1u(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1u(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var kayak = {
  name: 'IconKayak',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1u({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M6.574 7.955L5.05 7.04a.997.997 0 01-.313-.212L3.322 5.414a1 1 0 010-1.414l.707-.707a1 1 0 011.414 0l1.415 1.414c.088.09.157.19.205.299l.88 1.466L9.017 7.55a17.933 17.933 0 0110.82-4.53.975.975 0 01.264-.015h.027l-.003.003a1 1 0 01.885 1.17 17.847 17.847 0 01-4.526 10.855l1.004 1.007 1.513.907c.114.05.22.12.313.213l1.415 1.414a1 1 0 010 1.414l-.707.707a1 1 0 01-1.415 0l-1.414-1.414a.998.998 0 01-.206-.298l-.878-1.467-1.054-1.056A17.848 17.848 0 014 20.99a1 1 0 01-.958-1.288 17.931 17.931 0 014.55-10.727l-1.018-1.02zm2.743 2.75a3 3 0 003.991 4.003l-3.99-4.002zm1.43-1.423l3.991 4a3 3 0 00-3.992-4zm6.171 1.668a15.816 15.816 0 001.94-5.765 15.88 15.88 0 00-5.73 1.932 5.007 5.007 0 013.79 3.833zm-5.937 5.935a5.007 5.007 0 01-3.835-3.8 15.891 15.891 0 00-1.945 5.74 15.817 15.817 0 005.78-1.94z"
      }
    })]);
  }
};

function ownKeys$1v(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1v(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1v(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1v(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var listRagged = {
  name: 'IconListRagged',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1v({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M18 17a1 1 0 010 2H4a1 1 0 010-2h14zm-4-6a1 1 0 010 2H4a1 1 0 010-2h10zm6-6a1 1 0 010 2H4a1 1 0 110-2h16z"
      }
    })]);
  }
};

function ownKeys$1w(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1w(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1w(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1w(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var listView = {
  name: 'IconListView',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1w({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M6 17a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2a1 1 0 011-1h2zm14 1a1 1 0 010 2H10a1 1 0 010-2h10zM6 10a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2a1 1 0 011-1h2zm14 1a1 1 0 010 2H10a1 1 0 010-2h10zM6 3a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4a1 1 0 011-1h2zm14 1a1 1 0 010 2H10a1 1 0 110-2h10z"
      }
    })]);
  }
};

function ownKeys$1x(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1x(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1x(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1x(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var locationPinFill = {
  name: 'IconLocationPinFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1x({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2a8 8 0 018 8c0 2.81-2.428 6.713-7.284 11.698a1.006 1.006 0 01-1.432 0C6.428 16.713 4 12.811 4 10a8 8 0 018-8zm0 6.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"
      }
    })]);
  }
};

function ownKeys$1y(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1y(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1y(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1y(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var locationPinStroke = {
  name: 'IconLocationPinStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1y({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2a8 8 0 018 8c0 2.81-2.428 6.713-7.284 11.698a1.006 1.006 0 01-1.432 0C6.428 16.713 4 12.811 4 10a8 8 0 018-8zm0 2a6 6 0 00-6 6c0 2.013 1.968 5.282 6 9.552 4.032-4.27 6-7.539 6-9.552a6 6 0 00-6-6zm0 4.5a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"
      }
    })]);
  }
};

function ownKeys$1z(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1z(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1z(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1z(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var lockLockedFill = {
  name: 'IconLockLockedFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1z({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c1.997 0 3.669 1.077 4.559 2.907.156.32.278.736.379 1.262l.048.272.014.165V10h2a1 1 0 011 1v10a1 1 0 01-1 1H5a1 1 0 01-1-1V11a1 1 0 011-1h2V6.5l.02-.198c.133-.66.283-1.16.469-1.526C8.386 3.016 10.026 2 12 2zm0 11a2 2 0 00-1 3.732V19h2l.001-2.268A2 2 0 0012 13zm0-9c-1.218 0-2.172.592-2.73 1.684-.069.136-.149.386-.23.735L9 6.602V10h6V6.69a4.675 4.675 0 00-.206-.831l-.034-.077C14.2 4.63 13.22 4 12 4z"
      }
    })]);
  }
};

function ownKeys$1A(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1A(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1A(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1A(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var lockLockedStroke = {
  name: 'IconLockLockedStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1A({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c1.997 0 3.669 1.077 4.559 2.907.182.374.318.877.427 1.534l.014.165V10h2a1 1 0 011 1v10a1 1 0 01-1 1H5a1 1 0 01-1-1V11a1 1 0 011-1h2V6.5l.02-.198c.133-.66.283-1.16.469-1.526C8.386 3.016 10.026 2 12 2zm6 10H6v8h12v-8zm-6 1a2 2 0 011.001 3.732L13 19h-2v-2.268A2 2 0 0112 13zm0-9c-1.218 0-2.172.592-2.73 1.684-.08.16-.176.472-.27.918V10h6V6.69a4.675 4.675 0 00-.206-.831l-.034-.077C14.2 4.63 13.22 4 12 4z"
      }
    })]);
  }
};

function ownKeys$1B(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1B(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1B(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1B(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var lockUnlockedStroke = {
  name: 'IconLockUnlockedStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1B({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c1.997 0 3.669 1.077 4.559 2.907.182.374.318.877.427 1.534l.014.165V7a1 1 0 01-2 0v-.31c-.077-.44-.163-.75-.24-.908C14.2 4.63 13.22 4 12 4c-1.218 0-2.172.592-2.73 1.684-.08.16-.176.472-.27.918V10h10a1 1 0 011 1v10a1 1 0 01-1 1H5a1 1 0 01-1-1V11a1 1 0 011-1h2V6.5l.02-.198c.133-.66.283-1.16.469-1.526C8.386 3.016 10.026 2 12 2zm6 10H6v8h12v-8zm-6 1a2 2 0 011.001 3.732L13 19h-2v-2.268A2 2 0 0112 13z"
      }
    })]);
  }
};

function ownKeys$1C(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1C(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1C(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1C(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var mail = {
  name: 'IconMail',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1C({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M21 5a1 1 0 011 1v12a1 1 0 01-1 1H3a1 1 0 01-1-1V6a1 1 0 011-1h18zm-1 3.536l-7.483 4.32a1 1 0 01-1.017.01L4 8.536V17h16V8.536zM18.658 7H5.34L12 10.845 18.658 7z"
      }
    })]);
  }
};

function ownKeys$1D(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1D(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1D(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1D(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var memberCard = {
  name: 'IconMemberCard',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1D({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M7.042 13.956a2 2 0 111.916 0A3.001 3.001 0 0111 16.8a.5.5 0 11-1 0 2 2 0 10-4 0 .5.5 0 11-1 0c0-1.322.855-2.444 2.042-2.844zM4 7V5a1 1 0 011-1h14a1 1 0 011 1v2h1a1 1 0 011 1v11a1 1 0 01-1 1H3a1 1 0 01-1-1V8a1 1 0 011-1h1zm2 0h12V6H6v1zm14 11V9H4v9h16zm-7.563-7h6.126c.241 0 .437.224.437.5s-.196.5-.438.5h-6.125c-.241 0-.437-.224-.437-.5s.196-.5.438-.5zm0 2h6.126c.241 0 .437.224.437.5s-.196.5-.438.5h-6.125c-.241 0-.437-.224-.437-.5s.196-.5.438-.5zm0 2h6.126c.241 0 .437.224.437.5s-.196.5-.438.5h-6.125c-.241 0-.437-.224-.437-.5s.196-.5.438-.5zM8 13.2a1 1 0 100-2 1 1 0 000 2z"
      }
    })]);
  }
};

function ownKeys$1E(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1E(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1E(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1E(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var microphone = {
  name: 'IconMicrophone',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1E({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M17 11v-1a1 1 0 012 0v1a7.002 7.002 0 01-6 6.93V21a1 1 0 01-2 0v-3.07A7.002 7.002 0 015 11v-1a1 1 0 112 0v1a5 5 0 0010 0zM8 6a4 4 0 118 0v5a4 4 0 11-8 0V6z"
      }
    })]);
  }
};

function ownKeys$1F(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1F(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1F(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1F(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var minusFill = {
  name: 'IconMinusFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1F({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm4 9H8a1 1 0 000 2h8a1 1 0 000-2z"
      }
    })]);
  }
};

function ownKeys$1G(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1G(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1G(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1G(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var minusLg = {
  name: 'IconMinusLg',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1G({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M6 11h12a1 1 0 010 2H6a1 1 0 010-2z"
      }
    })]);
  }
};

function ownKeys$1H(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1H(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1H(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1H(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var minusSm = {
  name: 'IconMinusSm',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1H({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M8 11h8a1 1 0 010 2H8a1 1 0 010-2z"
      }
    })]);
  }
};

function ownKeys$1I(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1I(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1I(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1I(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var minusStroke = {
  name: 'IconMinusStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1I({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16zm-4-9h8a1 1 0 010 2H8a1 1 0 010-2z"
      }
    })]);
  }
};

function ownKeys$1J(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1J(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1J(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1J(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var moreFunctions = {
  name: 'IconMoreFunctions',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1J({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 17a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm0-6.5a1.5 1.5 0 110 3 1.5 1.5 0 010-3zM12 4a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"
      }
    })]);
  }
};

function ownKeys$1K(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1K(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1K(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1K(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var navigationMenu = {
  name: 'IconNavigationMenu',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1K({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M20 17a1 1 0 010 2H4a1 1 0 010-2h16zm0-6a1 1 0 010 2H4a1 1 0 010-2h16zm0-6a1 1 0 010 2H4a1 1 0 110-2h16z"
      }
    })]);
  }
};

function ownKeys$1L(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1L(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1L(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1L(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var night = {
  name: 'IconNight',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1L({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 3a1 1 0 01.34 1.94C10.985 5.579 10 7.3 10 9a5 5 0 005 5c1.74 0 3.247-.837 4.049-2.309A1 1 0 0121 12v.567l-.015.433-.002.067A9.5 9.5 0 1111.391 3H12zm6.564 12.026a7 7 0 01-9.59-9.59 7.5 7.5 0 109.59 9.59z"
      }
    })]);
  }
};

function ownKeys$1M(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1M(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1M(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1M(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var paddle = {
  name: 'IconPaddle',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1M({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M10.252 14.878c-2.642 3.003-3.515 3.826-3.757 3.975-.264.125-.438.21-.968-.322-.02-.02-.047-.028-.069-.046-.018-.02-.025-.047-.045-.067-.53-.53-.447-.705-.334-.944.16-.264.978-1.13 3.965-3.75l.323-.283 1.704-.56-.56 1.704-.259.293zM20.658 4.863l-1.57-1.57a1 1 0 00-1.415 1.414l.11.11-5.499 5.496a.943.943 0 00-.215.134l-3.522 1.16a.993.993 0 00-.358.207l-.463.407c-2.99 2.623-4.152 3.766-4.439 4.366-.818 1.714.334 2.866.712 3.245.02.02.047.027.068.045.018.02.025.048.046.07.284.282 1 .997 2.06.997.357 0 .753-.08 1.184-.287.604-.288 1.755-1.455 4.396-4.458l.386-.436c.093-.104.164-.226.208-.36l1.14-3.464 5.71-5.71.047.048a.997.997 0 001.414 0 1 1 0 000-1.414z"
      }
    })]);
  }
};

function ownKeys$1N(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1N(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1N(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1N(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var pauseFill = {
  name: 'IconPauseFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1N({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zM9 8.027a.5.5 0 00-.5.5v6.946a.5.5 0 00.5.5h1.5a.5.5 0 00.5-.5V8.527a.5.5 0 00-.5-.5H9zm4.5 0a.5.5 0 00-.5.5v6.946a.5.5 0 00.5.5H15a.5.5 0 00.5-.5V8.527a.5.5 0 00-.5-.5h-1.5z"
      }
    })]);
  }
};

function ownKeys$1O(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1O(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1O(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1O(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var pauseStroke = {
  name: 'IconPauseStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1O({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16zM9 8.027h1.5a.5.5 0 01.5.5v6.946a.5.5 0 01-.5.5H9a.5.5 0 01-.5-.5V8.527a.5.5 0 01.5-.5zm4.5 0H15a.5.5 0 01.5.5v6.946a.5.5 0 01-.5.5h-1.5a.5.5 0 01-.5-.5V8.527a.5.5 0 01.5-.5z"
      }
    })]);
  }
};

function ownKeys$1P(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1P(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1P(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1P(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var pause = {
  name: 'IconPause',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1P({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M9 8.027h1.5a.5.5 0 01.5.5v6.946a.5.5 0 01-.5.5H9a.5.5 0 01-.5-.5V8.527a.5.5 0 01.5-.5zm4.5 0H15a.5.5 0 01.5.5v6.946a.5.5 0 01-.5.5h-1.5a.5.5 0 01-.5-.5V8.527a.5.5 0 01.5-.5z"
      }
    })]);
  }
};

function ownKeys$1Q(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1Q(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1Q(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1Q(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var photography = {
  name: 'IconPhotography',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1Q({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M3 7h3l1.703-2.555A1 1 0 018.535 4h6.933a1 1 0 01.833.446L18 7h3a1 1 0 011 1v11a1 1 0 01-1 1H3a1 1 0 01-1-1V8a1 1 0 011-1zm1 11h16V9h-2.534a1 1 0 01-.832-.446L14.933 6H9.07L7.367 8.555A1 1 0 016.535 9H4v9zm8 0a5 5 0 110-10 5 5 0 010 10zm0-2a3 3 0 100-6 3 3 0 000 6z"
      }
    })]);
  }
};

function ownKeys$1R(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1R(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1R(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1R(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var picnic = {
  name: 'IconPicnic',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1R({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M15.333 6l1.82 5H21a1 1 0 010 2h-3.12l2.06 5.658a1 1 0 01-1.88.684L15.752 13H8.248L5.94 19.342a1 1 0 11-1.88-.684L6.12 13H3a1 1 0 010-2h3.848l1.82-5H7a1 1 0 110-2h10a1 1 0 010 2h-1.667zm-2.11 0h-2.447c-.01.062-.026.125-.048.186L8.976 11h6.048l-1.752-4.814A1.005 1.005 0 0113.224 6h-.001z"
      }
    })]);
  }
};

function ownKeys$1S(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1S(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1S(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1S(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var pinterest = {
  name: 'IconPinterest',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1S({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M7.677 17.192l1.246-5.156s.126-.623-.196-1.178c0 0-.718-1.771.7-3.273 0 0 1.161-1.298 2.647-.32 0 0 .848.659.506 1.907l-1.009 3.113s-.616 2.367 1.665 2.57c0 0 2.408.32 3.57-2.901 1.161-3.221-.19-5.273-.19-5.273s-1.737-3.012-5.66-2.378c-3.925.634-4.421 4.33-4.421 4.33s-.295 2.278.936 3.938l-.59 1.986S3.879 12.659 4.005 9.25c0 0 .126-5.683 6.013-7.053 0 0 5.331-1.326 8.487 2.904 1.766 2.366 1.64 4.942 1.262 6.853-.379 1.91-1.808 3.133-1.808 3.133s-3.864 4.048-7.226.476l-.715 2.723S9.177 21.236 8.04 22l-.523-.132s-.26-3.287.16-4.676z"
      }
    })]);
  }
};

function ownKeys$1T(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1T(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1T(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1T(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var plane = {
  name: 'IconPlane',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1T({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M8.658 2h.788a1 1 0 01.773.366l.075.104L15 10h5a2 2 0 110 4h-5l-4.706 7.53a1 1 0 01-.848.47h-.788a.5.5 0 01-.482-.634L10.222 14H5.36l-2.416 2.636a.5.5 0 01-.857-.444L3 12l-.912-4.192a.5.5 0 01.79-.505l.067.061L5.362 10h4.86L8.176 2.634a.5.5 0 01-.014-.066L8.158 2.5a.5.5 0 01.41-.492L8.658 2h.788-.788z"
      }
    })]);
  }
};

function ownKeys$1U(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1U(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1U(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1U(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var playFill = {
  name: 'IconPlayFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1U({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zM9.5 7.755a.5.5 0 00-.5.5v7.5a.5.5 0 00.736.44l6.993-3.754a.5.5 0 000-.881L9.735 7.814a.5.5 0 00-.236-.059z"
      }
    })]);
  }
};

function ownKeys$1V(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1V(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1V(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1V(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var playStroke = {
  name: 'IconPlayStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1V({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 2a8 8 0 100 16 8 8 0 000-16zM9.5 7.755a.5.5 0 01.236.06l6.992 3.745a.5.5 0 010 .881l-6.992 3.754a.5.5 0 01-.736-.44v-7.5a.5.5 0 01.5-.5z"
      }
    })]);
  }
};

function ownKeys$1W(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1W(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1W(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1W(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var play = {
  name: 'IconPlay',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1W({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M9.737 16.195a.5.5 0 01-.737-.44v-7.5a.5.5 0 01.737-.44l6.999 3.745a.5.5 0 010 .881l-6.999 3.754z"
      }
    })]);
  }
};

function ownKeys$1X(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1X(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1X(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1X(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var playground = {
  name: 'IconPlayground',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1X({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13 11a5 5 0 014 4.821h.002v.143h.001v.043a3 3 0 002.902 2.998c.064-.006.127-.006.191 0 .022 0 .043 0 .064-.002v.01a1 1 0 010 1.975v.017a5 5 0 01-5.157-4.998v-.065H15v-.043a3 3 0 00-2-2.829v6.931a1 1 0 01-2 0v-4H5v4a1 1 0 01-2 0v-10c0-.223.073-.429.196-.595l3.93-5.892a1 1 0 011.756.015l3.907 5.857c.132.17.211.383.211.615v1zm-8 .001v3h6v-3H5zm5.128-2L7.999 5.81 5.87 9.001h4.258z"
      }
    })]);
  }
};

function ownKeys$1Y(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1Y(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1Y(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1Y(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var plugin = {
  name: 'IconPlugin',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1Y({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M16.364 3A10 10 0 0122 12a10 10 0 01-5.636 9H7.636A10 10 0 012 12a10 10 0 015.636-9h8.728zM8.123 5A7.998 7.998 0 004 12a7.998 7.998 0 004.123 7h7.754A7.998 7.998 0 0020 12a7.998 7.998 0 00-4.123-7H8.123zM8 8a1 1 0 112 0v4a1 1 0 01-2 0V8zm6 0a1 1 0 012 0v4a1 1 0 01-2 0V8zm-3 7a1 1 0 012 0v1a1 1 0 01-2 0v-1z"
      }
    })]);
  }
};

function ownKeys$1Z(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1Z(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1Z(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1Z(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var plusFill = {
  name: 'IconPlusFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1Z({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M11 11H8a1 1 0 000 2h3v3a1 1 0 002 0v-3h3a1 1 0 000-2h-3V8a1 1 0 00-2 0v3zm1 11C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z"
      }
    })]);
  }
};

function ownKeys$1_(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1_(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1_(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1_(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var plusLg = {
  name: 'IconPlusLg',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1_({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M11 11H6a1 1 0 000 2h5v5a1 1 0 002 0v-5h5a1 1 0 000-2h-5V6a1 1 0 00-2 0v5z"
      }
    })]);
  }
};

function ownKeys$1$(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1$(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$1$(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$1$(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var plusSm = {
  name: 'IconPlusSm',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$1$({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M11 11H8a1 1 0 000 2h3v3a1 1 0 002 0v-3h3a1 1 0 000-2h-3V8a1 1 0 00-2 0v3z"
      }
    })]);
  }
};

function ownKeys$20(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$20(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$20(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$20(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var plusStroke = {
  name: 'IconPlusStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$20({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M11 11V8a1 1 0 012 0v3h3a1 1 0 010 2h-3v3a1 1 0 01-2 0v-3H8a1 1 0 010-2h3zm1 11C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16z"
      }
    })]);
  }
};

function ownKeys$21(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$21(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$21(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$21(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var print = {
  name: 'IconPrint',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$21({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M3 17a1 1 0 01-1-1V9a1 1 0 011-1h4V5a1 1 0 011-1h8a1 1 0 011 1v3h4a1 1 0 011 1v7a1 1 0 01-1 1h-3l.561 1.684A1 1 0 0117.613 20H6.387a1 1 0 01-.948-1.316L6 17H3zm14.333-2H20v-5H4v5h2.667l.105-.316A1 1 0 017.721 14h8.558a1 1 0 01.949.684l.105.316zM8.5 8h7V5.5h-7V8zM7.27 18.5h9.46l-.67-3H7.94l-.67 3zM18 13a1 1 0 110-2 1 1 0 010 2z"
      }
    })]);
  }
};

function ownKeys$22(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$22(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$22(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$22(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var protectionFill = {
  name: 'IconProtectionFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$22({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M11.61 2.08a1 1 0 01.785.001l7.743 3.325a1 1 0 01.594.771c.597 4.011.2 7.365-1.22 10.043-1.437 2.709-3.855 4.623-7.198 5.73a1 1 0 01-.649-.008c-3.345-1.189-5.74-3.098-7.133-5.722-1.374-2.588-1.816-5.927-1.357-10.007a1 1 0 01.603-.809l7.831-3.324zm3.627 5.277l-4.95 6.083-1.52-1.817a1 1 0 00-1.533 1.285l2.227 2.66a.999.999 0 001.565.1l5.743-7.025a1 1 0 10-1.532-1.286z"
      }
    })]);
  }
};

function ownKeys$23(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$23(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$23(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$23(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var protectionStroke = {
  name: 'IconProtectionStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$23({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M11.61 2.08a1 1 0 01.785.001l7.743 3.325a1 1 0 01.594.771c.597 4.011.2 7.365-1.22 10.043-1.437 2.709-3.855 4.623-7.198 5.73a1 1 0 01-.649-.008c-3.345-1.189-5.74-3.098-7.133-5.722-1.374-2.588-1.816-5.927-1.357-10.007a1 1 0 01.603-.809l7.831-3.324zm.388 2.007L5.103 7.014c-.315 3.44.093 6.192 1.195 8.269 1.101 2.074 2.99 3.624 5.713 4.656 2.7-.961 4.595-2.51 5.734-4.656 1.139-2.148 1.51-4.896 1.084-8.262l-6.831-2.934zm3.239 3.27a1 1 0 111.532 1.286l-5.743 7.025a.997.997 0 01-1.565-.1l-2.227-2.66a1 1 0 111.532-1.285l1.52 1.817 4.951-6.083z"
      }
    })]);
  }
};

function ownKeys$24(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$24(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$24(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$24(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var questionFill = {
  name: 'IconQuestionFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$24({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 13.5a1.25 1.25 0 100 2.5 1.25 1.25 0 000-2.5zM12 6a3.5 3.5 0 00-3.5 3.5 1 1 0 002 0 1.5 1.5 0 013 0c0 .816-.881 1.119-1.5 1.75s-1 1.296-1 2.257a1 1 0 102-.007 1.493 1.493 0 01.695-1.266c.233-.148 1.805-.938 1.805-2.734A3.5 3.5 0 0012 6z"
      }
    })]);
  }
};

function ownKeys$25(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$25(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$25(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$25(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var questionStroke = {
  name: 'IconQuestionStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$25({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 2a8 8 0 100 16 8 8 0 000-16zm0 11.5a1.25 1.25 0 110 2.5 1.25 1.25 0 010-2.5zM12 6a3.5 3.5 0 013.5 3.5c0 1.796-1.572 2.586-1.805 2.734A1.507 1.507 0 0013 13.5a1 1 0 11-2 .007c0-.96.381-1.626 1-2.257.619-.631 1.5-.934 1.5-1.75a1.5 1.5 0 00-3 0 1 1 0 01-2 0A3.5 3.5 0 0112 6z"
      }
    })]);
  }
};

function ownKeys$26(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$26(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$26(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$26(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var refresh = {
  name: 'IconRefresh',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$26({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M21 12a1 1 0 01-2 0A7 7 0 008.392 6H9a1 1 0 010 2H5.993A.997.997 0 015 6.971V4a1 1 0 012-.004v.52A9 9 0 0121 12zm-5.392 6H15a1 1 0 010-2h3.007A.997.997 0 0119 17.029V20a1 1 0 01-2 .004v-.52A9 9 0 013 12a1 1 0 012 .001 7 7 0 0010.608 6z"
      }
    })]);
  }
};

function ownKeys$27(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$27(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$27(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$27(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var reload = {
  name: 'IconReload',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$27({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M8.392 6A7 7 0 115 12a1 1 0 00-2 0 9 9 0 104-7.485v-.519A1 1 0 005 4v2.971A.997.997 0 005.993 8H9a1 1 0 000-2h-.608z"
      }
    })]);
  }
};

function ownKeys$28(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$28(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$28(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$28(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var run = {
  name: 'IconRun',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$28({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M15.852 18.001l4.14.007c.03-.44-.014-1.024-.32-1.545-.405-.685-1.177-1.208-2.354-1.444-.018-.003-.032-.014-.049-.018h-1.802a1 1 0 010-2h.948l-.123-1h-2.247a1 1 0 010-2h2.064l-.043-.425c-1.449-.37-2.686-.922-3.896-2.757l-2.852 3.715 6.534 7.467zm6.14 0l.008.004v.996a1 1 0 01-1.043 1 1.012 1.012 0 01-.132.008l-5.43-.01a.996.996 0 01-.755-.344l-7.399-8.427a1 1 0 01-.038-1.264l4.301-5.572a.999.999 0 011.692.17c1.21 2.475 2.06 2.764 3.923 3.214l.113.026c.416.1.721.454.76.88l.423 4.613c1.388.412 2.392 1.142 2.993 2.176.51.878.614 1.805.585 2.53h-.001zM3 18h7.995l1.739 2H3a1 1 0 010-2zm7.081-.992H3a1 1 0 010-2h5.342l1.74 2h-.001zm-2.614-2.99H3a1 1 0 010-2h2.728l1.739 2z"
      }
    })]);
  }
};

function ownKeys$29(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$29(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$29(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$29(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var scanBarcode = {
  name: 'IconScanBarcode',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$29({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M3 4h2a1 1 0 110 2H4v12h1a1 1 0 010 2H3a1 1 0 01-1-1V5a1 1 0 011-1zm18 0a1 1 0 011 1v14a1 1 0 01-1 1h-2a1 1 0 010-2h1V6h-1a1 1 0 010-2h2zM5 7.5h1v9H5v-9zm2 0h1v9H7v-9zm11 0h1v9h-1v-9zm-6 0h2v9h-2v-9zm-3 0h.75v9H9v-9zm5.75 0h.75v9h-.75v-9zm-4.25 0h.75v9h-.75v-9zm5.75 0H17v9h-.75v-9z"
      }
    })]);
  }
};

function ownKeys$2a(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2a(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2a(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2a(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var search = {
  name: 'IconSearch',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2a({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M20.707 19.294a1 1 0 01-1.414 1.414l-4.244-4.245a7.5 7.5 0 111.414-1.414l4.244 4.245zM10.5 16a5.5 5.5 0 100-11 5.5 5.5 0 000 11z"
      }
    })]);
  }
};

function ownKeys$2b(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2b(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2b(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2b(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var serviceShop = {
  name: 'IconServiceShop',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2b({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12.458 10.19l-1.985-1.988A3.857 3.857 0 006.857 3a.553.553 0 00-.39.944l1.69 1.688-.5 1.863-1.864.5-1.622-1.623A.686.686 0 003 6.857a3.857 3.857 0 005.202 3.616l1.988 1.985-.787.788-.33-.01a1.286 1.286 0 00-.948.377l-4.75 4.756c-.5.503-.5 1.317.002 1.818l.433.434a1.286 1.286 0 001.817.001l4.758-4.751c.25-.25.387-.593.376-.947l-.008-.3.803-.803 6.813 6.801a1.286 1.286 0 001.817 0l.433-.435a1.287 1.287 0 00.002-1.818l-6.8-6.813 3.688-3.689 1.492-.248c.443-.074.815-.374.982-.79l.895-2.237a.5.5 0 00-.111-.54l-.82-.819a.5.5 0 00-.539-.11l-2.236.894c-.417.167-.717.54-.79.982l-.255 1.522-3.669 3.67z"
      }
    })]);
  }
};

function ownKeys$2c(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2c(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2c(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2c(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var shipping = {
  name: 'IconShipping',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2c({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M3.594 6.729l8-3.643a1 1 0 01.812 0l8 3.643a1 1 0 01.594.914v8.7a1 1 0 01-.594.914l-8 3.653a1 1 0 01-.812 0l-8-3.653A1 1 0 013 16.343v-8.7a1 1 0 01.594-.914zM5 9.2v6.5l6 2.68v-6.53L5 9.2zm8 9.18l6-2.65V9.2l-6 2.68v6.5zM6.475 7.648l2.042.924 5.51-2.47L12 5.177l-5.525 2.47zm3.48 1.548l2.043.924 5.51-2.471-2.027-.923-5.526 2.47zM6 13l2 .862v2L6 15v-2z"
      }
    })]);
  }
};

function ownKeys$2d(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2d(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2d(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2d(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var shoppingBagFill = {
  name: 'IconShoppingBagFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2d({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M7 8a5 5 0 1110 0h2.074a1 1 0 01.997.916l.928 11A1 1 0 0120.002 21H4a1 1 0 01-.997-1.083l.914-11A1 1 0 014.914 8H7zm5-3a3 3 0 00-3 3h6a3 3 0 00-3-3z"
      }
    })]);
  }
};

function ownKeys$2e(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2e(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2e(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2e(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var shoppingBag = {
  name: 'IconShoppingBag',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2e({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M7 8a5 5 0 1110 0h2.074a1 1 0 01.997.916l.928 11A1 1 0 0120.002 21H4a1 1 0 01-.997-1.083l.914-11A1 1 0 014.914 8H7zm-1.166 2l-.747 9h13.827l-.759-9H17v1a1 1 0 01-2 0l-.002-1H9v1a1 1 0 01-2 0l.001-1H5.834zM12 5a3 3 0 00-3 3h6a3 3 0 00-3-3z"
      }
    })]);
  }
};

function ownKeys$2f(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2f(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2f(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2f(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var shrink = {
  name: 'IconShrink',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2f({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M9.002 16.42l-4.295 4.287a1 1 0 01-1.414-1.415L7.583 15h-2.58a1 1 0 010-2h5.006a.997.997 0 01.992 1.029V19a1 1 0 01-2 .004l.001-2.584zM15 7.58l4.296-4.287a1 1 0 011.414 1.414L16.419 9H19a1 1 0 110 2h-5.006A.997.997 0 0113 9.97V5a1 1 0 012-.004V7.58z"
      }
    })]);
  }
};

function ownKeys$2g(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2g(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2g(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2g(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var sizeChart = {
  name: 'IconSizeChart',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2g({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M14.828 18.364l.927.926 3.535-3.535L8.245 4.71 4.71 8.245l.926.927 1.237-1.238a.75.75 0 111.061 1.06l-1.237 1.238 1.06 1.06.53-.53a.75.75 0 011.061 1.061l-.53.53.884.884L10.939 12A.75.75 0 1112 13.06l-1.237 1.238.883.884.53-.53a.75.75 0 011.061 1.06l-.53.53 1.06 1.061 1.238-1.237a.75.75 0 111.06 1.06l-1.237 1.238zM8.962 3.296l11.752 11.752a1 1 0 010 1.414l-4.252 4.243a1 1 0 01-1.414 0L3.296 8.952a1 1 0 010-1.414l4.242-4.242a1.011 1.011 0 011.424 0z"
      }
    })]);
  }
};

function ownKeys$2h(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2h(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2h(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2h(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var skiBoot = {
  name: 'IconSkiBoot',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2h({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M6.16 2.01l.114.022 6.688 1.714.042-.358a.5.5 0 01.46-.44l.095.001a.497.497 0 01.442.46l-.003.09-.174 1.488-.028.335-.011-.003c.692.141 1.194.75 1.2 1.456l-.006.145a1.5 1.5 0 01-1.322 1.36l-.123.009-.147 1.485A63.501 63.501 0 0113 12.94c5.738 1.17 7.907 3.768 7.995 5.054l.003.08v2.87h.505a.499.499 0 01.09.99l-.09.008H14.86l-.114-.007-.112-.02-4.127-.955a1 1 0 00-.817.168l-.096.08-.486.46a1 1 0 01-.561.266l-.127.008H2.5a.499.499 0 01-.09-.99l.09-.008h.512l1.534-13.71.023.02a1.498 1.498 0 01.128-2.42l.125-.073.211-1.873a1 1 0 011.127-.88zm-.65 5.586L4.017 20.943H8.42l.486-.46a2 2 0 011.663-.527l.164.03 4.127.957h5.137v-2.867c0-.325-.415-.982-1.23-1.655l-.181-.144-.131-.097-2.596 2.614a.498.498 0 01-.635.06l-.07-.059a.5.5 0 010-.707l2.46-2.46c-.52-.3-1.106-.58-1.759-.833l-2.996 2.996a.5.5 0 01-.707-.707l2.652-2.654a20.489 20.489 0 00-1.909-.49H8.5a.5.5 0 110-1H12l.003-.077.09-.629.095-.733.067-.56H8.5a.5.5 0 110-1l3.864.001.084-.826.088-.903.818.07c.04.004.08.006.12.006l-.12-.006-7.843-.686zm.048-2.003a.5.5 0 00-.176.98l.089.016 7.97.697a.5.5 0 00.175-.98l-.089-.016-7.97-.697zM6.026 3l-.182 1.614 6.946.608.038-.322.013-.153L6.026 3z"
      }
    })]);
  }
};

function ownKeys$2i(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2i(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2i(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2i(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var ski = {
  name: 'IconSki',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2i({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12.782 7.87l1.76-.752a1 1 0 01.768 1.839l-.36.154 3.467 1.98a1 1 0 11-.996 1.724l-4.764-2.72-2.474 1.063 3.201 1.92a1 1 0 01.456 1.477l-1.336 2.48c3.29 1.309 5.124 1.965 5.502 1.969a.987.987 0 001-1 1 1 0 112 0c0 1.657-1.343 2.984-3 3-.375.004-.59-.11-.799-.192L3.881 15.996a1 1 0 11.565-1.89l6.16 2.24 1.076-1.983-4.113-2.46a1 1 0 01.051-1.822l2.864-1.226-3.922-2.24-.217.35a1 1 0 11-1.65-1.111l.137-.225-1.296-.74.001-.002a1 1 0 111.03-1.71l1.316.75.258-.416A1 1 0 017.82 4.599l-.2.32 5.163 2.952zm4.724-.866a1.5 1.5 0 110-3 1.5 1.5 0 010 3z"
      }
    })]);
  }
};

function ownKeys$2j(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2j(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2j(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2j(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var snowShop = {
  name: 'IconSnowShop',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2j({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13.31 12.75h3.28l1.856 1.857a.75.75 0 101.06-1.06l-.795-.797h2.539a.75.75 0 100-1.5h-2.5l.76-.76a.75.75 0 10-1.062-1.06l-1.82 1.82h-3.297l1.638-2.837 2.486-.666a.75.75 0 10-.388-1.45l-1.037.279 1.26-2.184a.75.75 0 10-1.299-.75l-1.28 2.217-.29-1.088a.75.75 0 10-1.45.388l.68 2.537-1.63 2.822-1.66-2.874.667-2.486A.75.75 0 009.58 4.77l-.278 1.037-1.26-2.184a.75.75 0 00-1.3.75l1.28 2.217-1.088-.29a.75.75 0 00-.388 1.449l2.536.68 1.63 2.822H7.393l-1.82-1.82a.75.75 0 00-1.06 1.06l.759.76H2.75a.75.75 0 100 1.5h2.56l-.796.796a.75.75 0 101.06 1.06l1.857-1.856h3.302l-1.661 2.877-2.537.68a.75.75 0 10.389 1.449l1.087-.292-1.27 2.2a.75.75 0 001.3.75l1.25-2.166.277 1.037a.75.75 0 101.45-.388l-.667-2.486 1.67-2.893 1.64 2.84-.68 2.537a.75.75 0 101.45.388l.29-1.087 1.27 2.199a.75.75 0 101.3-.75l-1.25-2.165 1.037.278a.75.75 0 00.388-1.45l-2.486-.665-1.67-2.893z"
      }
    })]);
  }
};

function ownKeys$2k(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2k(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2k(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2k(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var snow = {
  name: 'IconSnow',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2k({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13.31 12.75h3.28l1.856 1.857a.75.75 0 101.06-1.06l-.795-.797h2.539a.75.75 0 100-1.5h-2.5l.76-.76a.75.75 0 10-1.062-1.06l-1.82 1.82h-3.297l1.638-2.837 2.486-.666a.75.75 0 10-.388-1.45l-1.037.279 1.26-2.184a.75.75 0 10-1.299-.75l-1.28 2.217-.29-1.088a.75.75 0 10-1.45.388l.68 2.537-1.63 2.822-1.66-2.874.667-2.486A.75.75 0 009.58 4.77l-.278 1.037-1.26-2.184a.75.75 0 00-1.3.75l1.28 2.217-1.088-.29a.75.75 0 00-.388 1.449l2.536.68 1.63 2.822H7.393l-1.82-1.82a.75.75 0 00-1.06 1.06l.759.76H2.75a.75.75 0 100 1.5h2.56l-.796.796a.75.75 0 101.06 1.06l1.857-1.856h3.302l-1.661 2.877-2.537.68a.75.75 0 10.389 1.449l1.087-.292-1.27 2.2a.75.75 0 001.3.75l1.25-2.166.277 1.037a.75.75 0 101.45-.388l-.667-2.486 1.67-2.893 1.64 2.84-.68 2.537a.75.75 0 101.45.388l.29-1.087 1.27 2.199a.75.75 0 101.3-.75l-1.25-2.165 1.037.278a.75.75 0 00.388-1.45l-2.486-.665-1.67-2.893z"
      }
    })]);
  }
};

function ownKeys$2l(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2l(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2l(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2l(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var sort = {
  name: 'IconSort',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2l({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M7.293 4.293a.997.997 0 011.416.002l.002.002 2.996 2.996a1 1 0 11-1.414 1.414L9 7.414V16a1 1 0 01-2 0V7.414L5.707 8.707a1 1 0 01-1.414-1.414l3-3zm12.414 12.414l-3 3a.997.997 0 01-1.416-.002l-.002-.002-2.996-2.996a1 1 0 011.414-1.414L15 16.586V8a1 1 0 012 0v8.586l1.293-1.293a1 1 0 011.414 1.414z"
      }
    })]);
  }
};

function ownKeys$2m(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2m(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2m(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2m(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var star100 = {
  name: 'IconStar100',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2m({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M5.686 22.066l1.668-7.552L1.82 9.465l7.298-.659 2.877-7.146 2.877 7.146 7.298.659-5.534 5.049 1.668 7.552-6.309-4.006z"
      }
    })]);
  }
};

function ownKeys$2n(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2n(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2n(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2n(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var star25 = {
  name: 'IconStar25',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2n({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M5.686 22.066l1.668-7.552L1.82 9.465l7.298-.659 2.877-7.146 2.877 7.146 7.298.66-5.534 5.048 1.668 7.552-6.309-4.006-6.31 4.006h.001zm4.303-3.917l2.006-1.274 4.814 3.057-1.274-5.767 4.283-3.908-5.645-.51-2.178-5.41-2.009 4.99.003 8.822z"
      }
    })]);
  }
};

function ownKeys$2o(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2o(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2o(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2o(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var star50 = {
  name: 'IconStar50',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2o({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M5.686 22.066l1.668-7.552L1.82 9.465l7.298-.659 2.877-7.146 2.877 7.146 7.298.66-5.534 5.048 1.668 7.552-6.309-4.006-6.31 4.006h.001zm6.309-5.19l4.814 3.056-1.274-5.767 4.283-3.908-5.645-.51-2.178-5.41v12.539z"
      }
    })]);
  }
};

function ownKeys$2p(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2p(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2p(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2p(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var star75 = {
  name: 'IconStar75',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2p({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M5.686 22.066l1.668-7.552L1.82 9.465l7.298-.659 2.877-7.146 2.877 7.146 7.298.66-5.534 5.048 1.668 7.552-6.309-4.006-6.31 4.006h.001zm8.514-3.79l2.609 1.656-1.274-5.767 4.283-3.908-5.62-.508.002 8.527z"
      }
    })]);
  }
};

function ownKeys$2q(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2q(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2q(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2q(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var starStroke = {
  name: 'IconStarStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2q({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M5.866 22.405l1.669-7.552L2 9.805l7.298-.66L12.176 2l2.878 7.147 7.298.659-5.535 5.048 1.669 7.552-6.31-4.007-6.31 4.006zm1.496-2.134l4.814-3.056 4.814 3.056-1.274-5.767L20 10.597l-5.645-.51-2.179-5.41-2.179 5.41-5.645.51 4.284 3.907-1.274 5.767z"
      }
    })]);
  }
};

function ownKeys$2r(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2r(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2r(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2r(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var swim = {
  name: 'IconSwim',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2r({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13.002 15.83c-.124-.081-.25-.167-.38-.259-.01-.007-.013-.017-.023-.024a13.826 13.826 0 00-1.597-.987V7a3 3 0 013-3 1 1 0 010 2 1 1 0 00-1 1v1.018h4V7a3 3 0 013-3 1 1 0 010 2 1 1 0 00-1 1v9.612a4.353 4.353 0 01-2 .57v-3.401h-4v2.05-.001zm0-4.05h4v-1.761h-4v1.763-.002zm7.216 5.606a1 1 0 011.576 1.231c-1.334 1.71-3.301 2.348-5.306 2.348-.75 0-1.504-.131-2.232-.405-.954-.36-1.821-.83-2.81-1.53-.01-.006-.015-.017-.024-.023-.846-.596-1.547-.98-2.338-1.276-1.855-.697-4.005-.071-5.297 1.587a.995.995 0 01-1.402.173.999.999 0 01-.173-1.403c1.833-2.35 4.899-3.235 7.575-2.23.953.359 1.82.83 2.81 1.53.01.007.014.017.023.024.846.595 1.547.978 2.339 1.276 1.853.695 3.967.355 5.26-1.302h-.001z"
      }
    })]);
  }
};

function ownKeys$2s(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2s(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2s(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2s(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var telephone = {
  name: 'IconTelephone',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2s({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M4.36 5.783l1.848-1.548a1.014 1.014 0 011.663.724l.007.117c.065.738.196 1.458.386 2.153.055.198.14.463.255.796.09.259.072.542-.05.786l-.966 1.931a14.263 14.263 0 005.756 5.757l1.93-.966c.245-.122.528-.14.786-.05.331.114.595.199.792.253a12.126 12.126 0 002.273.395 1.014 1.014 0 01.72 1.667l-1.557 1.846a.997.997 0 01-.936.34c-.57-.1-1.012-.192-1.327-.273A16.25 16.25 0 014.29 8.066a18.567 18.567 0 01-.274-1.336 1.008 1.008 0 01.344-.947z"
      }
    })]);
  }
};

function ownKeys$2t(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2t(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2t(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2t(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var tent = {
  name: 'IconTent',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2t({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M7.882 19l3.199-6.395a1 1 0 011.853.036L16.11 19h2.26L11.999 6.243 5.616 19h2.266zm2.232 0h3.765l-1.881-3.765L10.114 19zm10.696.414A1 1 0 0120 21H4a1 1 0 01-.865-1.502L11.063 3.65a1 1 0 011.883.024l7.864 15.74z"
      }
    })]);
  }
};

function ownKeys$2u(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2u(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2u(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2u(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var trash = {
  name: 'IconTrash',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2u({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M17.998 6.004c.557 0 1.01.448 1.01 1l-.003.062-.877 13.998a1.006 1.006 0 01-1.007.938H6.899c-.533 0-.974-.41-1.008-.937L5.002 7.067c-.032-.512.33-.958.827-1.047l.149-.015h12.02zM7.085 8.002l.761 12h8.325l.752-11.998-9.838-.002zm7.332-5.997a1 1 0 01.902.568l.206.429h3.48a1 1 0 01.116 1.994l-.117.006H5.008A1 1 0 014.89 3.01l.117-.007H8.51l.23-.45a1 1 0 01.89-.547h4.786z"
      }
    })]);
  }
};

function ownKeys$2v(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2v(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2v(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2v(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var twitter = {
  name: 'IconTwitter',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2v({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M11.992 9.052s-1.063-2.731 2.115-4.603c0 0 2.582-1.47 5.073.91 0 0 1.124-.053 2.479-1.018 0 0 .2.888-1.567 2.316 0 0 .982-.077 2.098-.785 0 0-.212 1.223-2.032 2.11 0 0 .554 9.673-9.188 11.79 0 0-5.152 1.127-8.78-1.631 0 0 3.849.388 5.893-1.69 0 0-2.565.233-3.828-2.7 0 0 1.282.214 1.804-.194 0 0-2.706.02-3.308-3.904 0 0 1.103.544 1.824.447 0 0-3.063-1.834-1.21-5.414 0 0 3.418 4.118 8.627 4.366z"
      }
    })]);
  }
};

function ownKeys$2w(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2w(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2w(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2w(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var upload = {
  name: 'IconUpload',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2w({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M19 17a1 1 0 011 1v3a.997.997 0 01-1 1H5a.997.997 0 01-1-1v-3a1 1 0 012 0v2h12v-2a1 1 0 011-1zM12 2c.286 0 .545.12.727.314l4.98 4.979a1 1 0 01-1.412 1.417L13 5.415V17a1 1 0 01-2 0V5.414L7.707 8.707a1 1 0 01-1.414-1.414l5.005-5.005A.997.997 0 0112 2z"
      }
    })]);
  }
};

function ownKeys$2x(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2x(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2x(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2x(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var verifiedPurchaser = {
  name: 'IconVerifiedPurchaser',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2x({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13.51 2.586l.854.795a.83.83 0 00.575.217h1.21c1.175 0 2.13.904 2.13 2.016v1.134a.75.75 0 00.241.539l.855.8c.833.782.833 2.052.002 2.83l-.857.802a.745.745 0 00-.24.539v1.134c0 1.1-.956 1.997-2.13 1.997H16V21a1 1 0 01-1.202.98l-.114-.031L12 21.054l-2.684.895a1 1 0 01-1.31-.83L8 21v-5.614h-.15c-1.174 0-2.13-.895-2.13-1.996v-1.134a.749.749 0 00-.24-.54l-.855-.8a1.914 1.914 0 010-2.83l.857-.801a.745.745 0 00.24-.54V5.612c0-1.112.956-2.016 2.13-2.016h1.21a.835.835 0 00.576-.215l.855-.797c.83-.779 2.183-.779 3.016.002zM14 15.955l-.49.46c-.417.39-.964.585-1.51.585a2.202 2.202 0 01-1.51-.584l-.49-.461v3.657l1.684-.56a1 1 0 01.507-.034l.125.033 1.684.561v-3.657zM11.905 4.017l-.048.03-.852.793a2.817 2.817 0 01-1.728.748l-.214.008h-1.21c-.075 0-.114.022-.126.021l-.005-.005v1.133a2.74 2.74 0 01-.741 1.867l-.133.133-.809.755.808.758c.505.472.818 1.12.866 1.809l.007.189v1.134c0-.027.021-.013.08-.006l.05.003h1.21a2.85 2.85 0 011.782.626l.163.142.853.801A.212.212 0 0012 15a.26.26 0 00.108-.021l.034-.023.855-.801a2.847 2.847 0 011.727-.758l.215-.008h1.21c.078 0 .115-.02.127-.01l.004.013v-1.134c0-.698.27-1.362.741-1.867l.133-.133.806-.755-.808-.757a2.753 2.753 0 01-.865-1.81l-.007-.188V5.614c0 .015-.024-.004-.081-.013l-.05-.003h-1.21a2.837 2.837 0 01-1.775-.612l-.162-.14-.86-.801c-.051-.048-.161-.057-.237-.028z"
      }
    })]);
  }
};

function ownKeys$2y(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2y(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2y(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2y(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var warningFill = {
  name: 'IconWarningFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2y({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 13.5a1.25 1.25 0 100 2.5 1.25 1.25 0 000-2.5zm.22-9.5h-.44a1 1 0 00-.996.913l-.004.116.191 6.5a1 1 0 00.886.965l.114.006h.058a1 1 0 00.99-.857l.01-.114.19-6.5A1 1 0 0012.22 6z"
      }
    })]);
  }
};

function ownKeys$2z(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2z(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2z(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2z(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var warningStroke = {
  name: 'IconWarningStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2z({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 2a8 8 0 100 16 8 8 0 000-16zm0 11.5a1.25 1.25 0 110 2.5 1.25 1.25 0 010-2.5zm.22-9.5a1 1 0 011 1.03l-.191 6.5a1 1 0 01-1 .97h-.058a1 1 0 01-1-.97l-.19-6.5A1 1 0 0111.78 6h.44z"
      }
    })]);
  }
};

function ownKeys$2A(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2A(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2A(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2A(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var warningTri = {
  name: 'IconWarningTri',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2A({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12.447 3.11a1 1 0 01.447.448l8.002 15.995A1 1 0 0120.002 21H3.998a1 1 0 01-.894-1.447l8.002-15.995a1 1 0 011.341-.447zM12 17a1.25 1.25 0 100 2.5 1.25 1.25 0 000-2.5zm.22-9.5h-.47a1 1 0 00-.966.913l-.004.116.191 6.5a1 1 0 00.886.965l.114.006h.058a1 1 0 00.99-.857l.01-.114.19-6.5.001-.029a1 1 0 00-1-1z"
      }
    })]);
  }
};

function ownKeys$2B(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2B(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2B(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2B(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var water = {
  name: 'IconWater',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2B({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M20.218 16.384a1 1 0 011.576 1.23c-1.334 1.71-3.301 2.349-5.306 2.349-.75 0-1.504-.131-2.232-.405-.954-.36-1.821-.83-2.81-1.53-.01-.006-.015-.017-.024-.023-.846-.596-1.547-.98-2.338-1.276-1.855-.697-4.005-.071-5.297 1.587a.995.995 0 01-1.402.173.999.999 0 01-.173-1.403c1.833-2.35 4.899-3.235 7.575-2.23.953.359 1.82.83 2.81 1.53.01.007.014.017.023.024.846.595 1.547.978 2.339 1.276 1.853.695 3.967.355 5.26-1.302h-.001zm0-10.447a1 1 0 011.576 1.23c-1.334 1.71-3.301 2.35-5.306 2.35-.75 0-1.504-.132-2.232-.406-.954-.36-1.821-.83-2.81-1.53-.01-.006-.015-.017-.024-.023-.846-.596-1.547-.98-2.338-1.276-1.855-.697-4.005-.07-5.297 1.587a.995.995 0 01-1.402.173.999.999 0 01-.173-1.403c1.833-2.35 4.899-3.235 7.575-2.23.953.359 1.82.83 2.81 1.53.01.007.014.017.023.024.846.595 1.547.978 2.339 1.276 1.853.695 3.967.355 5.26-1.302h-.001zm0 5.223a1 1 0 011.576 1.23c-1.334 1.71-3.301 2.35-5.306 2.35-.75 0-1.504-.132-2.232-.406-.954-.36-1.821-.83-2.81-1.53-.01-.006-.015-.017-.024-.023-.846-.596-1.547-.98-2.338-1.276-1.855-.697-4.005-.07-5.297 1.588a.995.995 0 01-1.402.173.999.999 0 01-.173-1.403c1.833-2.35 4.899-3.236 7.575-2.23.953.358 1.82.83 2.81 1.53.01.006.014.016.023.023.846.595 1.547.978 2.339 1.276 1.853.695 3.967.355 5.26-1.302h-.001z"
      }
    })]);
  }
};

function ownKeys$2C(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2C(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2C(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2C(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var wilderness = {
  name: 'IconWilderness',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2C({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12.707 2.293A.997.997 0 0113 3v1a3 3 0 003 3h1a1 1 0 010 2h-1a4.978 4.978 0 01-3-1 3 3 0 003 3h2a1 1 0 110 2h-2a4.978 4.978 0 01-3-1 3 3 0 003 3h3a1 1 0 110 2h-3a4.978 4.978 0 01-3-1v5a1 1 0 01-2 0v-5c-.836.628-1.874 1-3 1H5a1 1 0 010-2h3a3 3 0 003-3c-.836.628-1.874 1-3 1H6a1 1 0 010-2h2a3 3 0 003-3c-.836.628-1.874 1-3 1H7a1 1 0 110-2h1a3 3 0 003-3V3a1 1 0 011.707-.707z"
      }
    })]);
  }
};

function ownKeys$2D(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2D(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2D(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2D(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var xFill = {
  name: 'IconXFill',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2D({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zM7.293 7.296a1 1 0 000 1.414l3.285 3.295-3.285 3.288a1 1 0 001.414 1.415l3.285-3.289 3.297 3.289a1 1 0 001.414-1.415l-3.297-3.287 3.297-3.296a1 1 0 10-1.414-1.414l-3.297 3.295-3.285-3.295a1 1 0 00-1.414 0z"
      }
    })]);
  }
};

function ownKeys$2E(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2E(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2E(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2E(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var IconXLg = {
  name: 'IconXLg',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2E({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13.415 12.006l5.295-5.292a1 1 0 00-1.414-1.415L12 10.591 6.71 5.296A1 1 0 005.295 6.71l5.292 5.295-5.295 5.292a1 1 0 101.414 1.414l5.295-5.292 5.292 5.295a1 1 0 001.414-1.414l-5.292-5.294z"
      }
    })]);
  }
};

function ownKeys$2F(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2F(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2F(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2F(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var xSm = {
  name: 'IconXSm',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2F({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M13.406 12.006l3.297-3.296a1 1 0 10-1.414-1.414l-3.297 3.295-3.285-3.295A1 1 0 107.293 8.71l3.285 3.295-3.285 3.288a1 1 0 001.414 1.415l3.285-3.289 3.297 3.289a1 1 0 001.414-1.415l-3.297-3.287z"
      }
    })]);
  }
};

function ownKeys$2G(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2G(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2G(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2G(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var xStroke = {
  name: 'IconXStroke',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2G({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16zm1.406-7.998l3.297-3.295a1 1 0 10-1.414-1.414l-3.297 3.295-3.285-3.295a1 1 0 00-1.414 1.414l3.285 3.294-3.285 3.289a1 1 0 001.414 1.414l3.285-3.288 3.297 3.288a1 1 0 001.414-1.414l-3.297-3.288z"
      }
    })]);
  }
};

function ownKeys$2H(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2H(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2H(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2H(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var youtube = {
  name: 'IconYoutube',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2H({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M18.941 5.225s1.716.06 2.387 1.336c0 0 .67.925.67 5.439v.041c.004.352.018 2.86-.277 4.239-.318 1.485-1.02 1.92-1.02 1.92s-.45.433-1.443.551c-.993.119-4.213.249-7.273.249 0 0-5.603-.003-7.49-.313-1.82-.298-2.13-1.936-2.15-2.052l-.01-.06c-.084-.514-.715-4.683.008-9.198 0 0 .224-1.926 2.479-2.152 0 0 2.318-.213 6.795-.225h.368c4.717 0 6.956.225 6.956.225zM9.925 9.143v5.495l5.469-2.747-5.469-2.748z"
      }
    })]);
  }
};

function ownKeys$2I(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2I(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2I(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2I(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var zoomIn = {
  name: 'IconZoomIn',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2I({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M10.5 3a7.5 7.5 0 015.963 12.05l4.247 4.242a1 1 0 01-1.415 1.414l-4.246-4.243A7.5 7.5 0 1110.5 3zm0 2a5.5 5.5 0 100 11 5.5 5.5 0 000-11zm0 1.5a.75.75 0 01.75.75v2.5h2.5a.75.75 0 110 1.5h-2.5v2.5a.75.75 0 11-1.5 0v-2.5h-2.5a.75.75 0 110-1.5h2.5v-2.5a.75.75 0 01.75-.75z"
      }
    })]);
  }
};

function ownKeys$2J(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2J(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2J(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2J(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var zoomOut = {
  name: 'IconZoomOut',
  components: {
    CdrIcon: CdrIcon
  },
  extends: CdrIcon,
  render: function render() {
    var h = arguments[0];
    return h("cdr-icon", {
      "props": _objectSpread$2J({}, this.$props)
    }, [this.$slots.default, h("path", {
      "attrs": {
        "d": "M20.706 19.296a1 1 0 01-1.414 1.414l-4.243-4.247a7.5 7.5 0 111.414-1.414l4.243 4.247zM10.5 16a5.5 5.5 0 100-11 5.5 5.5 0 000 11zM7.25 9.75h6.5a.75.75 0 110 1.5h-6.5a.75.75 0 110-1.5z"
      }
    })]);
  }
};

var style$b = {"cdr-image":"cdr-image_4.0.3","cdr-image--responsive":"cdr-image--responsive_4.0.3","cdr-image--rounded":"cdr-image--rounded_4.0.3","cdr-image--circle":"cdr-image--circle_4.0.3","cdr-media-frame":"cdr-media-frame_4.0.3","cdr-media-frame--auto":"cdr-media-frame--auto_4.0.3","cdr-media-frame--square":"cdr-media-frame--square_4.0.3","cdr-media-frame--1-2":"cdr-media-frame--1-2_4.0.3","cdr-media-frame--2-3":"cdr-media-frame--2-3_4.0.3","cdr-media-frame--3-4":"cdr-media-frame--3-4_4.0.3","cdr-media-frame--9-16":"cdr-media-frame--9-16_4.0.3","cdr-media-frame--2-1":"cdr-media-frame--2-1_4.0.3","cdr-media-frame--3-2":"cdr-media-frame--3-2_4.0.3","cdr-media-frame--4-3":"cdr-media-frame--4-3_4.0.3","cdr-media-frame--16-9":"cdr-media-frame--16-9_4.0.3","cdr-media-frame--auto@sm":"cdr-media-frame--auto@sm_4.0.3","cdr-media-frame--square@sm":"cdr-media-frame--square@sm_4.0.3","cdr-media-frame--1-2@sm":"cdr-media-frame--1-2@sm_4.0.3","cdr-media-frame--2-3@sm":"cdr-media-frame--2-3@sm_4.0.3","cdr-media-frame--3-4@sm":"cdr-media-frame--3-4@sm_4.0.3","cdr-media-frame--9-16@sm":"cdr-media-frame--9-16@sm_4.0.3","cdr-media-frame--2-1@sm":"cdr-media-frame--2-1@sm_4.0.3","cdr-media-frame--3-2@sm":"cdr-media-frame--3-2@sm_4.0.3","cdr-media-frame--4-3@sm":"cdr-media-frame--4-3@sm_4.0.3","cdr-media-frame--16-9@sm":"cdr-media-frame--16-9@sm_4.0.3","cdr-media-frame--auto@md":"cdr-media-frame--auto@md_4.0.3","cdr-media-frame--square@md":"cdr-media-frame--square@md_4.0.3","cdr-media-frame--1-2@md":"cdr-media-frame--1-2@md_4.0.3","cdr-media-frame--2-3@md":"cdr-media-frame--2-3@md_4.0.3","cdr-media-frame--3-4@md":"cdr-media-frame--3-4@md_4.0.3","cdr-media-frame--9-16@md":"cdr-media-frame--9-16@md_4.0.3","cdr-media-frame--2-1@md":"cdr-media-frame--2-1@md_4.0.3","cdr-media-frame--3-2@md":"cdr-media-frame--3-2@md_4.0.3","cdr-media-frame--4-3@md":"cdr-media-frame--4-3@md_4.0.3","cdr-media-frame--16-9@md":"cdr-media-frame--16-9@md_4.0.3","cdr-media-frame--auto@lg":"cdr-media-frame--auto@lg_4.0.3","cdr-media-frame--square@lg":"cdr-media-frame--square@lg_4.0.3","cdr-media-frame--1-2@lg":"cdr-media-frame--1-2@lg_4.0.3","cdr-media-frame--2-3@lg":"cdr-media-frame--2-3@lg_4.0.3","cdr-media-frame--3-4@lg":"cdr-media-frame--3-4@lg_4.0.3","cdr-media-frame--9-16@lg":"cdr-media-frame--9-16@lg_4.0.3","cdr-media-frame--2-1@lg":"cdr-media-frame--2-1@lg_4.0.3","cdr-media-frame--3-2@lg":"cdr-media-frame--3-2@lg_4.0.3","cdr-media-frame--4-3@lg":"cdr-media-frame--4-3@lg_4.0.3","cdr-media-frame--16-9@lg":"cdr-media-frame--16-9@lg_4.0.3","cdr-media-frame--x-center":"cdr-media-frame--x-center_4.0.3","cdr-media-frame__cover":"cdr-media-frame__cover_4.0.3","cdr-media-frame--y-center":"cdr-media-frame--y-center_4.0.3","cdr-media-frame--left":"cdr-media-frame--left_4.0.3","cdr-media-frame--right":"cdr-media-frame--right_4.0.3","cdr-media-frame--top":"cdr-media-frame--top_4.0.3","cdr-media-frame--bottom":"cdr-media-frame--bottom_4.0.3","cdr-media-frame__image":"cdr-media-frame__image_4.0.3","cdr-media-frame__image--hidden":"cdr-media-frame__image--hidden_4.0.3","cdr-media-frame__cover--crop":"cdr-media-frame__cover--crop_4.0.3","cdr-media-frame__cover--cover":"cdr-media-frame__cover--cover_4.0.3"};

function ownKeys$2K(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2K(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context7; _forEachInstanceProperty(_context7 = ownKeys$2K(Object(source), true)).call(_context7, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context8; _forEachInstanceProperty(_context8 = ownKeys$2K(Object(source))).call(_context8, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var CdrImg = {
  name: 'CdrImg',
  mixins: [modifier],
  props: {
    /**
     * Required. Image source url.
     */
    src: {
      type: String,
      required: true
    },

    /**
     * Required. Image alt text.
     */
    alt: {
      type: String,
      default: ''
    },

    /**
     * Enable lazy loading.
     */
    lazy: {
      type: Boolean
    },

    /**
     * Object of lazy options
     */
    lazyOpts: {
      type: Object,
      default: function _default() {}
    },

    /**
     * Aspect ratio of the media container. {auto, square, 1-2, 2-3, 3-4, 9-16, 2-1, 3-2, 4-3, 16-9}
     */
    ratio: {
      type: String,
      validator: function validator(value) {
        var _context;

        return _indexOfInstanceProperty(_context = ['auto', 'square', '1-2', '2-3', '3-4', '9-16', '2-1', '3-2', '4-3', '16-9']).call(_context, value) >= 0 || false;
      }
    },

    /**
     * sm breakpoint and above
     */
    ratioSm: {
      type: String,
      validator: function validator(value) {
        var _context2;

        return _indexOfInstanceProperty(_context2 = ['auto', 'square', '1-2', '2-3', '3-4', '9-16', '2-1', '3-2', '4-3', '16-9']).call(_context2, value) >= 0 || false;
      }
    },

    /**
     * md breakpoint and above
     */
    ratioMd: {
      type: String,
      validator: function validator(value) {
        var _context3;

        return _indexOfInstanceProperty(_context3 = ['auto', 'square', '1-2', '2-3', '3-4', '9-16', '2-1', '3-2', '4-3', '16-9']).call(_context3, value) >= 0 || false;
      }
    },

    /**
     * lg breakpoint and above
     */
    ratioLg: {
      type: String,
      validator: function validator(value) {
        var _context4;

        return _indexOfInstanceProperty(_context4 = ['auto', 'square', '1-2', '2-3', '3-4', '9-16', '2-1', '3-2', '4-3', '16-9']).call(_context4, value) >= 0 || false;
      }
    },

    /**
     * Requires a `ratio`. Area to crop the image overflow to. {top, y-center, bottom} {left, x-center, right}
     */
    crop: {
      type: String
    },

    /**
     * Requires a `ratio`. Scale the image to be as large as possible to fill the area (background-position: cover;)
     */
    cover: {
      type: Boolean
    },

    /**
     * Sets a border radius to an element {square, top, right, bottom, left}
     */
    radius: {
      type: String,
      validator: function validator(value) {
        var _context5;

        return _indexOfInstanceProperty(_context5 = ['circle', 'rounded']).call(_context5, value) >= 0 || false;
      }
    }
  },
  data: function data() {
    return {
      style: style$b
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-image';
    },
    lazyClass: function lazyClass() {
      var classObj = {};
      classObj['lazy-image'] = this.lazy;
      return classObj;
    },
    radiusClass: function radiusClass() {
      var classObj = {};
      classObj[this.style["cdr-image--".concat(this.radius)]] = this.radius;
      return classObj;
    },
    ratioClass: function ratioClass() {
      var classObj = {};
      classObj[this.style["cdr-media-frame--".concat(this.ratio)]] = this.ratio;
      classObj[this.style["cdr-media-frame--".concat(this.ratioSm, "@sm")]] = this.ratioSm;
      classObj[this.style["cdr-media-frame--".concat(this.ratioMd, "@md")]] = this.ratioMd;
      classObj[this.style["cdr-media-frame--".concat(this.ratioLg, "@lg")]] = this.ratioLg;
      return classObj;
    },
    coverClass: function coverClass() {
      var classObj = {};
      classObj[this.style['cdr-media-frame__cover']] = true;
      classObj[this.style['cdr-media-frame__cover--crop']] = this.crop;
      classObj[this.style['cdr-media-frame__cover--cover']] = this.cover;
      return classObj;
    },
    cropClass: function cropClass() {
      var _this = this;

      var base = 'cdr-media-frame';
      var cropArr = this.crop ? this.crop.split(' ') : [];
      var final = [];
      final = _concatInstanceProperty(final).call(final, _mapInstanceProperty(cropArr).call(cropArr, function (mod) {
        return _this.modifyClassName(base, mod);
      }));
      return final.join(' ');
    },
    styleObject: function styleObject() {
      return {
        backgroundImage: "url(".concat(this.src, ")")
      };
    },
    lazyAttrs: function lazyAttrs() {
      var _this2 = this;

      var attrObj = {};

      if (this.lazy) {
        var _context6;

        _forEachInstanceProperty(_context6 = _Object$keys(this.lazyOpts)).call(_context6, function (opt) {
          attrObj["data-".concat(opt)] = _this2.lazyOpts[opt];
        });
      }

      return attrObj;
    }
  },
  render: function render() {
    var h = arguments[0];

    if (this.ratio) {
      return h("div", {
        "class": clsx(this.style['cdr-media-frame'], this.ratioClass, this.cropClass)
      }, [h("div", {
        "class": clsx(this.coverClass, this.lazyClass, this.radiusClass),
        "style": this.styleObject,
        "attrs": _objectSpread$2K({
          "aria-hidden": "true"
        }, this.lazyAttrs)
      }), h("img", {
        "class": clsx(this.style['cdr-media-frame__image'], this.style['cdr-media-frame__image--hidden'], this.style[this.baseClass], this.modifierClass, this.radiusClass),
        "attrs": {
          "src": this.src,
          "alt": this.alt
        }
      })]);
    }

    return h("img", {
      "class": clsx(this.style[this.baseClass], this.modifierClass, this.radiusClass, this.lazyClass),
      "attrs": _objectSpread$2K({
        "src": this.src,
        "alt": this.alt
      }, this.lazyAttrs)
    });
  }
};

var style$c = {"cdr-input__label":"cdr-input__label_4.0.3","cdr-input__label--disabled":"cdr-input__label--disabled_4.0.3","cdr-input":"cdr-input_4.0.3","cdr-input--multiline":"cdr-input--multiline_4.0.3","cdr-input--preicon":"cdr-input--preicon_4.0.3","cdr-input--large":"cdr-input--large_4.0.3","cdr-input--large@xs":"cdr-input--large@xs_4.0.3","cdr-input--large@sm":"cdr-input--large@sm_4.0.3","cdr-input--large@md":"cdr-input--large@md_4.0.3","cdr-input--large@lg":"cdr-input--large@lg_4.0.3","cdr-input__pre-icon":"cdr-input__pre-icon_4.0.3","cdr-input__post-icon":"cdr-input__post-icon_4.0.3","cdr-input__required-label":"cdr-input__required-label_4.0.3","cdr-input__info-container":"cdr-input__info-container_4.0.3","cdr-input__helper-text":"cdr-input__helper-text_4.0.3","cdr-input-wrap":"cdr-input-wrap_4.0.3"};

function ownKeys$2L(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2L(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2L(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2L(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
/**
 * Cedar 2 component for input
 * **NOTE:** `v-model` is required.
 * @version 1.0.0
 * @author [REI Software Engineering](https://rei.github.io/rei-cedar/)
 */

var CdrInput = {
  name: 'CdrInput',
  mixins: [size, space],
  inheritAttrs: false,
  props: {
    /**
     * `id` for the input that is mapped to the label `for` attribute. If one is not provided, it will be auto generated.
    */
    id: String,

    /**
     *  'type' attribute for the input as defined by w3c.  Only supporting text|email|number|password|search|url.
     *  The increment/decrement webkit psuedo element is hidden for number.
     *  See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input for more details.
    */
    type: {
      type: [String],
      default: 'text',
      validator: function validator(value) {
        return validateProp(value, ['text', 'email', 'number', 'password', 'search', 'url']);
      }
    },

    /**
     * Label text. This is required for a11y even if hiding the label with `hideLabel`.
    */
    label: {
      type: String,
      required: true
    },

    /**
     * Removes the label element but sets the input `aria-label` to `label` text for a11y.
    */
    hideLabel: Boolean,

    /**
     * Number of rows for input.  Converts component to text-area if rows greater than 1.
    */
    rows: Number,

    /** @ignore */
    disabled: Boolean,

    /** @ignore */
    required: Boolean,

    /** @ignore */
    value: {
      type: [String, Number]
    }
  },
  data: function data() {
    return {
      style: style$c
    };
  },
  computed: {
    // Use given id or generate one
    inputId: function inputId() {
      return this.id ? this.id : this._uid; // eslint-disable-line no-underscore-dangle
    },
    baseClass: function baseClass() {
      return 'cdr-input';
    },
    labelClass: function labelClass() {
      var _ref;

      return _ref = {}, _defineProperty(_ref, this.style['cdr-input__label'], true), _defineProperty(_ref, this.style['cdr-input__label--disabled'], this.disabled), _ref;
    },
    inputClass: function inputClass() {
      var _ref2;

      return _ref2 = {}, _defineProperty(_ref2, this.style['cdr-input'], true), _defineProperty(_ref2, this.style['cdr-input--multiline'], this.rows > 1), _defineProperty(_ref2, this.style['cdr-input--preicon'], this.$slots['pre-icon']), _ref2;
    },
    inputWrapClass: function inputWrapClass() {
      return _defineProperty({}, this.style['cdr-input-wrap'], true);
    },
    inputListeners: function inputListeners() {
      // https://vuejs.org/v2/guide/components-custom-events.html#Binding-Native-Events-to-Components
      // handles conflict between v-model and v-on="$listeners"
      var vm = this;
      return _Object$assign({}, this.$listeners, {
        input: function input(event) {
          vm.$emit('input', event.target.value);
        }
      });
    },
    labelEl: function labelEl() {
      var h = this.$createElement;
      var requiredEl = this.required ? h("span", {
        "class": this.style['cdr-input__required-label']
      }, ["Required"]) : '';
      return !this.hideLabel ? h("label", {
        "class": this.labelClass,
        "attrs": {
          "for": this.inputId
        },
        "ref": "label"
      }, [this.label, requiredEl]) : '';
    },
    inputEl: function inputEl() {
      var _this = this;

      var h = this.$createElement;

      if (this.rows && this.rows > 1) {
        return h("textarea", _mergeJSXProps([{
          "on": _objectSpread$2L({
            "input": function input($event) {
              if ($event.target.composing) return;
              _this.value = $event.target.value;
            }
          }, this.inputListeners),
          "attrs": _objectSpread$2L({
            "rows": this.rows,
            "id": this.inputId,
            "disabled": this.disabled,
            "required": this.required,
            "aria-label": this.hideLabel ? this.label : null
          }, this.$attrs),
          "class": clsx(this.inputClass, this.sizeClass, this.space),
          "ref": "input",
          "domProps": {
            "value": _this.value
          }
        }, {
          directives: [{
            name: "model",
            value: _this.value,
            modifiers: {}
          }]
        }]));
      }

      return h("input", _mergeJSXProps([{
        "on": _objectSpread$2L({
          "input": function input($event) {
            if ($event.target.composing) return;
            _this.value = $event.target.value;
          }
        }, this.inputListeners),
        "attrs": _objectSpread$2L({
          "type": this.type,
          "id": this.inputId,
          "disabled": this.disabled,
          "required": this.required,
          "aria-label": this.hideLabel ? this.label : null
        }, this.$attrs),
        "class": clsx(this.inputClass, this.sizeClass, this.space),
        "ref": "input",
        "domProps": {
          "value": _this.value
        }
      }, {
        directives: [{
          name: "model",
          value: _this.value,
          modifiers: {}
        }]
      }]));
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("div", {
      "class": this.style['cdr-input-container']
    }, [this.labelEl, this.$slots.info && h("span", {
      "class": this.style['cdr-input__info-container']
    }, [this.$slots.info]), h("div", {
      "class": this.inputWrapClass
    }, [this.inputEl, this.$slots['pre-icon'] && h("span", {
      "class": this.style['cdr-input__pre-icon']
    }, [this.$slots['pre-icon']]), this.$slots['post-icon'] && h("span", {
      "class": this.style['cdr-input__post-icon']
    }, [this.$slots['post-icon']])]), this.$slots['helper-text'] && h("span", {
      "class": this.style['cdr-input__helper-text']
    }, [this.$slots['helper-text']])]);
  }
};

var style$d = {"cdr-link":"cdr-link_4.0.3","cdr-link--standalone":"cdr-link--standalone_4.0.3"};

function ownKeys$2M(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2M(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2M(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2M(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var CdrLink = {
  name: 'CdrLink',
  mixins: [modifier, space],
  props: {
    tag: {
      type: String,
      default: 'a'
    },
    href: {
      type: String,
      default: '#'
    },

    /** @ignore */
    target: String,

    /** @ignore */
    rel: String
  },
  data: function data() {
    return {
      style: style$d
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-link';
    },
    computedRel: function computedRel() {
      if (this.target === '_blank') {
        return this.rel || 'noopener noreferrer';
      }

      return this.rel;
    }
  },
  render: function render() {
    var h = arguments[0];
    var Component = this.tag;
    return h(Component, {
      "class": clsx(this.style[this.baseClass], this.modifierClass, this.space),
      "attrs": {
        "target": this.target,
        "rel": this.computedRel,
        "href": this.tag === 'a' ? this.href : null
      },
      "on": _objectSpread$2M({}, this.$listeners)
    }, [this.$slots.default]);
  }
};

var contentPriority = {
  mixins: [BuildClass],
  props: {
    contentPriority: {
      type: String,
      default: 'primary',
      validator: function validator(value) {
        var _context;

        return _indexOfInstanceProperty(_context = ['primary', 'secondary', 'tertiary']).call(_context, value) >= 0 || false;
      }
    }
  },
  computed: {
    contentPriorityClass: function contentPriorityClass() {
      return this.buildClass('contentPriority');
    }
  }
};

var style$e = {"cdr-list":"cdr-list_4.0.3","cdr-list--compact":"cdr-list--compact_4.0.3","cdr-list--ordered":"cdr-list--ordered_4.0.3","cdr-list--unordered":"cdr-list--unordered_4.0.3","cdr-list--inline":"cdr-list--inline_4.0.3"};

var CdrList = {
  name: 'CdrList',
  mixins: [modifier, space, contentPriority],
  props: {
    /**
     * Tag accepts a user defined element and expects either: 'ul' = Unordered List or 'ol' = Ordered List.
     */
    tag: {
      type: String,
      default: 'ul',
      validator: function validator(value) {
        var _context;

        return _indexOfInstanceProperty(_context = ['ul', 'ol']).call(_context, value) >= 0 || false;
      }
    }
  },
  data: function data() {
    return {
      style: style$e
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-list';
    }
  },
  render: function render() {
    var h = arguments[0];
    var Component = this.tag;
    return h(Component, {
      "class": clsx(this.style[this.baseClass], this.modifierClass, this.space, this.contentPriorityClass)
    }, [this.$slots.default]);
  }
};

var style$f = {"cdr-modal":"cdr-modal_4.0.3","cdr-modal__overlay":"cdr-modal__overlay_4.0.3","cdr-modal__outerWrap":"cdr-modal__outerWrap_4.0.3","cdr-modal__contentWrap":"cdr-modal__contentWrap_4.0.3","cdr-modal__innerWrap":"cdr-modal__innerWrap_4.0.3","cdr-modal__dialog":"cdr-modal__dialog_4.0.3","cdr-modal__content":"cdr-modal__content_4.0.3","cdr-modal__header":"cdr-modal__header_4.0.3","cdr-modal__title":"cdr-modal__title_4.0.3","cdr-modal__close-button":"cdr-modal__close-button_4.0.3","cdr-modal__text":"cdr-modal__text_4.0.3","cdr-modal__text-content":"cdr-modal__text-content_4.0.3","cdr-modal__text-fade":"cdr-modal__text-fade_4.0.3","closed":"closed_4.0.3","cdr-modal__noscroll":"cdr-modal__noscroll_4.0.3"};

/* eslint-env browser */
var transitions = {
  transition: 'transitionend',
  WebkitTransition: 'webkitTransitionEnd',
  MozTransition: 'transitionend',
  OTransition: 'oTransitionEnd otransitionend'
};
var transitionEvent;

if (typeof document !== 'undefined') {
  var _document$createEleme = document.createElement('div'),
      style$g = _document$createEleme.style;

  var keys = _Object$keys(transitions);

  for (var i = 0, key = keys[i]; i < keys.length; i += 1, key = keys[i]) {
    if (key in style$g) {
      transitionEvent = transitions[key];
      break;
    }
  }
}

var onTransitionEnd = (function (element, callback, timeout) {
  element.addEventListener(transitionEvent, callback);
  var timeoutId;

  if (timeout) {
    // console.log('onTransitionEnd timeout', timeout);
    timeoutId = _setTimeout(function () {
      element.removeEventListener(transitionEvent, callback);
      callback();
    }, timeout);
  }

  return function () {
    clearTimeout(timeoutId);
    element.removeEventListener(transitionEvent, callback);
  };
});

/**
 * Cedar 2 component for text styles
 * Accepts typography modifiers.
 * @version 0.0.1
 * @author [REI Software Engineering](https://rei.github.io/rei-cedar/)
 */

var CdrText = {
  name: 'CdrText',
  mixins: [modifier, space],
  props: {
    /** Any valid HTML tag */
    tag: {
      type: String,
      default: 'p'
    }
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-text';
    }
  },
  render: function render() {
    var h = arguments[0];
    var Component = this.tag;
    return h(Component, {
      "class": clsx(this.baseClass, this.modifierClass, this.space)
    }, [this.$slots.default]);
  }
};

function ownKeys$2N(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2N(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context4; _forEachInstanceProperty(_context4 = ownKeys$2N(Object(source), true)).call(_context4, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context5; _forEachInstanceProperty(_context5 = ownKeys$2N(Object(source))).call(_context5, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var CdrModal = {
  name: 'CdrModal',
  components: {
    CdrButton: CdrButton,
    IconXLg: IconXLg,
    CdrText: CdrText
  },
  mixins: [size],
  props: {
    opened: {
      type: Boolean,
      required: true
    },
    label: {
      type: String,
      required: true
    },
    showTitle: {
      type: Boolean,
      required: false,
      default: true
    },
    ariaDescribedbBy: {
      type: String,
      required: false,
      default: null
    },
    id: {
      type: String,
      required: false,
      default: null
    },
    overlayClass: String,
    wrapperClass: String,
    contentClass: String,
    animationDuration: {
      type: Number,
      default: 300
    }
  },
  data: function data() {
    return {
      style: style$f,
      unsubscribe: null,
      keyHandler: null,
      lastActive: null,
      focusHandler: null,
      reallyClosed: !this.opened,
      offset: null
    };
  },
  computed: {
    dialogAttrs: function dialogAttrs() {
      return {
        'aria-describedby': this.ariaDescribedBy,
        'aria-modal': 'true',
        id: this.id
      };
    },
    dialogClass: function dialogClass() {
      var _context;

      return _concatInstanceProperty(_context = "".concat(this.style['cdr-modal__dialog'], " ")).call(_context, this.size);
    }
  },
  watch: {
    opened: function opened(newValue, oldValue) {
      if (!!newValue === !!oldValue) return;

      if (newValue) {
        this.handleOpened();
      } else {
        this.handleClosed();
      }
    }
  },
  mounted: function mounted() {
    if (this.opened) {
      this.addNoScroll();
      this.addHandlers();
    }
  },
  beforeDestroy: function beforeDestroy() {
    if (this.unsubscribe) this.unsubscribe();
    if (this.opened) this.removeNoScroll();
    document.removeEventListener('focusin', this.focusHandler, true);
    document.removeEventListener('keydown', this.keyHandler);
  },
  methods: {
    handleKeyDown: function handleKeyDown(_ref) {
      var key = _ref.key;

      switch (key) {
        case 'Escape':
        case 'Esc':
          this.onClick();
          break;
      }
    },
    handleFocus: function handleFocus(e) {
      var _document = document,
          documentElement = _document.documentElement;
      if (this.$refs.modal.contains(e.target) || !documentElement) return;
      var tabbables = tabbable(documentElement);
      var these = tabbable(this.$refs.modal);

      var nextIx = _indexOfInstanceProperty(tabbables).call(tabbables, e.target);

      var firstModalIx = _indexOfInstanceProperty(tabbables).call(tabbables, these[0]);

      var nextRef = nextIx < firstModalIx ? these[these.length - 1] : these[0];
      if (nextRef) nextRef.focus();
      documentElement.scrollTop = this.scrollTop;
      documentElement.scrollLeft = this.scrollLeft;
    },
    handleOpened: function handleOpened() {
      var _this = this;

      var _document2 = document,
          activeElement = _document2.activeElement;
      this.addNoScroll();
      this.reallyClosed = false;
      this.lastActive = activeElement;
      this.$nextTick(function () {
        _this.$refs.modal.focus();

        _this.addHandlers();

        _setTimeout(function () {
          // for some reason Safari scrolls the wrapper down a bit?
          // doesn't work without setTimeout for some unknown reason
          _this.$refs.wrapper.scrollTop = 0;
        });
      });
    },
    handleClosed: function handleClosed() {
      var _this2 = this;

      document.removeEventListener('keydown', this.keyHandler);
      this.unsubscribe = onTransitionEnd(this.$refs.wrapper, function () {
        _this2.unsubscribe();

        _this2.removeNoScroll();

        _this2.unsubscribe = null;
        _this2.reallyClosed = true; // restore previous scroll position

        window.scrollTo(_this2.offset.x, _this2.offset.y);
        document.removeEventListener('focusin', _this2.focusHandler, true);
        if (_this2.lastActive) _this2.lastActive.focus();
      }, this.animationDuration + 16);
    },
    addNoScroll: function addNoScroll() {
      var _document3 = document,
          documentElement = _document3.documentElement,
          body = _document3.body;
      var offset = {
        x: window.scrollX || (documentElement || {}).scrollLeft || (body || {}).scrollLeft || 0,
        y: window.scrollY || (documentElement || {}).scrollTop || (body || {}).scrollTop || 0
      };
      this.offset = offset;

      if (documentElement) {
        documentElement.classList.add(style$f['cdr-modal__noscroll']); // keep current scroll position manually

        documentElement.style.top = "-".concat(offset.y, "px");
        documentElement.style.left = "-".concat(offset.x, "px");
      }

      if (body) {
        body.classList.add(style$f['cdr-modal__noscroll']);
      }
    },
    removeNoScroll: function removeNoScroll() {
      var _document4 = document,
          documentElement = _document4.documentElement,
          body = _document4.body;

      if (body) {
        body.classList.remove(style$f['cdr-modal__noscroll']);
      }

      if (documentElement) {
        documentElement.classList.remove(style$f['cdr-modal__noscroll']);
        documentElement.style.top = '';
        documentElement.style.left = '';
      }
    },
    addHandlers: function addHandlers() {
      var _context2, _context3;

      this.focusHandler = _bindInstanceProperty(_context2 = this.handleFocus).call(_context2, this);
      this.keyHandler = _bindInstanceProperty(_context3 = this.handleKeyDown).call(_context3, this);
      document.addEventListener('focusin', this.focusHandler, true);
      document.addEventListener('keydown', this.keyHandler);
    },
    onClick: function onClick(e) {
      this.$emit('closed', e);
    }
  },
  render: function render() {
    var h = arguments[0];
    var onClick = this.onClick,
        modalId = this.modalId,
        opened = this.opened,
        label = this.label,
        wrapperClass = this.wrapperClass,
        overlayClass = this.overlayClass,
        dialogClass = this.dialogClass,
        contentClass = this.contentClass,
        reallyClosed = this.reallyClosed,
        defaultSlot = this.$slots.default;
    return h("div", {
      "class": clsx(this.style['cdr-modal'], _defineProperty({}, this.style.closed, !opened)),
      "ref": "wrapper",
      "attrs": {
        "role": "presentation"
      }
    }, [h("div", {
      "class": clsx(this.style['cdr-modal__outerWrap'], wrapperClass)
    }, [h("div", {
      "attrs": {
        "aria-hidden": "true"
      },
      "on": {
        "click": onClick
      },
      "class": clsx(this.style['cdr-modal__overlay'], overlayClass)
    }), h("div", {
      "attrs": {
        "tabIndex": opened ? '0' : undefined
      }
    }), h("div", {
      "ref": "modal",
      "class": clsx(this.style['cdr-modal__contentWrap'], dialogClass),
      "attrs": _objectSpread$2N({
        "id": modalId,
        "tabIndex": "-1",
        "role": "dialog",
        "aria-modal": !!opened,
        "aria-label": label
      }, this.dialogAttrs || {})
    }, [h("div", {
      "class": clsx(this.style['cdr-modal__innerWrap'], contentClass),
      "style": reallyClosed ? {
        display: 'none'
      } : undefined
    }, [h("section", [h("div", {
      "class": this.style['cdr-modal__content']
    }, [h("div", {
      "class": this.style['cdr-modal__header']
    }, [h("div", {
      "class": this.style['cdr-modal__title']
    }, [this.showTitle && this.$slots.title, this.showTitle && !this.$slots.title && h("cdr-text", {
      "attrs": {
        "tag": "h1",
        "modifier": "heading-serif-600"
      }
    }, [this.label])]), h("cdr-button", {
      "attrs": {
        "id": "close-modal-button",
        "icon-only": true,
        "aria-label": "close"
      },
      "class": this.style['cdr-modal__close-button'],
      "on": {
        "click": onClick
      }
    }, [h(IconXLg, {
      "slot": "icon",
      "class": this.style['cdr-button__icon'],
      "attrs": {
        "inherit-color": true
      }
    })])]), h("div", {
      "attrs": {
        "role": "document",
        "tabindex": "0"
      },
      "class": this.style['cdr-modal__text']
    }, [h("div", {
      "class": this.style['cdr-modal__text-content']
    }, [defaultSlot]), h("div", {
      "class": this.style['cdr-modal__text-fade']
    })])])])])]), h("div", {
      "attrs": {
        "tabIndex": opened ? '0' : undefined
      }
    })])]);
  }
};

var style$h = {"cdr-select":"cdr-select_4.0.3","cdr-select__prompt":"cdr-select__prompt_4.0.3","cdr-select__required-label":"cdr-select__required-label_4.0.3","cdr-select__label":"cdr-select__label_4.0.3","cdr-select__label--large":"cdr-select__label--large_4.0.3","cdr-select__label--disabled":"cdr-select__label--disabled_4.0.3","cdr-select__caret":"cdr-select__caret_4.0.3","cdr-select__caret--disabled":"cdr-select__caret--disabled_4.0.3","cdr-select__info-container":"cdr-select__info-container_4.0.3","cdr-select__helper-text":"cdr-select__helper-text_4.0.3","cdr-select--multiple":"cdr-select--multiple_4.0.3","cdr-select--large@xs":"cdr-select--large@xs_4.0.3","cdr-select--large":"cdr-select--large_4.0.3","cdr-select--large@sm":"cdr-select--large@sm_4.0.3","cdr-select--large@md":"cdr-select--large@md_4.0.3","cdr-select--large@lg":"cdr-select--large@lg_4.0.3","cdr-select-wrap":"cdr-select-wrap_4.0.3"};

function ownKeys$2O(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2O(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context5; _forEachInstanceProperty(_context5 = ownKeys$2O(Object(source), true)).call(_context5, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context6; _forEachInstanceProperty(_context6 = ownKeys$2O(Object(source))).call(_context6, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var CdrSelect = {
  name: 'CdrSelect',
  components: {
    IconCaretDown: IconCaretDown
  },
  mixins: [size, space],
  inheritAttrs: false,
  model: {
    prop: 'value',
    event: 'change'
  },
  props: {
    /**
     * `id` for the select that is mapped to the label `for` attribute. If one is not provided, it will be generated.
    */
    id: String,

    /**
     * Label text. This is required for a11y even if hiding the label with `hideLabel`.
    */
    label: {
      type: String,
      required: true
    },

    /**
     * Removes the label element but sets the select `aria-label` to `label` text for a11y.
    */
    hideLabel: Boolean,

    /**
     * Adds an option that is disabled and selected by default to serve as a `placeholder` for the select.
    */
    prompt: String,

    /**
     * Build options programatically with data. Array of objects [{ text: String, value: String}] to give greater control. Array of strings ['String'] for simpler setup (value and text will be the same).
    */
    options: {
      type: Array
    },

    /** @ignore */
    value: {
      type: [String, Number, Boolean, Object, Array, _Symbol, Function]
    },

    /** @ignore */
    disabled: Boolean,

    /** @ignore */
    required: Boolean,

    /** DEPRECATED */
    multiple: Boolean
  },
  data: function data() {
    return {
      style: style$h
    };
  },
  computed: {
    // Use given id or generate one
    selectId: function selectId() {
      return this.id ? this.id : this._uid; // eslint-disable-line no-underscore-dangle
    },
    baseClass: function baseClass() {
      return 'cdr-select';
    },
    selectClass: function selectClass() {
      var _ref;

      return _ref = {}, _defineProperty(_ref, this.style['cdr-select'], true), _defineProperty(_ref, this.style['cdr-select__prompt'], !this.value), _defineProperty(_ref, this.style['cdr-select--multiple'], this.multiple), _ref;
    },
    labelClass: function labelClass() {
      var _ref2;

      return _ref2 = {}, _defineProperty(_ref2, this.style['cdr-select__label'], true), _defineProperty(_ref2, this.style['cdr-select__label--disabled'], this.disabled), _ref2;
    },
    caretClass: function caretClass() {
      var _ref3;

      return _ref3 = {}, _defineProperty(_ref3, this.style['cdr-select__caret'], true), _defineProperty(_ref3, this.style['cdr-select__caret--disabled'], this.disabled), _ref3;
    },
    selectWrapClass: function selectWrapClass() {
      return _defineProperty({}, this.style['cdr-select-wrap'], true);
    },
    inputListeners: function inputListeners() {
      // https://vuejs.org/v2/guide/components-custom-events.html#Binding-Native-Events-to-Components
      // handles conflict between v-model and v-on="$listeners"
      var vm = this;
      return _Object$assign({}, this.$listeners, {
        change: function change(event) {
          if (vm.multiple) {
            var _context;

            var optArr = toArray(event.target.options);

            var selected = _mapInstanceProperty(_context = _filterInstanceProperty(optArr).call(optArr, function (o) {
              return o.selected === true;
            })).call(_context, function (o) {
              return o.value;
            });

            vm.$emit('change', selected, event);
          } else {
            vm.$emit('change', event.target.value, event);
          }
        }
      });
    },
    selectEl: function selectEl() {
      var _this = this,
          _context3;

      var h = this.$createElement;
      return h("select", _mergeJSXProps([{
        "on": _objectSpread$2O({
          "change": function change($event) {
            var _context2;

            var $$selectedVal = _mapInstanceProperty(_context2 = _filterInstanceProperty(Array.prototype).call($event.target.options, function (o) {
              return o.selected;
            })).call(_context2, function (o) {
              return "_value" in o ? o._value : o.value;
            });

            _this.value = $event.target.multiple ? $$selectedVal : $$selectedVal[0];
          }
        }, this.inputListeners),
        "class": clsx(this.sizeClass, this.selectClass),
        "attrs": _objectSpread$2O({
          "id": this.selectId,
          "multiple": this.multiple,
          "disabled": this.disabled,
          "required": this.required,
          "aria-label": this.hideLabel ? this.label : null
        }, this.$attrs),
        "ref": "select"
      }, {
        directives: [{
          name: "model",
          value: _this.value,
          modifiers: {}
        }]
      }]), [this.prompt && h("option", {
        "class": "cdr-select__prompt",
        "attrs": {
          "value": "",
          "disabled": true
        },
        "ref": "prompt"
      }, [this.prompt]), _mapInstanceProperty(_context3 = this.computedOpts).call(_context3, function (option) {
        return h("option", {
          "key": option.text,
          "domProps": {
            "value": option.value
          }
        }, [option.text]);
      }), this.$slots.default]);
    },
    labelEl: function labelEl() {
      var h = this.$createElement;
      var requiredEl = this.required ? h("span", {
        "class": this.style['cdr-select__required-label']
      }, ["Required"]) : '';
      return !this.hideLabel ? h("label", {
        "class": this.labelClass,
        "attrs": {
          "for": this.selectId
        },
        "ref": "label"
      }, [this.label, ' ', requiredEl]) : '';
    },
    infoEl: function infoEl() {
      var h = this.$createElement;
      return this.$slots.info ? h("span", {
        "class": this.style['cdr-select__info-container']
      }, [this.$slots.info]) : '';
    },
    helperEl: function helperEl() {
      var h = this.$createElement;
      return this.$slots['helper-text'] ? h("span", {
        "class": this.style['cdr-select__helper-text']
      }, [this.$slots['helper-text']]) : '';
    },
    computedOpts: function computedOpts() {
      var optsArr = [];

      if (this.options) {
        var _context4;

        _forEachInstanceProperty(_context4 = this.options).call(_context4, function (o) {
          var optObj = {};
          var text = '';
          var val = '';

          if (typeof o === 'string') {
            text = o;
            val = o;
          } else {
            var t = o.text,
                v = o.value;
            text = t;
            val = v;
          }

          optObj.text = text;
          optObj.value = val;
          optsArr.push(optObj);
        });
      }

      return optsArr;
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("div", {
      "class": clsx(this.space)
    }, [this.labelEl, this.infoEl, h("div", {
      "class": this.selectWrapClass
    }, [this.selectEl, h("icon-caret-down", {
      "class": this.caretClass
    })]), this.helperEl]);
  }
};

var style$i = {"cdr-pagination":"cdr-pagination_4.0.3","cdr-pagination__li--links":"cdr-pagination__li--links_4.0.3","cdr-pagination__li--select":"cdr-pagination__li--select_4.0.3","cdr-pagination__link":"cdr-pagination__link_4.0.3","cdr-pagination__link--disabled":"cdr-pagination__link--disabled_4.0.3","cdr-pagination__ellipse":"cdr-pagination__ellipse_4.0.3","cdr-pagination__prev":"cdr-pagination__prev_4.0.3","cdr-pagination__next":"cdr-pagination__next_4.0.3","cdr-pagination__caret--prev":"cdr-pagination__caret--prev_4.0.3","cdr-pagination__caret--next":"cdr-pagination__caret--next_4.0.3"};

function ownKeys$2P(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2P(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context19; _forEachInstanceProperty(_context19 = ownKeys$2P(Object(source), true)).call(_context19, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context20; _forEachInstanceProperty(_context20 = ownKeys$2P(Object(source))).call(_context20, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var CdrPagination = {
  name: 'CdrPagination',
  components: {
    IconCaretLeft: IconCaretLeft,
    IconCaretRight: IconCaretRight,
    CdrSelect: CdrSelect
  },
  model: {
    prop: 'value',
    event: 'update-pagination'
  },
  props: {
    /**
     * Total number of pages. Sometimes the total number of pages is different than total page data
     * and this prop allows for that.
     */
    totalPages: {
      type: Number,
      default: null
    },

    /**
     * Array of objects. Objects have structure of { page: Number, url: String }
     */
    pages: {
      type: Array,
      required: true,
      validator: function validator(value) {
        var result = _everyInstanceProperty(value).call(value, function (obj) {
          if (!Object.prototype.hasOwnProperty.call(obj, 'page') || typeof obj.page !== 'number') {
            console.error('Property "page" is missing or is not a number', obj); // eslint-disable-line

            return false;
          }

          if (!Object.prototype.hasOwnProperty.call(obj, 'url') || typeof obj.url !== 'string') {
            console.error('Property "url" is missing or is not a string', obj); // eslint-disable-line

            return false;
          }

          return true;
        });

        return result;
      }
    },

    /** @ignore used for binding v-model, represents the current page */
    value: {
      type: Number
    }
  },
  data: function data() {
    return {
      style: style$i,
      componentID: Math.random().toString(36).substr(2, 9),
      currentIdx: 0
    };
  },
  computed: {
    // track value internally (for use with select vmodel) and update external value when internal changes
    innerValue: {
      get: function get() {
        return this.value;
      },
      set: function set(newValue) {
        this.setCurrentIdx(newValue);
        this.$emit('update-pagination', newValue);
      }
    },
    currentUrl: function currentUrl() {
      return this.pages[this.currentIdx].url;
    },
    totalPageData: function totalPageData() {
      return this.pages.length;
    },
    prevPageIdx: function prevPageIdx() {
      return this.currentIdx - 1;
    },
    nextPageIdx: function nextPageIdx() {
      return this.currentIdx + 1;
    },

    /**
     * Creates an array of the pages that should be shown as links with logic for truncation.
     *
     * If total = 20 ([#] indicates current page)
     * [1] 2 3 4 5 ... 20
     * 1 2 3 [4] 5 ... 20
     * 1 ... 4 [5] 6 ... 20
     * 1 ... 15 [16] 17 ... 20
     * 1 ... 16 [17] 18 19 20
     *
     * If total 5 (or anything <= 7)
     * [1] 2 3 4 5
     * 1 2 [3] 4 5
     * 1 2 3 4 [5]
     *
     * Degrades for prev/next only scenario
     * urls = {"4": "url4", "5": "url5", "6": "url6"} (assuming current page is 5)
     * 4 [5] 6
     */
    paginationData: function paginationData() {
      var total = this.totalPageData;
      var current = this.innerValue;
      var delta = 1;
      var range = [];
      var over5 = true;
      var over5remain = true;

      if (total <= 7) {
        // all pages
        return this.pages;
      }

      if (current < 5) {
        var _context;

        // if first 5 pages
        over5 = false; // [2-5]

        range = _sliceInstanceProperty(_context = this.pages).call(_context, 1, 5);
      } else if (total - current < 4) {
        var _context2;

        // if last 5 pages
        over5remain = false;
        range = _sliceInstanceProperty(_context2 = this.pages).call(_context2, -5, -1);
      } else {
        // else in between
        for (var i = Math.max(2, current - delta); i <= Math.min(total - 1, current + delta); i += 1) {
          range.push(this.pages[i - 1]);
        }
      }

      if (current - delta > 2 && over5) {
        range.unshift('&hellip;');
      }

      if (current + delta < total - 1 && over5remain) {
        range.push('&hellip;');
      }

      range.unshift(this.pages[0]);
      range.push(this.pages[total - 1]);
      return range;
    },
    prevElAttrs: function prevElAttrs() {
      var _this = this;

      var prevPageData = this.pages[this.prevPageIdx];
      return {
        // things that we want to be able to easily bulk bind to scoped slot (for a11y, styling, etc.)
        attrs: {
          class: clsx(this.style['cdr-pagination__link'], this.style['cdr-pagination__prev']),
          'aria-label': 'Go to previous Page',
          ref: "prev-link-".concat(this.componentID)
        },
        // The rest of this is available for binding if needed by user (i.e. optional with vue-router)
        href: prevPageData === undefined ? null : prevPageData.url,
        page: prevPageData === undefined ? null : prevPageData.page,
        content: 'Prev',
        iconClass: this.style['cdr-pagination__caret--prev'],
        iconComponent: 'icon-caret-left',
        iconPath: '#caret-left',
        click: function click(e) {
          return _this.navigate(prevPageData.page, e);
        }
      };
    },
    prevEl: function prevEl() {
      var h = this.$createElement;
      return this.innerValue > this.pages[0].page ? h("li", [this.$scopedSlots.prevLink ? this.$scopedSlots.prevLink(this.prevElAttrs) : h("a", {
        "attrs": _objectSpread$2P({}, this.prevElAttrs.attrs, {
          "href": this.prevElAttrs.href
        }),
        "ref": this.prevElAttrs.attrs.ref,
        "on": {
          "click": this.prevElAttrs.click
        }
      }, [h(this.prevElAttrs.iconComponent, {
        "class": this.prevElAttrs.iconClass
      }), this.prevElAttrs.content])]) : h("li", {
        "attrs": {
          "aria-hidden": "true"
        }
      }, [h("span", {
        "class": [this.prevElAttrs.attrs.class, clsx(this.style['cdr-pagination__link--disabled'])]
      }, [h(this.prevElAttrs.iconComponent, {
        "class": this.prevElAttrs.iconClass,
        "attrs": {
          "inherit-color": true
        }
      }), this.prevElAttrs.content])]);
    },
    nextElAttrs: function nextElAttrs() {
      var _this2 = this;

      var nextPageData = this.pages[this.nextPageIdx];
      return {
        // things that we want to be able to easily bulk bind to scoped slot (for a11y, styling, etc.)
        attrs: {
          class: clsx(this.style['cdr-pagination__link'], this.style['cdr-pagination__next']),
          'aria-label': 'Go to next page',
          ref: "next-link-".concat(this.componentID)
        },
        // The rest of this is available for binding if needed by user (i.e. optional with vue-router)
        href: nextPageData === undefined ? null : nextPageData.url,
        page: nextPageData === undefined ? null : nextPageData.page,
        content: 'Next',
        iconClass: this.style['cdr-pagination__caret--next'],
        iconComponent: 'icon-caret-right',
        iconPath: '#caret-right',
        click: function click(e) {
          return _this2.navigate(nextPageData.page, e);
        }
      };
    },
    nextEl: function nextEl() {
      var h = this.$createElement;
      return this.innerValue < this.pages[this.totalPageData - 1].page ? h("li", [this.$scopedSlots.nextLink ? this.$scopedSlots.nextLink(this.nextElAttrs) : h("a", {
        "attrs": _objectSpread$2P({}, this.nextElAttrs.attrs, {
          "href": this.nextElAttrs.href
        }),
        "ref": this.nextElAttrs.attrs.ref,
        "on": {
          "click": this.nextElAttrs.click
        }
      }, [this.nextElAttrs.content, h(this.nextElAttrs.iconComponent, {
        "class": this.nextElAttrs.iconClass
      })])]) : h("li", {
        "attrs": {
          "aria-hidden": "true"
        }
      }, [h("span", {
        "class": [this.nextElAttrs.attrs.class, clsx(this.style['cdr-pagination__link--disabled'])]
      }, [this.nextElAttrs.content, h(this.nextElAttrs.iconComponent, {
        "class": this.nextElAttrs.iconClass,
        "attrs": {
          "inherit-color": true
        }
      })])]);
    },
    desktopEl: function desktopEl() {
      var _context3,
          _this3 = this;

      var h = this.$createElement;
      return _mapInstanceProperty(_context3 = this.paginationData).call(_context3, function (n) {
        var _context4;

        return h("li", {
          "key": _concatInstanceProperty(_context4 = "".concat(n, "-")).call(_context4, _this3.guid()),
          "class": _this3.style['cdr-pagination__li--links']
        }, [n === '&hellip;' && h("span", {
          "class": _this3.style['cdr-pagination__ellipse'],
          "domProps": {
            "innerHTML": n
          }
        }), n !== '&hellip;' && _this3.renderLinkEl(n)]);
      });
    },
    mobileEl: function mobileEl() {
      var _this4 = this,
          _context5;

      var h = this.$createElement;
      return h("li", {
        "class": this.style['cdr-pagination__li--select']
      }, [h("cdr-select", {
        "attrs": {
          "label": "Navigate to page",
          "hide-label": true,
          "id": "select-".concat(this.componentID)
        },
        "on": {
          "change": this.select
        },
        "ref": "select-".concat(this.componentID),
        "model": {
          value: _this4.innerValue,
          callback: function callback($$v) {
            _this4.innerValue = $$v;
          }
        }
      }, [_mapInstanceProperty(_context5 = this.paginationData).call(_context5, function (n) {
        var _context6;

        return n !== '&hellip;' && h("option", {
          "key": _concatInstanceProperty(_context6 = "".concat(n, "-")).call(_context6, _this4.guid()),
          "domProps": {
            "value": n.page
          }
        }, ["Page ", n.page, _this4.totalPages === null ? '' : " of ".concat(_this4.totalPages)]);
      })])]);
    }
  },
  watch: {
    pages: function pages() {
      this.setCurrentIdx(this.innerValue);
    }
  },
  beforeMount: function beforeMount() {
    this.setCurrentIdx(this.innerValue);
  },
  methods: {
    setCurrentIdx: function setCurrentIdx(page) {
      var _context7, _context8;

      this.currentIdx = _indexOfInstanceProperty(_context7 = _mapInstanceProperty(_context8 = this.pages).call(_context8, function (x) {
        return x.page;
      })).call(_context7, page);
    },
    navigate: function navigate(pageNum, e) {
      // Dont do anything if clicking the current active page
      if (pageNum === this.innerValue) {
        e.preventDefault();
        return;
      }

      this.innerValue = pageNum;
      this.$emit('navigate', pageNum, this.currentUrl, e);
      this.$nextTick(function () {
        // Done in a nextTick() to ensure rendering complete
        try {
          // Emulate native link click page reloading behaviour by blurring the
          // paginator and returning focus to the document
          var target = e.currentTarget || e.target;
          target.blur();
        } catch (err) {
          // eslint-disable-next-line no-console
          console.error(err);
        }
      });
    },
    select: function select(page, e) {
      e.preventDefault();

      if (this.$scopedSlots.link) {
        var _context9;

        var ref = this.$scopedSlots.link()[0].context.$refs[_concatInstanceProperty(_context9 = "page-link-".concat(page, "-")).call(_context9, this.componentID)]; // eslint-disable-line max-len


        if (ref.$el) {
          // it's a component (like vue-router)
          ref.$el.click();
        } else {
          // it's standard markup
          ref.click();
        }
      } else {
        var _context10;

        this.$refs[_concatInstanceProperty(_context10 = "page-link-".concat(page, "-")).call(_context10, this.componentID)].click();
      }
    },
    guid: function guid() {
      var _context11, _context12, _context13, _context14, _context15, _context16, _context17;

      function s4() {
        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
      }

      return _concatInstanceProperty(_context11 = _concatInstanceProperty(_context12 = _concatInstanceProperty(_context13 = _concatInstanceProperty(_context14 = _concatInstanceProperty(_context15 = _concatInstanceProperty(_context16 = _concatInstanceProperty(_context17 = "".concat(s4())).call(_context17, s4(), "-")).call(_context16, s4(), "-")).call(_context15, s4(), "-")).call(_context14, s4(), "-")).call(_context13, s4())).call(_context12, s4())).call(_context11, s4());
    },
    renderLinkEl: function renderLinkEl(n) {
      var _context18,
          _this5 = this;

      var h = this.$createElement;
      var linkData = {
        // things that we want to be able to easily bulk bind to scoped slot (for a11y, styling, etc.)
        attrs: {
          class: clsx(this.style['cdr-pagination__link'], {
            current: n.page === this.innerValue
          }),
          'aria-label': n.page === this.innerValue ? "Current page, page ".concat(n.page) : "Go to page ".concat(n.page),
          'aria-current': n.page === this.innerValue ? 'page' : null,
          ref: _concatInstanceProperty(_context18 = "page-link-".concat(n.page, "-")).call(_context18, this.componentID)
        },
        // The rest of this is available for binding if needed by user (i.e. optional with vue-router)
        href: n.url,
        click: function click(e) {
          return _this5.navigate(n.page, e);
        },
        page: n.page,
        content: n.page
      };
      return this.$scopedSlots.link ? this.$scopedSlots.link(linkData) : h("a", {
        "attrs": _objectSpread$2P({}, linkData.attrs, {
          "href": linkData.href
        }),
        "on": {
          "click": linkData.click
        },
        "ref": linkData.attrs.ref
      }, [linkData.content]);
    }
  },
  render: function render() {
    var h = arguments[0];
    return h("nav", {
      "attrs": {
        "aria-label": "Pagination Navigation"
      }
    }, [h("ul", {
      "class": this.style['cdr-pagination']
    }, [this.prevEl, this.desktopEl, this.mobileEl, this.nextEl])]);
  }
};

var style$j = {"cdr-quote":"cdr-quote_4.0.3","cdr-quote__summary":"cdr-quote__summary_4.0.3","cdr-quote__citation":"cdr-quote__citation_4.0.3","cdr-quote--pull":"cdr-quote--pull_4.0.3"};

var CdrQuote = {
  name: 'CdrQuote',
  components: {
    CdrText: CdrText
  },
  mixins: [modifier, space],
  props: {
    tag: {
      type: String,
      default: 'blockquote',
      validator: function validator(value) {
        var _context;

        return _indexOfInstanceProperty(_context = ['blockquote', 'aside', 'q', 'div']).call(_context, value) >= 0 || false;
      }
    },

    /** Caption summary text */
    summary: String,

    /** Caption credit text */
    citation: String
  },
  data: function data() {
    return {
      style: style$j
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-quote';
    },
    summaryBlock: function summaryBlock() {
      var h = this.$createElement;
      return this.summary ? h("p", {
        "class": this.style['cdr-quote__summary']
      }, [this.summary]) : '';
    },
    citationBlock: function citationBlock() {
      var h = this.$createElement;
      return this.citation ? h("cdr-text", {
        "attrs": {
          "tag": "cite",
          "modifier": "citation"
        },
        "class": this.style['cdr-quote__citation']
      }, [this.citation]) : '';
    }
  },
  render: function render() {
    var h = arguments[0];
    var Component = this.tag;
    return h(Component, {
      "class": clsx(this.style[this.baseClass], this.modifierClass, this.space)
    }, [this.summaryBlock, this.$slots.default, this.citationBlock]);
  }
};

var style$k = {"cdr-radio":"cdr-radio_4.0.3","cdr-radio__wrap":"cdr-radio__wrap_4.0.3","cdr-radio__input":"cdr-radio__input_4.0.3","cdr-radio__figure":"cdr-radio__figure_4.0.3","cdr-radio__content":"cdr-radio__content_4.0.3","cdr-radio--small":"cdr-radio--small_4.0.3","cdr-radio--medium":"cdr-radio--medium_4.0.3","cdr-radio--large":"cdr-radio--large_4.0.3","cdr-radio--small@xs":"cdr-radio--small@xs_4.0.3","cdr-radio--medium@xs":"cdr-radio--medium@xs_4.0.3","cdr-radio--large@xs":"cdr-radio--large@xs_4.0.3","cdr-radio--small@sm":"cdr-radio--small@sm_4.0.3","cdr-radio--medium@sm":"cdr-radio--medium@sm_4.0.3","cdr-radio--large@sm":"cdr-radio--large@sm_4.0.3","cdr-radio--small@md":"cdr-radio--small@md_4.0.3","cdr-radio--medium@md":"cdr-radio--medium@md_4.0.3","cdr-radio--large@md":"cdr-radio--large@md_4.0.3","cdr-radio--small@lg":"cdr-radio--small@lg_4.0.3","cdr-radio--medium@lg":"cdr-radio--medium@lg_4.0.3","cdr-radio--large@lg":"cdr-radio--large@lg_4.0.3","cdr-radio--compact":"cdr-radio--compact_4.0.3","cdr-radio--hide-figure":"cdr-radio--hide-figure_4.0.3"};

function ownKeys$2Q(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2Q(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2Q(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2Q(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var CdrRadio = {
  name: 'CdrRadio',
  mixins: [modifier, space, size],
  inheritAttrs: false,
  props: {
    /**
     * Class that is added to the label for custom styles
     */
    labelClass: String,

    /**
     * Class that is added to the input for custom styles
     */
    inputClass: String,

    /**
     * Class that is added to the slot wrapper for custom styles
     */
    contentClass: String,

    /**
     * Sets the name of the radio. Required.
    */
    name: {
      type: String,
      required: true
    },

    /**
     * Sets the value of the radio. Required.
    */
    customValue: {
      type: [String, Number, Boolean, Object, Array, _Symbol, Function]
    },

    /** @ignore v-model binding */
    value: {
      type: [String, Number, Boolean, Object, Array, _Symbol, Function]
    }
  },
  data: function data() {
    return {
      newValue: this.value,
      style: style$k
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-radio';
    }
  },
  watch: {
    value: function value(val) {
      this.newValue = val;
    },
    newValue: function newValue(val) {
      /**
       * `v-model` value. Fires on check/uncheck.
       * @event input
       * @type value | event
       * */
      this.$emit('input', val);
    }
  },
  methods: {
    updateValue: function updateValue(newValue, e) {
      /**
       * Selected radio value. Fires on section.
       * @event change
       * @type boolean|array
       */
      this.$emit('change', newValue, e);
    }
  },
  render: function render() {
    var _this = this;

    var h = arguments[0];
    return h("div", {
      "class": clsx(this.space, this.style['cdr-radio__wrap'])
    }, [h("label", {
      "class": clsx(this.style[this.baseClass], this.modifierClass, this.labelClass, this.sizeClass),
      "ref": "label"
    }, [h("input", _mergeJSXProps([{
      "on": {
        "change": [function ($event) {
          _this.newValue = _this.customValue;
        }, function (e) {
          return _this.updateValue(_this.newValue, e);
        }]
      },
      "class": clsx(this.style['cdr-radio__input'], this.inputClass),
      "attrs": _objectSpread$2Q({
        "type": "radio"
      }, this.$attrs, {
        "name": this.name
      }),
      "ref": "radio",
      "domProps": {
        "checked": this._q(_this.newValue, _this.customValue)
      }
    }, {
      directives: [{
        name: "model",
        value: _this.newValue,
        modifiers: {}
      }]
    }])), h("span", {
      "class": this.style['cdr-radio__figure']
    }), h("div", {
      "class": clsx(this.style['cdr-radio__content'], this.contentClass)
    }, [this.$slots.default])])]);
  }
};

var style$l = {"cdr-rating":"cdr-rating_4.0.3","cdr-rating__icon":"cdr-rating__icon_4.0.3","cdr-rating__count":"cdr-rating__count_4.0.3","cdr-rating__ratings":"cdr-rating__ratings_4.0.3","cdr-rating__caption-sr":"cdr-rating__caption-sr_4.0.3","cdr-rating__placeholder":"cdr-rating__placeholder_4.0.3","cdr-rating__placeholder--no-reviews":"cdr-rating__placeholder--no-reviews_4.0.3","cdr-rating__100":"cdr-rating__100_4.0.3","cdr-rating__75":"cdr-rating__75_4.0.3","cdr-rating__50":"cdr-rating__50_4.0.3","cdr-rating__25":"cdr-rating__25_4.0.3","cdr-rating--linked":"cdr-rating--linked_4.0.3","cdr-rating__number":"cdr-rating__number_4.0.3","cdr-rating--large":"cdr-rating--large_4.0.3","cdr-rating--small":"cdr-rating--small_4.0.3","cdr-rating--primary":"cdr-rating--primary_4.0.3","cdr-rating--secondary":"cdr-rating--secondary_4.0.3","cdr-rating--small@xs":"cdr-rating--small@xs_4.0.3","cdr-rating--large@xs":"cdr-rating--large@xs_4.0.3","cdr-rating--small@sm":"cdr-rating--small@sm_4.0.3","cdr-rating--large@sm":"cdr-rating--large@sm_4.0.3","cdr-rating--small@md":"cdr-rating--small@md_4.0.3","cdr-rating--large@md":"cdr-rating--large@md_4.0.3","cdr-rating--small@lg":"cdr-rating--small@lg_4.0.3","cdr-rating--large@lg":"cdr-rating--large@lg_4.0.3"};

var CdrRating = {
  name: 'CdrRating',
  mixins: [contentPriority, size, space],
  props: {
    /**
     * Rating value (out of 5)
     */
    rating: {
      required: true,
      type: [String, Number],
      default: 0
    },

    /**
     * Total number of ratings
     */
    count: {
      required: false,
      type: [String, Number],
      default: null
    },

    /**
     * Hides the word 'reviews' if true
     */
    compact: {
      type: Boolean,
      default: false
    },

    /**
     * Allows the ratings to act as a link
     */
    href: {
      type: String
    }
  },
  data: function data() {
    return {
      style: style$l
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-rating';
    },
    rounded: function rounded() {
      return Math.round(this.rating * 4) / 4;
    },
    whole: function whole() {
      return Math.floor(this.rounded);
    },
    remainder: function remainder() {
      return this.rounded.toFixed(2).split('.')[1];
    },
    empties: function empties() {
      return 5 - this.whole - (this.remainder > 0 ? 1 : 0);
    },
    formattedCount: function formattedCount() {
      return this.compact ? "(".concat(this.count, ")") : "".concat(this.count);
    },
    remainderEl: function remainderEl() {
      var h = this.$createElement;
      var remainder;

      if (this.remainder === '25') {
        remainder = h("span", {
          "class": clsx(this.style['cdr-rating__icon'], this.style['cdr-rating__25']),
          "attrs": {
            "aria-hidden": "true"
          }
        });
      } else if (this.remainder === '50') {
        remainder = h("span", {
          "class": clsx(this.style['cdr-rating__icon'], this.style['cdr-rating__50']),
          "attrs": {
            "aria-hidden": "true"
          }
        });
      } else if (this.remainder === '75') {
        remainder = h("span", {
          "class": clsx(this.style['cdr-rating__icon'], this.style['cdr-rating__75']),
          "attrs": {
            "aria-hidden": "true"
          }
        });
      }

      return remainder;
    },
    ratingSrText: function ratingSrText() {
      return "rated ".concat(this.rounded, " out of 5");
    },
    countSrText: function countSrText() {
      return this.count !== null ? " with ".concat(this.count, " reviews") : '';
    }
  },
  render: function render() {
    var _context,
        _context2,
        _this = this,
        _context4,
        _context5;

    var h = arguments[0];
    var Component = this.href ? 'a' : 'div';
    return h(Component, {
      "attrs": {
        "href": this.href
      },
      "class": clsx(this.style[this.baseClass], this.contentPriorityClass, this.sizeClass, this.space, this.href ? this.style['cdr-rating--linked'] : '')
    }, [h("div", {
      "class": this.style['cdr-rating__ratings']
    }, [_mapInstanceProperty(_context = _toConsumableArray(_keysInstanceProperty(_context2 = Array(this.whole)).call(_context2))).call(_context, function (n) {
      var _context3;

      return h("span", {
        "class": clsx(_this.style['cdr-rating__icon'], _this.style['cdr-rating__100']),
        "key": _concatInstanceProperty(_context3 = "rating-whole-".concat(n, "-")).call(_context3, _this._uid),
        "attrs": {
          "aria-hidden": "true"
        }
      });
    }), this.remainderEl, _mapInstanceProperty(_context4 = _toConsumableArray(_keysInstanceProperty(_context5 = Array(this.empties)).call(_context5))).call(_context4, function (n) {
      var _context6;

      return h("span", {
        "class": clsx(_this.style['cdr-rating__icon'], _this.rounded > 0 || _this.count > 0 ? _this.style['cdr-rating__placeholder'] : _this.style['cdr-rating__placeholder--no-reviews']),
        "key": _concatInstanceProperty(_context6 = "rating-empty-".concat(n, "-")).call(_context6, _this._uid),
        "attrs": {
          "aria-hidden": "true"
        }
      });
    })]), this.count !== null ? h("span", {
      "attrs": {
        "aria-hidden": "true"
      },
      "class": this.style['cdr-rating__count']
    }, [this.href && h("span", {
      "class": this.style['cdr-rating__number']
    }, [this.rounded]), h("span", [this.formattedCount]), !this.compact && h("span", ["\xA0Reviews"])]) : '', h("span", {
      "class": this.style['cdr-rating__caption-sr']
    }, [this.ratingSrText, this.countSrText])]);
  }
};

var style$m = {"cdr-tab-panel":"cdr-tab-panel_4.0.3","flyLeft":"flyLeft_4.0.3","flyRight":"flyRight_4.0.3"};

function ownKeys$2R(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2R(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context; _forEachInstanceProperty(_context = ownKeys$2R(Object(source), true)).call(_context, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context2; _forEachInstanceProperty(_context2 = ownKeys$2R(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var CdrTabPanel = {
  name: 'CdrTabPanel',
  mixins: [modifier],
  props: {
    /**
     * Required string value that shows up on tab header
     */
    name: {
      type: String,
      required: true
    },

    /**
     * Optional extra reference value to be set on the tab, otherwise
     * the tab name will be used for reference.
     */
    id: String
  },
  data: function data() {
    return {
      active: false,
      offsetX: 0,
      tabId: this.id || this.name,
      animationDirection: 'default',
      style: style$m
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-tab-panel';
    },
    animationHooks: function animationHooks() {
      return _objectSpread$2R({
        beforeEnter: this.setEnterStart,
        afterEnter: this.setEnterEnd,
        beforeLeave: this.setLeaveStart,
        afterLeave: this.setLeaveEnd
      }, this.$listeners);
    }
  },
  methods: {
    setActive: function setActive(state) {
      this.active = state;
      this.$emit('tab-change', state, this.tabId);
      this.$emit('tabChange', state, this.tabId);
    },
    setAnimationDirection: function setAnimationDirection(direction) {
      this.animationDirection = direction;
    },
    setOffsetX: function setOffsetX(x) {
      this.offsetX = x;
    },
    setEnterStart: function setEnterStart(element) {
      var el = element;
      el.style.animationDirection = 'reverse';
      el.style.animationTimingFunction = 'cubic-bezier(0.4, 0, 0.68, .06)';
      el.classList.add(this.style[this.animationDirection]);
    },
    setEnterEnd: function setEnterEnd(element) {
      var el = element;
      el.style.animationDirection = '';
      el.classList.remove(this.style[this.animationDirection]);
    },
    setLeaveStart: function setLeaveStart(element) {
      var el = element;
      el.classList.add(this.style[this.animationDirection]);
      el.style.animationTimingFunction = 'cubic-bezier(0.32, 0.94, 0.6, 1)';
    },
    setLeaveEnd: function setLeaveEnd(element) {
      var el = element;
      el.classList.remove(this.style[this.animationDirection]);
    },
    handleUpArrowNav: function handleUpArrowNav() {
      this.$parent.setFocusToActiveTabHeader();
    }
  },
  render: function render() {
    var _this = this;

    var h = arguments[0];
    return h("transition", {
      "attrs": {
        "name": "fly"
      },
      "on": _objectSpread$2R({}, this.animationHooks)
    }, [h("div", {
      "directives": [{
        name: "show",
        value: this.active
      }],
      "attrs": {
        "aria-hidden": !this.active,
        "id": this.tabId,
        "tabindex": "0",
        "role": "tabpanel"
      },
      "class": clsx(this.style[this.baseClass], this.modifierClass),
      "ref": "cdrTabPanelContainer",
      "key": this.name,
      "on": {
        "keydown": function keydown($event) {
          if (!("button" in $event) && _this._k($event.keyCode, "up", 38, $event.key, ["Up", "ArrowUp"])) return null;
          $event.preventDefault();
          return _this.handleUpArrowNav($event);
        }
      }
    }, [this.$slots.default])]);
  }
};

var style$n = {"cdr-tabs":"cdr-tabs_4.0.3","cdr-tabs__header-container":"cdr-tabs__header-container_4.0.3","cdr-tabs__gradient-container":"cdr-tabs__gradient-container_4.0.3","cdr-tabs__header":"cdr-tabs__header_4.0.3","cdr-tabs__header-gradient-left":"cdr-tabs__header-gradient-left_4.0.3","cdr-tabs__header-gradient-right":"cdr-tabs__header-gradient-right_4.0.3","cdr-tabs__header-item":"cdr-tabs__header-item_4.0.3","cdr-tabs__header-item-label":"cdr-tabs__header-item-label_4.0.3","cdr-tabs__underline":"cdr-tabs__underline_4.0.3","cdr-tabs__content-container":"cdr-tabs__content-container_4.0.3","fade-enter-active":"fade-enter-active_4.0.3","fade-leave-active":"fade-leave-active_4.0.3","fade-enter":"fade-enter_4.0.3","fade-leave-to":"fade-leave-to_4.0.3","cdr-tabs--compact":"cdr-tabs--compact_4.0.3","cdr-tabs--no-border":"cdr-tabs--no-border_4.0.3","cdr-tabs--full-width":"cdr-tabs--full-width_4.0.3","cdr-tabs--centered":"cdr-tabs--centered_4.0.3"};

var CdrTabs = {
  name: 'CdrTabs',
  mixins: [modifier],
  props: {
    height: {
      type: String,
      default: '240px'
    }
  },
  data: function data() {
    return {
      tabs: [],
      underlineOffsetX: 0,
      underlineWidth: 0,
      underlineScrollX: 0,
      activeTabIndex: 0,
      headerWidth: 0,
      headerOverflow: false,
      overflowLeft: false,
      overflowRight: false,
      animationInProgress: false,
      style: style$n
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-tabs';
    },
    underlineStyle: function underlineStyle() {
      return {
        transform: "translateX(".concat(this.underlineOffsetX, "px)"),
        width: "".concat(this.underlineWidth, "px")
      };
    }
  },
  mounted: function mounted() {
    var _context,
        _context2,
        _this = this;

    this.tabs = _filterInstanceProperty(_context = _mapInstanceProperty(_context2 = this.$slots.default || []).call(_context2, function (vnode) {
      return vnode.componentInstance;
    })).call(_context, function (tab) {
      return tab;
    }); // get vue component children in the slot

    if (this.tabs[this.activeTabIndex] && this.tabs[this.activeTabIndex].setActive) {
      this.tabs[this.activeTabIndex].setActive(true);
    }

    this.$nextTick(function () {
      _this.headerWidth = _this.getHeaderWidth();

      _this.calculateOverflow();

      _setTimeout(function () {
        _this.updateUnderline();
      }, 100);
    }); // Check for header overflow on window resize for gradient behavior.

    window.addEventListener('resize', debounce(function () {
      _this.headerWidth = _this.getHeaderWidth();

      _this.calculateOverflow();

      _this.updateUnderline();
    }, 500)); // Check for header overflow on widow resize for gradient behavior.

    this.$refs.cdrTabsHeader.parentElement.addEventListener('scroll', debounce(function () {
      _this.calculateOverflow();

      _this.updateUnderline();
    }, 250));
  },
  methods: {
    handleClick: function handleClick(tabClicked) {
      var _context3,
          _context4,
          _this2 = this;

      var newSelectedTab = _findInstanceProperty(_context3 = this.tabs).call(_context3, function (tab) {
        return tabClicked.name === tab.name;
      });

      _forEachInstanceProperty(_context4 = this.tabs).call(_context4, function (tab, index) {
        if (newSelectedTab.name === tab.name) {
          if (_this2.activeTabIndex < index) {
            tab.setAnimationDirection('flyRight');

            _this2.tabs[_this2.activeTabIndex].setAnimationDirection('flyLeft');
          } else {
            tab.setAnimationDirection('flyLeft');

            _this2.tabs[_this2.activeTabIndex].setAnimationDirection('flyRight');
          }

          _this2.activeTabIndex = index;

          _this2.hideScrollBar();

          _this2.$nextTick(function () {
            return tab.setActive(true);
          });
        } else {
          _this2.$nextTick(function () {
            return tab.setActive(false);
          });
        }
      });

      this.updateUnderline();
    },
    calculateOverflow: function calculateOverflow() {
      var containerWidth = 0;

      if (this.$refs.cdrTabsContainer) {
        containerWidth = this.$refs.cdrTabsContainer.offsetWidth;
      }

      this.headerOverflow = this.headerWidth > containerWidth;

      if (this.headerOverflow) {
        // Get Scroll Position
        var scrollX = this.$refs.cdrTabsHeader.parentElement.scrollLeft;
        this.overflowLeft = scrollX > 1;
        this.overflowRight = scrollX + 1 < this.headerWidth - containerWidth;
      } else {
        this.overflowLeft = false;
        this.overflowRight = false;
      }
    },
    updateUnderline: function updateUnderline() {
      var elements = _Array$from(this.$refs.cdrTabsHeader.children);

      if (elements.length > 0) {
        var activeTab = elements[this.activeTabIndex];
        this.underlineOffsetX = activeTab.offsetLeft - this.$refs.cdrTabsHeader.parentElement.scrollLeft;
        this.underlineWidth = activeTab.firstChild.offsetWidth;
      }
    },
    rightArrowNav: function rightArrowNav() {
      if (!this.animationInProgress) {
        if (this.activeTabIndex < this.tabs.length - 1) {
          this.tabs[this.activeTabIndex].setAnimationDirection('flyLeft');
          this.tabs[this.activeTabIndex + 1].setAnimationDirection('flyRight');
          this.hideScrollBar();
          this.$nextTick(this.tabs[this.activeTabIndex].setActive(false));
          this.activeTabIndex += 1;
          this.$nextTick(this.tabs[this.activeTabIndex].setActive(true));
        }

        this.navAnimationProgress();
      }
    },
    leftArrowNav: function leftArrowNav() {
      if (!this.animationInProgress) {
        if (this.activeTabIndex > 0) {
          this.tabs[this.activeTabIndex].setAnimationDirection('flyRight');
          this.tabs[this.activeTabIndex - 1].setAnimationDirection('flyLeft');
          this.hideScrollBar();
          this.$nextTick(this.tabs[this.activeTabIndex].setActive(false));
          this.activeTabIndex -= 1;
          this.$nextTick(this.tabs[this.activeTabIndex].setActive(true));
        }

        this.navAnimationProgress();
      }
    },
    navAnimationProgress: function navAnimationProgress() {
      var _this3 = this;

      if (this.$refs.cdrTabsHeader.children[this.activeTabIndex]) {
        this.animationInProgress = true;
        delay(function () {
          _this3.animationInProgress = false;
        }, 600);
        this.updateUnderline();
        this.$refs.cdrTabsHeader.children[this.activeTabIndex].children[0].focus();
      }
    },
    handleDownArrowNav: function handleDownArrowNav() {
      if (!this.animationInProgress) {
        this.$el.lastElementChild.children[this.activeTabIndex].focus();
      }
    },
    setFocusToActiveTabHeader: function setFocusToActiveTabHeader() {
      this.$refs.cdrTabsHeader.children[this.activeTabIndex].children[0].focus();
    },
    getHeaderWidth: function getHeaderWidth() {
      var headerElements = [];

      if (this.$refs.cdrTabsHeader) {
        headerElements = _Array$from(this.$refs.cdrTabsHeader.children);
      }

      var totalWidth = 0;

      _forEachInstanceProperty(headerElements).call(headerElements, function (element) {
        totalWidth += element.offsetWidth || 0;
      });

      return totalWidth;
    },
    hideScrollBar: function hideScrollBar() {
      var styleRef = this.$refs.cdrTabsContainer.style;
      window.addEventListener('transitionend', function () {
        styleRef.setProperty('overflow-x', 'unset');
      }, {
        once: true
      });
      styleRef.setProperty('overflow-x', 'hidden');
    }
  },
  render: function render() {
    var _this4 = this,
        _context5;

    var h = arguments[0];
    return h("div", {
      "class": clsx(this.style[this.baseClass], this.modifierClass),
      "ref": "cdrTabsContainer",
      "style": {
        height: this.height
      }
    }, [h("div", {
      "class": clsx(this.overflowLeft ? this.style['cdr-tabs__header-gradient-left'] : '', this.overflowRight ? this.style['cdr-tabs__header-gradient-right'] : '', this.style['cdr-tabs__gradient-container']),
      "on": {
        "keyup": [function ($event) {
          if (!("button" in $event) && _this4._k($event.keyCode, "right", 39, $event.key, ["Right", "ArrowRight"])) return null;
          if ("button" in $event && $event.button !== 2) return null;
          return _this4.rightArrowNav($event);
        }, function ($event) {
          if (!("button" in $event) && _this4._k($event.keyCode, "left", 37, $event.key, ["Left", "ArrowLeft"])) return null;
          if ("button" in $event && $event.button !== 0) return null;
          return _this4.leftArrowNav($event);
        }],
        "keydown": function keydown($event) {
          if (!("button" in $event) && _this4._k($event.keyCode, "down", 40, $event.key, ["Down", "ArrowDown"])) return null;
          $event.preventDefault();
          return _this4.handleDownArrowNav($event);
        }
      }
    }, [h("nav", {
      "class": clsx(this.overflowLeft ? this.style['cdr-tabs__header-gradient-left'] : '', this.overflowRight ? this.style['cdr-tabs__header-gradient-right'] : '', this.style['cdr-tabs__header-container'])
    }, [h("ol", {
      "class": this.style['cdr-tabs__header'],
      "attrs": {
        "role": "tablist"
      },
      "ref": "cdrTabsHeader"
    }, [_mapInstanceProperty(_context5 = this.tabs).call(_context5, function (tab, index) {
      var _context6;

      return h("li", {
        "attrs": {
          "role": "tab",
          "aria-selected": tab.active
        },
        "key": tab.id ? tab.id : _concatInstanceProperty(_context6 = "".concat(tab.name, "-")).call(_context6, index),
        "class": clsx(tab.active ? _this4.style['cdr-tabs__header-item-active'] : '', _this4.style['cdr-tabs__header-item'])
      }, [h("a", {
        "attrs": {
          "href": "#".concat(tab.id || tab.name)
        },
        "class": _this4.style['cdr-tabs__header-item-label'],
        "on": {
          "click": function click($event) {
            $event.preventDefault();
            return function (e) {
              return _this4.handleClick(tab, e);
            }($event);
          }
        }
      }, [tab.name])]);
    })])]), h("div", {
      "class": this.style['cdr-tabs__underline'],
      "style": this.underlineStyle
    })]), h("div", {
      "class": this.style['cdr-tabs__content-container'],
      "ref": "slotWrapper"
    }, [this.$slots.default])]);
  }
};

export { CdrAccordion, CdrBreadcrumb, CdrButton, CdrCaption, CdrCard, CdrCheckbox, CdrCol, CdrCta, CdrDataTable, CdrIcon, CdrImg, CdrInput, CdrLink, CdrList, CdrModal, CdrPagination, CdrQuote, CdrRadio, CdrRating, CdrRow, CdrSelect, CdrTabPanel, CdrTabs, CdrText, accountProfile as IconAccountProfile, accountProfileFill as IconAccountProfileFill, arrowDown as IconArrowDown, arrowLeft as IconArrowLeft, arrowRight as IconArrowRight, arrowUp as IconArrowUp, atv as IconAtv, bedOutline as IconBedOutline, bikeShop as IconBikeShop, binoculars as IconBinoculars, birding as IconBirding, boat as IconBoat, boating as IconBoating, bookmarkFill as IconBookmarkFill, bookmarkStroke as IconBookmarkStroke, brandAbstract as IconBrandAbstract, brandCodeSandbox as IconBrandCodeSandbox, brandGithub as IconBrandGithub, brandLinkedin as IconBrandLinkedin, brandReiIceAxes as IconBrandReiIceAxes, brandSketch as IconBrandSketch, buddies as IconBuddies, bus as IconBus, calendar as IconCalendar, camera as IconCamera, canoe as IconCanoe, car as IconCar, IconCaretDown, IconCaretLeft, IconCaretRight, caretUp as IconCaretUp, cart as IconCart, cartFill as IconCartFill, chainLink as IconChainLink, chat as IconChat, checkFill as IconCheckFill, checkLg as IconCheckLg, checkSm as IconCheckSm, checkStroke as IconCheckStroke, climb as IconClimb, clipboard as IconClipboard, clock as IconClock, codeHtml as IconCodeHtml, codeJs as IconCodeJs, compass as IconCompass, copy as IconCopy, couponFill as IconCouponFill, couponStroke as IconCouponStroke, creditCard as IconCreditCard, day as IconDay, diving as IconDiving, dog as IconDog, download as IconDownload, edit as IconEdit, elevation as IconElevation, expand as IconExpand, experiencesBackpacking as IconExperiencesBackpacking, experiencesCamping as IconExperiencesCamping, experiencesClimbing as IconExperiencesClimbing, experiencesClothing as IconExperiencesClothing, experiencesCycling as IconExperiencesCycling, experiencesFamily as IconExperiencesFamily, experiencesFitness as IconExperiencesFitness, experiencesHiking as IconExperiencesHiking, experiencesOutdoorBasics as IconExperiencesOutdoorBasics, experiencesPaddling as IconExperiencesPaddling, experiencesRentals as IconExperiencesRentals, experiencesSnowsports as IconExperiencesSnowsports, experiencesTravel as IconExperiencesTravel, externalLink as IconExternalLink, eyeHide as IconEyeHide, eyeShow as IconEyeShow, facebook as IconFacebook, filter as IconFilter, filterAlt as IconFilterAlt, findLocation as IconFindLocation, fire as IconFire, fishing as IconFishing, freeProduct as IconFreeProduct, gridView as IconGridView, heartFill as IconHeartFill, heartStroke as IconHeartStroke, hike as IconHike, history as IconHistory, home as IconHome, horse as IconHorse, horseshoe as IconHorseshoe, image as IconImage, informationFill as IconInformationFill, informationStroke as IconInformationStroke, instagram as IconInstagram, kayak as IconKayak, listRagged as IconListRagged, listView as IconListView, locationPinFill as IconLocationPinFill, locationPinStroke as IconLocationPinStroke, lockLockedFill as IconLockLockedFill, lockLockedStroke as IconLockLockedStroke, lockUnlockedStroke as IconLockUnlockedStroke, mail as IconMail, memberCard as IconMemberCard, microphone as IconMicrophone, minusFill as IconMinusFill, minusLg as IconMinusLg, minusSm as IconMinusSm, minusStroke as IconMinusStroke, moreFunctions as IconMoreFunctions, navigationMenu as IconNavigationMenu, night as IconNight, paddle as IconPaddle, pause as IconPause, pauseFill as IconPauseFill, pauseStroke as IconPauseStroke, photography as IconPhotography, picnic as IconPicnic, pinterest as IconPinterest, plane as IconPlane, play as IconPlay, playFill as IconPlayFill, playStroke as IconPlayStroke, playground as IconPlayground, plugin as IconPlugin, plusFill as IconPlusFill, plusLg as IconPlusLg, plusSm as IconPlusSm, plusStroke as IconPlusStroke, print as IconPrint, protectionFill as IconProtectionFill, protectionStroke as IconProtectionStroke, questionFill as IconQuestionFill, questionStroke as IconQuestionStroke, refresh as IconRefresh, reload as IconReload, run as IconRun, scanBarcode as IconScanBarcode, search as IconSearch, serviceShop as IconServiceShop, shipping as IconShipping, shoppingBag as IconShoppingBag, shoppingBagFill as IconShoppingBagFill, shrink as IconShrink, sizeChart as IconSizeChart, ski as IconSki, skiBoot as IconSkiBoot, snow as IconSnow, snowShop as IconSnowShop, sort as IconSort, star100 as IconStar100, star25 as IconStar25, star50 as IconStar50, star75 as IconStar75, starStroke as IconStarStroke, swim as IconSwim, telephone as IconTelephone, tent as IconTent, trash as IconTrash, twitter as IconTwitter, upload as IconUpload, verifiedPurchaser as IconVerifiedPurchaser, warningFill as IconWarningFill, warningStroke as IconWarningStroke, warningTri as IconWarningTri, water as IconWater, wilderness as IconWilderness, xFill as IconXFill, IconXLg, xSm as IconXSm, xStroke as IconXStroke, youtube as IconYoutube, zoomIn as IconZoomIn, zoomOut as IconZoomOut };
