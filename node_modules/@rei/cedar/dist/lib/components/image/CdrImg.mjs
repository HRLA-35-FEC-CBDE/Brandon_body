import clsx from 'clsx';
import _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';
import _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';
import _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';
import _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';
import _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';
import _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';
import _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';
import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';
import _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';
import _concatInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/concat';
import _mapInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/map';
import modifier from '../../mixins/modifier.mjs';
import _indexOfInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/index-of';
import style from './styles/CdrImg.mjs';

function ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { var _context7; _forEachInstanceProperty(_context7 = ownKeys(Object(source), true)).call(_context7, function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { var _context8; _forEachInstanceProperty(_context8 = ownKeys(Object(source))).call(_context8, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }
var CdrImg = {
  name: 'CdrImg',
  mixins: [modifier],
  props: {
    /**
     * Required. Image source url.
     */
    src: {
      type: String,
      required: true
    },

    /**
     * Required. Image alt text.
     */
    alt: {
      type: String,
      default: ''
    },

    /**
     * Enable lazy loading.
     */
    lazy: {
      type: Boolean
    },

    /**
     * Object of lazy options
     */
    lazyOpts: {
      type: Object,
      default: function _default() {}
    },

    /**
     * Aspect ratio of the media container. {auto, square, 1-2, 2-3, 3-4, 9-16, 2-1, 3-2, 4-3, 16-9}
     */
    ratio: {
      type: String,
      validator: function validator(value) {
        var _context;

        return _indexOfInstanceProperty(_context = ['auto', 'square', '1-2', '2-3', '3-4', '9-16', '2-1', '3-2', '4-3', '16-9']).call(_context, value) >= 0 || false;
      }
    },

    /**
     * sm breakpoint and above
     */
    ratioSm: {
      type: String,
      validator: function validator(value) {
        var _context2;

        return _indexOfInstanceProperty(_context2 = ['auto', 'square', '1-2', '2-3', '3-4', '9-16', '2-1', '3-2', '4-3', '16-9']).call(_context2, value) >= 0 || false;
      }
    },

    /**
     * md breakpoint and above
     */
    ratioMd: {
      type: String,
      validator: function validator(value) {
        var _context3;

        return _indexOfInstanceProperty(_context3 = ['auto', 'square', '1-2', '2-3', '3-4', '9-16', '2-1', '3-2', '4-3', '16-9']).call(_context3, value) >= 0 || false;
      }
    },

    /**
     * lg breakpoint and above
     */
    ratioLg: {
      type: String,
      validator: function validator(value) {
        var _context4;

        return _indexOfInstanceProperty(_context4 = ['auto', 'square', '1-2', '2-3', '3-4', '9-16', '2-1', '3-2', '4-3', '16-9']).call(_context4, value) >= 0 || false;
      }
    },

    /**
     * Requires a `ratio`. Area to crop the image overflow to. {top, y-center, bottom} {left, x-center, right}
     */
    crop: {
      type: String
    },

    /**
     * Requires a `ratio`. Scale the image to be as large as possible to fill the area (background-position: cover;)
     */
    cover: {
      type: Boolean
    },

    /**
     * Sets a border radius to an element {square, top, right, bottom, left}
     */
    radius: {
      type: String,
      validator: function validator(value) {
        var _context5;

        return _indexOfInstanceProperty(_context5 = ['circle', 'rounded']).call(_context5, value) >= 0 || false;
      }
    }
  },
  data: function data() {
    return {
      style: style
    };
  },
  computed: {
    baseClass: function baseClass() {
      return 'cdr-image';
    },
    lazyClass: function lazyClass() {
      var classObj = {};
      classObj['lazy-image'] = this.lazy;
      return classObj;
    },
    radiusClass: function radiusClass() {
      var classObj = {};
      classObj[this.style["cdr-image--".concat(this.radius)]] = this.radius;
      return classObj;
    },
    ratioClass: function ratioClass() {
      var classObj = {};
      classObj[this.style["cdr-media-frame--".concat(this.ratio)]] = this.ratio;
      classObj[this.style["cdr-media-frame--".concat(this.ratioSm, "@sm")]] = this.ratioSm;
      classObj[this.style["cdr-media-frame--".concat(this.ratioMd, "@md")]] = this.ratioMd;
      classObj[this.style["cdr-media-frame--".concat(this.ratioLg, "@lg")]] = this.ratioLg;
      return classObj;
    },
    coverClass: function coverClass() {
      var classObj = {};
      classObj[this.style['cdr-media-frame__cover']] = true;
      classObj[this.style['cdr-media-frame__cover--crop']] = this.crop;
      classObj[this.style['cdr-media-frame__cover--cover']] = this.cover;
      return classObj;
    },
    cropClass: function cropClass() {
      var _this = this;

      var base = 'cdr-media-frame';
      var cropArr = this.crop ? this.crop.split(' ') : [];
      var final = [];
      final = _concatInstanceProperty(final).call(final, _mapInstanceProperty(cropArr).call(cropArr, function (mod) {
        return _this.modifyClassName(base, mod);
      }));
      return final.join(' ');
    },
    styleObject: function styleObject() {
      return {
        backgroundImage: "url(".concat(this.src, ")")
      };
    },
    lazyAttrs: function lazyAttrs() {
      var _this2 = this;

      var attrObj = {};

      if (this.lazy) {
        var _context6;

        _forEachInstanceProperty(_context6 = _Object$keys(this.lazyOpts)).call(_context6, function (opt) {
          attrObj["data-".concat(opt)] = _this2.lazyOpts[opt];
        });
      }

      return attrObj;
    }
  },
  render: function render() {
    var h = arguments[0];

    if (this.ratio) {
      return h("div", {
        "class": clsx(this.style['cdr-media-frame'], this.ratioClass, this.cropClass)
      }, [h("div", {
        "class": clsx(this.coverClass, this.lazyClass, this.radiusClass),
        "style": this.styleObject,
        "attrs": _objectSpread({
          "aria-hidden": "true"
        }, this.lazyAttrs)
      }), h("img", {
        "class": clsx(this.style['cdr-media-frame__image'], this.style['cdr-media-frame__image--hidden'], this.style[this.baseClass], this.modifierClass, this.radiusClass),
        "attrs": {
          "src": this.src,
          "alt": this.alt
        }
      })]);
    }

    return h("img", {
      "class": clsx(this.style[this.baseClass], this.modifierClass, this.radiusClass, this.lazyClass),
      "attrs": _objectSpread({
        "src": this.src,
        "alt": this.alt
      }, this.lazyAttrs)
    });
  }
};

export default CdrImg;
